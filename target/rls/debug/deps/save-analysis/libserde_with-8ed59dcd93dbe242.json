{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1","program":"C:\\Users\\alain.witkowski\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","serde_with","--edition=2018","C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=0","--cfg","feature=\"default\"","--cfg","feature=\"macros\"","--cfg","feature=\"serde_with_macros\"","-C","metadata=8ed59dcd93dbe242","-C","extra-filename=-8ed59dcd93dbe242","--out-dir","c:\\boulot\\follow\\RH-Matching-Backend\\target\\rls\\debug\\deps","-L","dependency=c:\\boulot\\follow\\RH-Matching-Backend\\target\\rls\\debug\\deps","--extern","serde=c:\\boulot\\follow\\RH-Matching-Backend\\target\\rls\\debug\\deps\\libserde-525dda14ee9ba2ab.rmeta","--extern","serde_with_macros=c:\\boulot\\follow\\RH-Matching-Backend\\target\\rls\\debug\\deps\\serde_with_macros-91b4237c961718db.dll","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\alain.witkowski\\.rustup/toolchains/nightly-x86_64-pc-windows-msvc"],"output":"c:\\boulot\\follow\\RH-Matching-Backend\\target\\rls\\debug\\deps\\libserde_with-8ed59dcd93dbe242.rmeta"},"prelude":{"crate_id":{"name":"serde_with","disambiguator":[5420132231055497173,12112653498327495202]},"crate_root":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src","external_crates":[{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[9692112137008559588,2338260418742546759]}},{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[6793375821364100956,1977476470487761730]}},{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12127507174405006601,16904355616426790179]}},{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11442534744397595723,17249706061084217292]}},{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8290285128153629620,5457655969661569285]}},{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[1331056181559175587,10367469256582268827]}},{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17539204049578980739,14279095908370612950]}},{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11416202000959860181,16002808916448349423]}},{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[15996931893539602890,12021989227085004909]}},{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11006369346947015869,12629203874040878905]}},{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[9324299596992278055,4716464803590583331]}},{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[17286888103038733980,5619676640534054088]}},{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","num":13,"id":{"name":"serde","disambiguator":[1545284173108800165,6325392190257095362]}},{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","num":14,"id":{"name":"serde_derive","disambiguator":[796659862950359735,4287954315658911528]}},{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","num":15,"id":{"name":"serde_with_macros","disambiguator":[9220680261532329636,3274804003960736189]}}],"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":0,"byte_end":43031,"line_start":1,"line_end":1142,"column_start":1,"column_end":38}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":9157,"byte_end":9170,"line_start":261,"line_end":261,"column_start":21,"column_end":34},"alias_span":null,"name":"DeserializeAs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3508},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":9178,"byte_end":9197,"line_start":261,"line_end":261,"column_start":42,"column_end":61},"alias_span":null,"name":"StringWithSeparator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":743},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":9204,"byte_end":9215,"line_start":261,"line_end":261,"column_start":68,"column_end":79},"alias_span":null,"name":"SerializeAs","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":9436,"byte_end":9437,"line_start":266,"line_end":266,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":0,"byte_end":43031,"line_start":1,"line_end":1142,"column_start":1,"column_end":38},"name":"","qualname":"::","value":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":140},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":259},{"krate":0,"index":671},{"krate":0,"index":763},{"krate":0,"index":952},{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":5842},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":5846},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":5850},{"krate":0,"index":1124},{"krate":0,"index":5260},{"krate":0,"index":5281},{"krate":0,"index":5279},{"krate":0,"index":5276},{"krate":0,"index":5277},{"krate":0,"index":5273},{"krate":0,"index":5274},{"krate":0,"index":5271},{"krate":0,"index":5269},{"krate":0,"index":5266},{"krate":0,"index":5264},{"krate":0,"index":5262},{"krate":0,"index":1126},{"krate":0,"index":5282},{"krate":0,"index":5303},{"krate":0,"index":5301},{"krate":0,"index":5298},{"krate":0,"index":5299},{"krate":0,"index":5295},{"krate":0,"index":5296},{"krate":0,"index":5293},{"krate":0,"index":5291},{"krate":0,"index":5288},{"krate":0,"index":5286},{"krate":0,"index":5284},{"krate":0,"index":1128},{"krate":0,"index":5304},{"krate":0,"index":5317},{"krate":0,"index":5314},{"krate":0,"index":5311},{"krate":0,"index":5308},{"krate":0,"index":1130},{"krate":0,"index":5319},{"krate":0,"index":5327},{"krate":0,"index":5325},{"krate":0,"index":5323},{"krate":0,"index":5321},{"krate":0,"index":5328},{"krate":0,"index":5336},{"krate":0,"index":5334},{"krate":0,"index":5332},{"krate":0,"index":5330},{"krate":0,"index":5337},{"krate":0,"index":5345},{"krate":0,"index":5343},{"krate":0,"index":5341},{"krate":0,"index":5339},{"krate":0,"index":5346},{"krate":0,"index":5359},{"krate":0,"index":5356},{"krate":0,"index":5353},{"krate":0,"index":5350},{"krate":0,"index":5361},{"krate":0,"index":5369},{"krate":0,"index":5367},{"krate":0,"index":5365},{"krate":0,"index":5363},{"krate":0,"index":5370},{"krate":0,"index":5387},{"krate":0,"index":5383},{"krate":0,"index":5379},{"krate":0,"index":5375},{"krate":0,"index":5390},{"krate":0,"index":5407},{"krate":0,"index":5403},{"krate":0,"index":5399},{"krate":0,"index":5395},{"krate":0,"index":5410},{"krate":0,"index":5427},{"krate":0,"index":5423},{"krate":0,"index":5419},{"krate":0,"index":5415},{"krate":0,"index":5430},{"krate":0,"index":5447},{"krate":0,"index":5443},{"krate":0,"index":5439},{"krate":0,"index":5435}],"decl_id":null,"docs":" [![docs.rs badge](https://docs.rs/serde_with/badge.svg)](https://docs.rs/serde_with/)\n [![crates.io badge](https://img.shields.io/crates/v/serde_with.svg)](https://crates.io/crates/serde_with/)\n [![Build Status](https://github.com/jonasbb/serde_with/workflows/Rust%20CI/badge.svg)](https://github.com/jonasbb/serde_with)\n [![codecov](https://codecov.io/gh/jonasbb/serde_with/branch/master/graph/badge.svg)](https://codecov.io/gh/jonasbb/serde_with)","sig":null,"attributes":[{"value":"deny(missing_copy_implementations, missing_debug_implementations,\n       missing_docs, trivial_casts, trivial_numeric_casts,\n       unused_extern_crates, unused_import_braces, unused_qualifications,\n       variant_size_differences)","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":0,"byte_end":252,"line_start":1,"line_end":11,"column_start":1,"column_end":3}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":253,"byte_end":279,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"allow(clippy :: unknown_clippy_lints)","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":811,"byte_end":850,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/ [![docs.rs badge](https://docs.rs/serde_with/badge.svg)](https://docs.rs/serde_with/)","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":852,"byte_end":941,"line_start":30,"line_end":30,"column_start":1,"column_end":90}},{"value":"/ [![crates.io badge](https://img.shields.io/crates/v/serde_with.svg)](https://crates.io/crates/serde_with/)","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":942,"byte_end":1052,"line_start":31,"line_end":31,"column_start":1,"column_end":111}},{"value":"/ [![Build Status](https://github.com/jonasbb/serde_with/workflows/Rust%20CI/badge.svg)](https://github.com/jonasbb/serde_with)","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":1053,"byte_end":1182,"line_start":32,"line_end":32,"column_start":1,"column_end":130}},{"value":"/ [![codecov](https://codecov.io/gh/jonasbb/serde_with/branch/master/graph/badge.svg)](https://codecov.io/gh/jonasbb/serde_with)","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":1183,"byte_end":1313,"line_start":33,"line_end":33,"column_start":1,"column_end":131}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":1314,"byte_end":1317,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ---","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":1318,"byte_end":1325,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":1326,"byte_end":1329,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ This crate provides custom de/serialization helpers to use in combination with [serde's with-annotation][with-annotation] and with the improved [`serde_as`][user guide]-annotation.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":1330,"byte_end":1514,"line_start":37,"line_end":37,"column_start":1,"column_end":185}},{"value":"/ Some common use cases are:","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":1515,"byte_end":1545,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":1546,"byte_end":1549,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ * De/Serializing a type using the `Display` and `FromStr` traits, e.g., for `u8`, `url::Url`, or `mime::Mime`.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":1550,"byte_end":1664,"line_start":40,"line_end":40,"column_start":1,"column_end":115}},{"value":"/      Check [`DisplayFromStr`][] or [`serde_with::rust::display_fromstr`][display_fromstr] for details.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":1665,"byte_end":1771,"line_start":41,"line_end":41,"column_start":1,"column_end":107}},{"value":"/ * Skip serializing all empty `Option` types with [`#[skip_serializing_none]`][skip_serializing_none].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":1772,"byte_end":1877,"line_start":42,"line_end":42,"column_start":1,"column_end":106}},{"value":"/ * Apply a prefix to each field name of a struct, without changing the de/serialize implementations of the struct using [`with_prefix!`][].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":1878,"byte_end":2020,"line_start":43,"line_end":43,"column_start":1,"column_end":143}},{"value":"/ * Deserialize a comma separated list like `#hash,#tags,#are,#great` into a `Vec<String>`.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":2021,"byte_end":2114,"line_start":44,"line_end":44,"column_start":1,"column_end":94}},{"value":"/      Check the documentation for [`serde_with::rust::StringWithSeparator::<CommaSeparator>`][StringWithSeparator].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":2115,"byte_end":2233,"line_start":45,"line_end":45,"column_start":1,"column_end":119}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":2234,"byte_end":2237,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Check out the [**user guide**][user guide] to find out more tips and tricks about this crate.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":2238,"byte_end":2335,"line_start":47,"line_end":47,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":2336,"byte_end":2339,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Use `serde_with` in your Project","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":2340,"byte_end":2378,"line_start":49,"line_end":49,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":2379,"byte_end":2382,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Add this to your `Cargo.toml`:","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":2383,"byte_end":2417,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":2418,"byte_end":2421,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":2422,"byte_end":2433,"line_start":53,"line_end":53,"column_start":1,"column_end":12}},{"value":"/ [dependencies.serde_with]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":2434,"byte_end":2463,"line_start":54,"line_end":54,"column_start":1,"column_end":30}},{"value":"/ version = \"1.5.1\"","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":2464,"byte_end":2485,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/ features = [ \"...\" ]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":2486,"byte_end":2510,"line_start":56,"line_end":56,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":2511,"byte_end":2518,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":2519,"byte_end":2522,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ The crate contains different features for integration with other common crates.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":2523,"byte_end":2606,"line_start":59,"line_end":59,"column_start":1,"column_end":84}},{"value":"/ Check the [feature flags][] section for information about all available features.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":2607,"byte_end":2692,"line_start":60,"line_end":60,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":2693,"byte_end":2696,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":2697,"byte_end":2711,"line_start":62,"line_end":62,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":2712,"byte_end":2715,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Annotate your struct or enum to enable the custom de/serializer.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":2716,"byte_end":2784,"line_start":64,"line_end":64,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":2785,"byte_end":2788,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ## `DisplayFromStr`","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":2789,"byte_end":2812,"line_start":66,"line_end":66,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":2813,"byte_end":2816,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":2817,"byte_end":2828,"line_start":68,"line_end":68,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":2829,"byte_end":2861,"line_start":69,"line_end":69,"column_start":1,"column_end":33}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":2862,"byte_end":2911,"line_start":70,"line_end":70,"column_start":1,"column_end":50}},{"value":"/ # #[cfg(feature = \"macros\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":2912,"byte_end":2944,"line_start":71,"line_end":71,"column_start":1,"column_end":33}},{"value":"/ # use serde_with::{serde_as, DisplayFromStr};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":2945,"byte_end":2994,"line_start":72,"line_end":72,"column_start":1,"column_end":50}},{"value":"/ # #[cfg(feature = \"macros\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":2995,"byte_end":3027,"line_start":73,"line_end":73,"column_start":1,"column_end":33}},{"value":"/ #[serde_as]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":3028,"byte_end":3043,"line_start":74,"line_end":74,"column_start":1,"column_end":16}},{"value":"/ # #[derive(Debug, Eq, PartialEq)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":3044,"byte_end":3081,"line_start":75,"line_end":75,"column_start":1,"column_end":38}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":3082,"byte_end":3119,"line_start":76,"line_end":76,"column_start":1,"column_end":38}},{"value":"/ struct Foo {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":3120,"byte_end":3136,"line_start":77,"line_end":77,"column_start":1,"column_end":17}},{"value":"/     // Serialize with Display, deserialize with FromStr","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":3137,"byte_end":3196,"line_start":78,"line_end":78,"column_start":1,"column_end":60}},{"value":"/     #[serde_as(as = \"DisplayFromStr\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":3197,"byte_end":3239,"line_start":79,"line_end":79,"column_start":1,"column_end":43}},{"value":"/     bar: u8,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":3240,"byte_end":3256,"line_start":80,"line_end":80,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":3257,"byte_end":3262,"line_start":81,"line_end":81,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":3263,"byte_end":3266,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(all(feature = \"macros\", feature = \"json\"))] {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":3267,"byte_end":3324,"line_start":83,"line_end":83,"column_start":1,"column_end":58}},{"value":"/ // This will serialize","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":3325,"byte_end":3351,"line_start":84,"line_end":84,"column_start":1,"column_end":27}},{"value":"/ # let foo =","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":3352,"byte_end":3367,"line_start":85,"line_end":85,"column_start":1,"column_end":16}},{"value":"/ Foo {bar: 12}","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":3368,"byte_end":3385,"line_start":86,"line_end":86,"column_start":1,"column_end":18}},{"value":"/ # ;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":3386,"byte_end":3393,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":3394,"byte_end":3397,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ // into this JSON","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":3398,"byte_end":3419,"line_start":89,"line_end":89,"column_start":1,"column_end":22}},{"value":"/ # let json = r#\"","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":3420,"byte_end":3440,"line_start":90,"line_end":90,"column_start":1,"column_end":21}},{"value":"/ {\"bar\": \"12\"}","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":3441,"byte_end":3458,"line_start":91,"line_end":91,"column_start":1,"column_end":18}},{"value":"/ # \"#;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":3459,"byte_end":3468,"line_start":92,"line_end":92,"column_start":1,"column_end":10}},{"value":"/ # assert_eq!(json.replace(\" \", \"\").replace(\"\\n\", \"\"), serde_json::to_string(&foo).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":3469,"byte_end":3565,"line_start":93,"line_end":93,"column_start":1,"column_end":97}},{"value":"/ # assert_eq!(foo, serde_json::from_str(&json).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":3566,"byte_end":3626,"line_start":94,"line_end":94,"column_start":1,"column_end":61}},{"value":"/ # }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":3627,"byte_end":3634,"line_start":95,"line_end":95,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":3635,"byte_end":3642,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":3643,"byte_end":3646,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ ## `skip_serializing_none`","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":3647,"byte_end":3677,"line_start":98,"line_end":98,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":3678,"byte_end":3681,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ This situation often occurs with JSON, but other formats also support optional fields.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":3682,"byte_end":3772,"line_start":100,"line_end":100,"column_start":1,"column_end":91}},{"value":"/ If many fields are optional, putting the annotations on the structs can become tedious.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":3773,"byte_end":3864,"line_start":101,"line_end":101,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":3865,"byte_end":3868,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":3869,"byte_end":3880,"line_start":103,"line_end":103,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":3881,"byte_end":3913,"line_start":104,"line_end":104,"column_start":1,"column_end":33}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":3914,"byte_end":3963,"line_start":105,"line_end":105,"column_start":1,"column_end":50}},{"value":"/ # #[cfg(feature = \"macros\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":3964,"byte_end":3996,"line_start":106,"line_end":106,"column_start":1,"column_end":33}},{"value":"/ # use serde_with::skip_serializing_none;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":3997,"byte_end":4041,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/ # #[cfg(feature = \"macros\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":4042,"byte_end":4074,"line_start":108,"line_end":108,"column_start":1,"column_end":33}},{"value":"/ #[skip_serializing_none]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":4075,"byte_end":4103,"line_start":109,"line_end":109,"column_start":1,"column_end":29}},{"value":"/ # #[derive(Debug, Eq, PartialEq)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":4104,"byte_end":4141,"line_start":110,"line_end":110,"column_start":1,"column_end":38}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":4142,"byte_end":4179,"line_start":111,"line_end":111,"column_start":1,"column_end":38}},{"value":"/ struct Foo {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":4180,"byte_end":4196,"line_start":112,"line_end":112,"column_start":1,"column_end":17}},{"value":"/     a: Option<usize>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":4197,"byte_end":4222,"line_start":113,"line_end":113,"column_start":1,"column_end":26}},{"value":"/     b: Option<usize>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":4223,"byte_end":4248,"line_start":114,"line_end":114,"column_start":1,"column_end":26}},{"value":"/     c: Option<usize>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":4249,"byte_end":4274,"line_start":115,"line_end":115,"column_start":1,"column_end":26}},{"value":"/     d: Option<usize>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":4275,"byte_end":4300,"line_start":116,"line_end":116,"column_start":1,"column_end":26}},{"value":"/     e: Option<usize>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":4301,"byte_end":4326,"line_start":117,"line_end":117,"column_start":1,"column_end":26}},{"value":"/     f: Option<usize>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":4327,"byte_end":4352,"line_start":118,"line_end":118,"column_start":1,"column_end":26}},{"value":"/     g: Option<usize>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":4353,"byte_end":4378,"line_start":119,"line_end":119,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":4379,"byte_end":4384,"line_start":120,"line_end":120,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":4385,"byte_end":4388,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(all(feature = \"macros\", feature = \"json\"))] {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":4389,"byte_end":4446,"line_start":122,"line_end":122,"column_start":1,"column_end":58}},{"value":"/ // This will serialize","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":4447,"byte_end":4473,"line_start":123,"line_end":123,"column_start":1,"column_end":27}},{"value":"/ # let foo =","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":4474,"byte_end":4489,"line_start":124,"line_end":124,"column_start":1,"column_end":16}},{"value":"/ Foo {a: None, b: None, c: None, d: Some(4), e: None, f: None, g: Some(7)}","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":4490,"byte_end":4567,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ # ;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":4568,"byte_end":4575,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":4576,"byte_end":4579,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ // into this JSON","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":4580,"byte_end":4601,"line_start":128,"line_end":128,"column_start":1,"column_end":22}},{"value":"/ # let json = r#\"","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":4602,"byte_end":4622,"line_start":129,"line_end":129,"column_start":1,"column_end":21}},{"value":"/ {\"d\": 4, \"g\": 7}","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":4623,"byte_end":4643,"line_start":130,"line_end":130,"column_start":1,"column_end":21}},{"value":"/ # \"#;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":4644,"byte_end":4653,"line_start":131,"line_end":131,"column_start":1,"column_end":10}},{"value":"/ # assert_eq!(json.replace(\" \", \"\").replace(\"\\n\", \"\"), serde_json::to_string(&foo).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":4654,"byte_end":4750,"line_start":132,"line_end":132,"column_start":1,"column_end":97}},{"value":"/ # assert_eq!(foo, serde_json::from_str(&json).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":4751,"byte_end":4811,"line_start":133,"line_end":133,"column_start":1,"column_end":61}},{"value":"/ # }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":4812,"byte_end":4819,"line_start":134,"line_end":134,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":4820,"byte_end":4827,"line_start":135,"line_end":135,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":4828,"byte_end":4831,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ## Advanced `serde_as` usage","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":4832,"byte_end":4864,"line_start":137,"line_end":137,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":4865,"byte_end":4868,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ This example is mainly supposed to highlight the flexibility of the `serde_as`-annotation compared to [serde's with-annotation][with-annotation].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":4869,"byte_end":5018,"line_start":139,"line_end":139,"column_start":1,"column_end":150}},{"value":"/ More details about `serde_as` can be found in the [user guide][].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":5019,"byte_end":5088,"line_start":140,"line_end":140,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":5089,"byte_end":5092,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":5093,"byte_end":5104,"line_start":142,"line_end":142,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"macros\", feature = \"hex\"))]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":5105,"byte_end":5159,"line_start":143,"line_end":143,"column_start":1,"column_end":55}},{"value":"/ # use {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":5160,"byte_end":5171,"line_start":144,"line_end":144,"column_start":1,"column_end":12}},{"value":"/ #     serde_derive::{Deserialize, Serialize},","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":5172,"byte_end":5221,"line_start":145,"line_end":145,"column_start":1,"column_end":50}},{"value":"/ #     serde_with::{serde_as, DisplayFromStr, DurationSeconds, hex::Hex},","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":5222,"byte_end":5298,"line_start":146,"line_end":146,"column_start":1,"column_end":77}},{"value":"/ #     std::time::Duration,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":5299,"byte_end":5329,"line_start":147,"line_end":147,"column_start":1,"column_end":31}},{"value":"/ #     std::collections::BTreeMap,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":5330,"byte_end":5367,"line_start":148,"line_end":148,"column_start":1,"column_end":38}},{"value":"/ # };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":5368,"byte_end":5376,"line_start":149,"line_end":149,"column_start":1,"column_end":9}},{"value":"/ # #[cfg(all(feature = \"macros\", feature = \"hex\"))]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":5377,"byte_end":5431,"line_start":150,"line_end":150,"column_start":1,"column_end":55}},{"value":"/ #[serde_as]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":5432,"byte_end":5447,"line_start":151,"line_end":151,"column_start":1,"column_end":16}},{"value":"/ # #[derive(Debug, Eq, PartialEq)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":5448,"byte_end":5485,"line_start":152,"line_end":152,"column_start":1,"column_end":38}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":5486,"byte_end":5523,"line_start":153,"line_end":153,"column_start":1,"column_end":38}},{"value":"/ struct Foo {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":5524,"byte_end":5540,"line_start":154,"line_end":154,"column_start":1,"column_end":17}},{"value":"/      // Serialize them into a list of number as seconds","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":5541,"byte_end":5600,"line_start":155,"line_end":155,"column_start":1,"column_end":60}},{"value":"/      #[serde_as(as = \"Vec<DurationSeconds>\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":5601,"byte_end":5650,"line_start":156,"line_end":156,"column_start":1,"column_end":50}},{"value":"/      durations: Vec<Duration>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":5651,"byte_end":5685,"line_start":157,"line_end":157,"column_start":1,"column_end":35}},{"value":"/      // We can treat a Vec like a map with duplicates.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":5686,"byte_end":5744,"line_start":158,"line_end":158,"column_start":1,"column_end":59}},{"value":"/      // JSON only allows string keys, so convert i32 to strings","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":5745,"byte_end":5812,"line_start":159,"line_end":159,"column_start":1,"column_end":68}},{"value":"/      // The bytes will be hex encoded","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":5813,"byte_end":5854,"line_start":160,"line_end":160,"column_start":1,"column_end":42}},{"value":"/      #[serde_as(as = \"BTreeMap<DisplayFromStr, Hex>\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":5855,"byte_end":5913,"line_start":161,"line_end":161,"column_start":1,"column_end":59}},{"value":"/      bytes: Vec<(i32, Vec<u8>)>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":5914,"byte_end":5950,"line_start":162,"line_end":162,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":5951,"byte_end":5956,"line_start":163,"line_end":163,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":5957,"byte_end":5960,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(all(feature = \"macros\", feature = \"json\", feature = \"hex\"))] {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":5961,"byte_end":6035,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"/ // This will serialize","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":6036,"byte_end":6062,"line_start":166,"line_end":166,"column_start":1,"column_end":27}},{"value":"/ # let foo =","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":6063,"byte_end":6078,"line_start":167,"line_end":167,"column_start":1,"column_end":16}},{"value":"/ Foo {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":6079,"byte_end":6088,"line_start":168,"line_end":168,"column_start":1,"column_end":10}},{"value":"/     durations: vec![Duration::new(5, 0), Duration::new(3600, 0), Duration::new(0, 0)],","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":6089,"byte_end":6179,"line_start":169,"line_end":169,"column_start":1,"column_end":91}},{"value":"/     bytes: vec![","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":6180,"byte_end":6200,"line_start":170,"line_end":170,"column_start":1,"column_end":21}},{"value":"/         (1, vec![0, 1, 2]),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":6201,"byte_end":6232,"line_start":171,"line_end":171,"column_start":1,"column_end":32}},{"value":"/         (-100, vec![100, 200, 255]),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":6233,"byte_end":6273,"line_start":172,"line_end":172,"column_start":1,"column_end":41}},{"value":"/         (1, vec![0, 111, 222]),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":6274,"byte_end":6309,"line_start":173,"line_end":173,"column_start":1,"column_end":36}},{"value":"/     ],","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":6310,"byte_end":6320,"line_start":174,"line_end":174,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":6321,"byte_end":6326,"line_start":175,"line_end":175,"column_start":1,"column_end":6}},{"value":"/ # ;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":6327,"byte_end":6334,"line_start":176,"line_end":176,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":6335,"byte_end":6338,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ // into this JSON","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":6339,"byte_end":6360,"line_start":178,"line_end":178,"column_start":1,"column_end":22}},{"value":"/ # let json = r#\"","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":6361,"byte_end":6381,"line_start":179,"line_end":179,"column_start":1,"column_end":21}},{"value":"/ {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":6382,"byte_end":6387,"line_start":180,"line_end":180,"column_start":1,"column_end":6}},{"value":"/     \"durations\": [5, 3600, 0],","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":6388,"byte_end":6422,"line_start":181,"line_end":181,"column_start":1,"column_end":35}},{"value":"/     \"bytes\": {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":6423,"byte_end":6441,"line_start":182,"line_end":182,"column_start":1,"column_end":19}},{"value":"/         \"1\": \"000102\",","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":6442,"byte_end":6468,"line_start":183,"line_end":183,"column_start":1,"column_end":27}},{"value":"/         \"-100\": \"64c8ff\",","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":6469,"byte_end":6498,"line_start":184,"line_end":184,"column_start":1,"column_end":30}},{"value":"/         \"1\": \"006fde\"","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":6499,"byte_end":6524,"line_start":185,"line_end":185,"column_start":1,"column_end":26}},{"value":"/     }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":6525,"byte_end":6534,"line_start":186,"line_end":186,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":6535,"byte_end":6540,"line_start":187,"line_end":187,"column_start":1,"column_end":6}},{"value":"/ # \"#;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":6541,"byte_end":6550,"line_start":188,"line_end":188,"column_start":1,"column_end":10}},{"value":"/ # assert_eq!(json.replace(\" \", \"\").replace(\"\\n\", \"\"), serde_json::to_string(&foo).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":6551,"byte_end":6647,"line_start":189,"line_end":189,"column_start":1,"column_end":97}},{"value":"/ # assert_eq!(foo, serde_json::from_str(&json).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":6648,"byte_end":6708,"line_start":190,"line_end":190,"column_start":1,"column_end":61}},{"value":"/ # }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":6709,"byte_end":6716,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":6717,"byte_end":6724,"line_start":192,"line_end":192,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":6725,"byte_end":6728,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ [`DisplayFromStr`]: https://docs.rs/serde_with/1.5.1/serde_with/struct.DisplayFromStr.html","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":6729,"byte_end":6823,"line_start":194,"line_end":194,"column_start":1,"column_end":95}},{"value":"/ [`with_prefix!`]: https://docs.rs/serde_with/1.5.1/serde_with/macro.with_prefix.html","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":6824,"byte_end":6912,"line_start":195,"line_end":195,"column_start":1,"column_end":89}},{"value":"/ [display_fromstr]: https://docs.rs/serde_with/1.5.1/serde_with/rust/display_fromstr/index.html","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":6913,"byte_end":7011,"line_start":196,"line_end":196,"column_start":1,"column_end":99}},{"value":"/ [feature flags]: https://docs.rs/serde_with/1.5.1/serde_with/guide/feature_flags/index.html","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":7012,"byte_end":7107,"line_start":197,"line_end":197,"column_start":1,"column_end":96}},{"value":"/ [skip_serializing_none]: https://docs.rs/serde_with/1.5.1/serde_with/attr.skip_serializing_none.html","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":7108,"byte_end":7212,"line_start":198,"line_end":198,"column_start":1,"column_end":105}},{"value":"/ [StringWithSeparator]: https://docs.rs/serde_with/1.5.1/serde_with/rust/struct.StringWithSeparator.html","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":7213,"byte_end":7320,"line_start":199,"line_end":199,"column_start":1,"column_end":108}},{"value":"/ [user guide]: https://docs.rs/serde_with/1.5.1/serde_with/guide/index.html","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":7321,"byte_end":7399,"line_start":200,"line_end":200,"column_start":1,"column_end":79}},{"value":"/ [with-annotation]: https://serde.rs/field-attrs.html#with","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":7400,"byte_end":7461,"line_start":201,"line_end":201,"column_start":1,"column_end":62}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"de","qualname":"::de","value":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":3447},{"krate":0,"index":3452},{"krate":0,"index":128},{"krate":0,"index":133}],"decl_id":null,"docs":" Module for [`DeserializeAs`][] implementations","sig":null,"attributes":[{"value":"/ Module for [`DeserializeAs`][] implementations","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":43033,"byte_end":43083,"line_start":1,"line_end":1,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":43084,"byte_end":43087,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The module contains the [`DeserializeAs`][] trait and helper code.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":43088,"byte_end":43158,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ Additionally, it contains implementations of [`DeserializeAs`][] for types defined in the Rust Standard Library or this crate.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":43159,"byte_end":43289,"line_start":4,"line_end":4,"column_start":1,"column_end":131}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":43290,"byte_end":43293,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ You can find more details on how to implement this trait for your types in the documentation of the [`DeserializeAs`][] trait and details about the usage in the [user guide][].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":43294,"byte_end":43474,"line_start":6,"line_end":6,"column_start":1,"column_end":181}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":43475,"byte_end":43478,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [user guide]: crate::guide","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":43479,"byte_end":43509,"line_start":8,"line_end":8,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":45908,"byte_end":45921,"line_start":66,"line_end":66,"column_start":11,"column_end":24},"name":"DeserializeAs","qualname":"::de::DeserializeAs","value":"DeserializeAs<'de, T>: Sized","parent":null,"children":[{"krate":0,"index":126}],"decl_id":null,"docs":" A **data structure** that can be deserialized from any data format supported by Serde, analogue to [`Deserialize`].","sig":null,"attributes":[{"value":"/ A **data structure** that can be deserialized from any data format supported by Serde, analogue to [`Deserialize`].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":43549,"byte_end":43668,"line_start":14,"line_end":14,"column_start":1,"column_end":120}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":43669,"byte_end":43672,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The trait is analogue to the [`serde::Deserialize`][`Deserialize`] trait, with the same meaning of input and output arguments.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":43673,"byte_end":43803,"line_start":16,"line_end":16,"column_start":1,"column_end":131}},{"value":"/ It can and should the implemented using the same code structure as the [`Deserialize`] trait.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":43804,"byte_end":43901,"line_start":17,"line_end":17,"column_start":1,"column_end":98}},{"value":"/ As such, the same advice for [implementing `Deserialize`][impl-deserialize] applies here.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":43902,"byte_end":43995,"line_start":18,"line_end":18,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":43996,"byte_end":43999,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Differences to [`Deserialize`]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":44000,"byte_end":44036,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":44037,"byte_end":44040,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The trait is only required for container-like types or types implementing specific conversion functions.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":44041,"byte_end":44149,"line_start":22,"line_end":22,"column_start":1,"column_end":109}},{"value":"/ Container-like types are [`Vec`][], [`BTreeMap`][], but also [`Option`][] and [`Box`][].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":44150,"byte_end":44242,"line_start":23,"line_end":23,"column_start":1,"column_end":93}},{"value":"/ Conversion types deserialize into a different Rust type.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":44243,"byte_end":44303,"line_start":24,"line_end":24,"column_start":1,"column_end":61}},{"value":"/ For example, [`DisplayFromStr`] uses the [`FromStr`] trait after deserializing a string and [`DurationSeconds`] creates a [`Duration`] from either String or integer values.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":44304,"byte_end":44480,"line_start":25,"line_end":25,"column_start":1,"column_end":177}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":44481,"byte_end":44484,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This code shows how to implement [`Deserialize`] for [`Box`]:","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":44485,"byte_end":44550,"line_start":27,"line_end":27,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":44551,"byte_end":44554,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":44555,"byte_end":44573,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"/ impl<'de, T: Deserialize<'de>> Deserialize<'de> for Box<T> {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":44574,"byte_end":44638,"line_start":30,"line_end":30,"column_start":1,"column_end":65}},{"value":"/     fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":44639,"byte_end":44707,"line_start":31,"line_end":31,"column_start":1,"column_end":69}},{"value":"/     where","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":44708,"byte_end":44721,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/         D: Deserializer<'de>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":44722,"byte_end":44755,"line_start":33,"line_end":33,"column_start":1,"column_end":34}},{"value":"/     {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":44756,"byte_end":44765,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/         Ok(Box::new(Deserialize::deserialize(deserializer)?))","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":44766,"byte_end":44831,"line_start":35,"line_end":35,"column_start":1,"column_end":66}},{"value":"/     }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":44832,"byte_end":44841,"line_start":36,"line_end":36,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":44842,"byte_end":44847,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":44848,"byte_end":44855,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":44856,"byte_end":44859,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ and this code shows how to do the same using [`DeserializeAs`][]:","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":44860,"byte_end":44929,"line_start":40,"line_end":40,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":44930,"byte_end":44933,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":44934,"byte_end":44952,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"/ impl<'de, T, U> DeserializeAs<'de, Box<T>> for Box<U>","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":44953,"byte_end":45010,"line_start":43,"line_end":43,"column_start":1,"column_end":58}},{"value":"/ where","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":45011,"byte_end":45020,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/     U: DeserializeAs<'de, T>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":45021,"byte_end":45054,"line_start":45,"line_end":45,"column_start":1,"column_end":34}},{"value":"/ {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":45055,"byte_end":45060,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/     fn deserialize_as<D>(deserializer: D) -> Result<Box<T>, D::Error>","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":45061,"byte_end":45134,"line_start":47,"line_end":47,"column_start":1,"column_end":74}},{"value":"/     where","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":45135,"byte_end":45148,"line_start":48,"line_end":48,"column_start":1,"column_end":14}},{"value":"/         D: Deserializer<'de>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":45149,"byte_end":45182,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/     {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":45183,"byte_end":45192,"line_start":50,"line_end":50,"column_start":1,"column_end":10}},{"value":"/         Ok(Box::new(","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":45193,"byte_end":45217,"line_start":51,"line_end":51,"column_start":1,"column_end":25}},{"value":"/             DeserializeAsWrap::<T, U>::deserialize(deserializer)?.into_inner(),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":45218,"byte_end":45301,"line_start":52,"line_end":52,"column_start":1,"column_end":84}},{"value":"/         ))","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":45302,"byte_end":45316,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":45317,"byte_end":45326,"line_start":54,"line_end":54,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":45327,"byte_end":45332,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":45333,"byte_end":45340,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":45341,"byte_end":45344,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ It uses two type parameters, `T` and `U` instead of only one and performs the deserialization step using the `DeserializeAsWrap` type.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":45345,"byte_end":45483,"line_start":58,"line_end":58,"column_start":1,"column_end":139}},{"value":"/ The `T` type is the on the Rust side after deserialization, whereas the `U` type determines how the value will be deserialized.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":45484,"byte_end":45615,"line_start":59,"line_end":59,"column_start":1,"column_end":132}},{"value":"/ These two changes are usually enough to make a container type implement [`DeserializeAs`][].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":45616,"byte_end":45712,"line_start":60,"line_end":60,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":45713,"byte_end":45716,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ [`BTreeMap`]: std::collections::BTreeMap","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":45717,"byte_end":45761,"line_start":62,"line_end":62,"column_start":1,"column_end":45}},{"value":"/ [`Duration`]: std::time::Duration","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":45762,"byte_end":45799,"line_start":63,"line_end":63,"column_start":1,"column_end":38}},{"value":"/ [`FromStr`]: std::str::FromStr","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":45800,"byte_end":45834,"line_start":64,"line_end":64,"column_start":1,"column_end":35}},{"value":"/ [impl-deserialize]: https://serde.rs/impl-deserialize.html","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":45835,"byte_end":45897,"line_start":65,"line_end":65,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":46012,"byte_end":46026,"line_start":68,"line_end":68,"column_start":8,"column_end":22},"name":"deserialize_as","qualname":"::de::DeserializeAs::deserialize_as","value":"pub fn deserialize_as<D>(D) -> Result<T, D::Error> where D: Deserializer","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" Deserialize this value from the given Serde deserializer.\n","sig":null,"attributes":[{"value":"/ Deserialize this value from the given Serde deserializer.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":45943,"byte_end":46004,"line_start":67,"line_end":67,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":3447},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":46214,"byte_end":46231,"line_start":75,"line_end":75,"column_start":12,"column_end":29},"name":"DeserializeAsWrap","qualname":"::de::DeserializeAsWrap","value":"DeserializeAsWrap {  }","parent":null,"children":[{"krate":0,"index":3450},{"krate":0,"index":3451}],"decl_id":null,"docs":" Helper type to implement [`DeserializeAs`] for container-like types.\n","sig":null,"attributes":[{"value":"/ Helper type to implement [`DeserializeAs`] for container-like types.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":46113,"byte_end":46185,"line_start":73,"line_end":73,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":46382,"byte_end":46392,"line_start":82,"line_end":82,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<DeserializeAsWrap<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Return the inner value of type `T`.\n","sig":null,"attributes":[{"value":"/ Return the inner value of type `T`.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":46331,"byte_end":46370,"line_start":81,"line_end":81,"column_start":5,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":151},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\error_on_duplicate.rs","byte_start":73493,"byte_end":73519,"line_start":6,"line_end":6,"column_start":11,"column_end":37},"name":"PreventDuplicateInsertsSet","qualname":"::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsSet","value":"PreventDuplicateInsertsSet<T>","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\error_on_duplicate.rs","byte_start":73532,"byte_end":73535,"line_start":7,"line_end":7,"column_start":8,"column_end":11},"name":"new","qualname":"::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsSet::new","value":"pub fn new(Option<usize>) -> Self","parent":{"krate":0,"index":151},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\error_on_duplicate.rs","byte_start":73667,"byte_end":73673,"line_start":10,"line_end":10,"column_start":8,"column_end":14},"name":"insert","qualname":"::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsSet::insert","value":"pub fn insert(&mut Self, T) -> bool","parent":{"krate":0,"index":151},"children":[],"decl_id":null,"docs":" Return true if the insert was successful and the value did not exist in the set\n","sig":null,"attributes":[{"value":"/ Return true if the insert was successful and the value did not exist in the set","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\error_on_duplicate.rs","byte_start":73576,"byte_end":73659,"line_start":9,"line_end":9,"column_start":5,"column_end":88}}]},{"kind":"Trait","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\error_on_duplicate.rs","byte_start":73717,"byte_end":73743,"line_start":13,"line_end":13,"column_start":11,"column_end":37},"name":"PreventDuplicateInsertsMap","qualname":"::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsMap","value":"PreventDuplicateInsertsMap<K, V>","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\error_on_duplicate.rs","byte_start":73759,"byte_end":73762,"line_start":14,"line_end":14,"column_start":8,"column_end":11},"name":"new","qualname":"::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsMap::new","value":"pub fn new(Option<usize>) -> Self","parent":{"krate":0,"index":155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\error_on_duplicate.rs","byte_start":73892,"byte_end":73898,"line_start":17,"line_end":17,"column_start":8,"column_end":14},"name":"insert","qualname":"::duplicate_key_impls::error_on_duplicate::PreventDuplicateInsertsMap::insert","value":"pub fn insert(&mut Self, K, V) -> bool","parent":{"krate":0,"index":155},"children":[],"decl_id":null,"docs":" Return true if the insert was successful and the key did not exist in the map\n","sig":null,"attributes":[{"value":"/ Return true if the insert was successful and the key did not exist in the map","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\error_on_duplicate.rs","byte_start":73803,"byte_end":73884,"line_start":16,"line_end":16,"column_start":5,"column_end":86}}]},{"kind":"Trait","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\first_value_wins.rs","byte_start":75575,"byte_end":75603,"line_start":7,"line_end":7,"column_start":11,"column_end":39},"name":"DuplicateInsertsFirstWinsSet","qualname":"::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsSet","value":"DuplicateInsertsFirstWinsSet<T>","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated = \"This is serde's default behavior.\"","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\first_value_wins.rs","byte_start":75513,"byte_end":75564,"line_start":6,"line_end":6,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\first_value_wins.rs","byte_start":75616,"byte_end":75619,"line_start":8,"line_end":8,"column_start":8,"column_end":11},"name":"new","qualname":"::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsSet::new","value":"pub fn new(Option<usize>) -> Self","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\first_value_wins.rs","byte_start":75744,"byte_end":75750,"line_start":11,"line_end":11,"column_start":8,"column_end":14},"name":"insert","qualname":"::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsSet::insert","value":"pub fn insert(&mut Self, T)","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" Insert the value into the set, if there is not already an existing value\n","sig":null,"attributes":[{"value":"/ Insert the value into the set, if there is not already an existing value","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\first_value_wins.rs","byte_start":75660,"byte_end":75736,"line_start":10,"line_end":10,"column_start":5,"column_end":81}}]},{"kind":"Trait","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\first_value_wins.rs","byte_start":75786,"byte_end":75814,"line_start":14,"line_end":14,"column_start":11,"column_end":39},"name":"DuplicateInsertsFirstWinsMap","qualname":"::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsMap","value":"DuplicateInsertsFirstWinsMap<K, V>","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\first_value_wins.rs","byte_start":75830,"byte_end":75833,"line_start":15,"line_end":15,"column_start":8,"column_end":11},"name":"new","qualname":"::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsMap::new","value":"pub fn new(Option<usize>) -> Self","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\first_value_wins.rs","byte_start":75958,"byte_end":75964,"line_start":18,"line_end":18,"column_start":8,"column_end":14},"name":"insert","qualname":"::duplicate_key_impls::first_value_wins::DuplicateInsertsFirstWinsMap::insert","value":"pub fn insert(&mut Self, K, V)","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" Insert the value into the map, if there is not already an existing value\n","sig":null,"attributes":[{"value":"/ Insert the value into the map, if there is not already an existing value","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\first_value_wins.rs","byte_start":75874,"byte_end":75950,"line_start":17,"line_end":17,"column_start":5,"column_end":81}}]},{"kind":"Trait","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\last_value_wins.rs","byte_start":78222,"byte_end":78249,"line_start":6,"line_end":6,"column_start":11,"column_end":38},"name":"DuplicateInsertsLastWinsSet","qualname":"::duplicate_key_impls::last_value_wins::DuplicateInsertsLastWinsSet","value":"DuplicateInsertsLastWinsSet<T>","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\last_value_wins.rs","byte_start":78262,"byte_end":78265,"line_start":7,"line_end":7,"column_start":8,"column_end":11},"name":"new","qualname":"::duplicate_key_impls::last_value_wins::DuplicateInsertsLastWinsSet::new","value":"pub fn new(Option<usize>) -> Self","parent":{"krate":0,"index":229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\last_value_wins.rs","byte_start":78354,"byte_end":78361,"line_start":10,"line_end":10,"column_start":8,"column_end":15},"name":"replace","qualname":"::duplicate_key_impls::last_value_wins::DuplicateInsertsLastWinsSet::replace","value":"pub fn replace(&mut Self, T)","parent":{"krate":0,"index":229},"children":[],"decl_id":null,"docs":" Insert or replace the existing value\n","sig":null,"attributes":[{"value":"/ Insert or replace the existing value","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\last_value_wins.rs","byte_start":78306,"byte_end":78346,"line_start":9,"line_end":9,"column_start":5,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\formats.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"formats","qualname":"::formats","value":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\formats.rs","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":3456},{"krate":0,"index":3457},{"krate":0,"index":3458},{"krate":0,"index":3459},{"krate":0,"index":3460},{"krate":0,"index":3461},{"krate":0,"index":3462},{"krate":0,"index":3463},{"krate":0,"index":3464},{"krate":0,"index":3465},{"krate":0,"index":3466},{"krate":0,"index":3467},{"krate":0,"index":3468},{"krate":0,"index":3469},{"krate":0,"index":3470},{"krate":0,"index":3478},{"krate":0,"index":3476},{"krate":0,"index":3474},{"krate":0,"index":3472},{"krate":0,"index":3479},{"krate":0,"index":3480},{"krate":0,"index":3488},{"krate":0,"index":3486},{"krate":0,"index":3484},{"krate":0,"index":3482},{"krate":0,"index":3489},{"krate":0,"index":256},{"krate":0,"index":3490},{"krate":0,"index":3498},{"krate":0,"index":3496},{"krate":0,"index":3494},{"krate":0,"index":3492},{"krate":0,"index":257},{"krate":0,"index":3499},{"krate":0,"index":3507},{"krate":0,"index":3505},{"krate":0,"index":3503},{"krate":0,"index":3501},{"krate":0,"index":258}],"decl_id":null,"docs":" Specify the format and how lenient the deserialization is\n","sig":null,"attributes":[{"value":"/ Specify the format and how lenient the deserialization is","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\formats.rs","byte_start":81874,"byte_end":81935,"line_start":1,"line_end":1,"column_start":1,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\formats.rs","byte_start":82363,"byte_end":82369,"line_start":8,"line_end":8,"column_start":11,"column_end":17},"name":"Format","qualname":"::formats::Format","value":"Format","parent":null,"children":[],"decl_id":null,"docs":" Specify how to serialize/deserialize a type","sig":null,"attributes":[{"value":"/ Specify how to serialize/deserialize a type","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\formats.rs","byte_start":81937,"byte_end":81984,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\formats.rs","byte_start":81985,"byte_end":81988,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The format specifier allows to configure how a value is serialized/deserialized.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\formats.rs","byte_start":81989,"byte_end":82073,"line_start":5,"line_end":5,"column_start":1,"column_end":85}},{"value":"/ For example, you can serialize a timestamp as an integer using the UNIX epoch, as a string containing an integer, or as a string using ISO 8601.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\formats.rs","byte_start":82074,"byte_end":82222,"line_start":6,"line_end":6,"column_start":1,"column_end":149}},{"value":"/ This [`Format`] traits allows more flexibility in configuring the format without the need to create a new type for each case.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\formats.rs","byte_start":82223,"byte_end":82352,"line_start":7,"line_end":7,"column_start":1,"column_end":130}}]},{"kind":"Struct","id":{"krate":0,"index":3470},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\formats.rs","byte_start":83410,"byte_end":83419,"line_start":66,"line_end":66,"column_start":5,"column_end":14},"name":"Uppercase","qualname":"::formats::Uppercase","value":"","parent":null,"children":[],"decl_id":null,"docs":" Use uppercase characters\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3480},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\formats.rs","byte_start":83457,"byte_end":83466,"line_start":68,"line_end":68,"column_start":5,"column_end":14},"name":"Lowercase","qualname":"::formats::Lowercase","value":"","parent":null,"children":[],"decl_id":null,"docs":" Use lowercase characters\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\formats.rs","byte_start":83648,"byte_end":83658,"line_start":74,"line_end":74,"column_start":11,"column_end":21},"name":"Strictness","qualname":"::formats::Strictness","value":"Strictness","parent":null,"children":[],"decl_id":null,"docs":" Specify how lenient the deserialization process should be","sig":null,"attributes":[{"value":"/ Specify how lenient the deserialization process should be","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\formats.rs","byte_start":83471,"byte_end":83532,"line_start":71,"line_end":71,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\formats.rs","byte_start":83533,"byte_end":83536,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ Formats which make use of this trait should specify how it affects the deserialization behavior.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\formats.rs","byte_start":83537,"byte_end":83637,"line_start":73,"line_end":73,"column_start":1,"column_end":101}}]},{"kind":"Struct","id":{"krate":0,"index":3490},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\formats.rs","byte_start":83774,"byte_end":83780,"line_start":78,"line_end":78,"column_start":12,"column_end":18},"name":"Strict","qualname":"::formats::Strict","value":"","parent":null,"children":[],"decl_id":null,"docs":" Use strict deserialization behavior, see [`Strictness`].\n","sig":null,"attributes":[{"value":"/ Use strict deserialization behavior, see [`Strictness`].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\formats.rs","byte_start":83663,"byte_end":83723,"line_start":76,"line_end":76,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":3499},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\formats.rs","byte_start":83928,"byte_end":83936,"line_start":83,"line_end":83,"column_start":12,"column_end":20},"name":"Flexible","qualname":"::formats::Flexible","value":"","parent":null,"children":[],"decl_id":null,"docs":" Use a flexible deserialization behavior, see [`Strictness`].\n","sig":null,"attributes":[{"value":"/ Use a flexible deserialization behavior, see [`Strictness`].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\formats.rs","byte_start":83813,"byte_end":83877,"line_start":81,"line_end":81,"column_start":1,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":259},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rust","qualname":"::rust","value":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":5564},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":5576},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":5580},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":310},{"krate":0,"index":3508},{"krate":0,"index":3557},{"krate":0,"index":3553},{"krate":0,"index":3546},{"krate":0,"index":3549},{"krate":0,"index":3538},{"krate":0,"index":3541},{"krate":0,"index":3534},{"krate":0,"index":3526},{"krate":0,"index":3521},{"krate":0,"index":3517},{"krate":0,"index":3513},{"krate":0,"index":350},{"krate":0,"index":361},{"krate":0,"index":370},{"krate":0,"index":379},{"krate":0,"index":403},{"krate":0,"index":431},{"krate":0,"index":455},{"krate":0,"index":479},{"krate":0,"index":507},{"krate":0,"index":531},{"krate":0,"index":561},{"krate":0,"index":585},{"krate":0,"index":632},{"krate":0,"index":653},{"krate":0,"index":662}],"decl_id":null,"docs":" De/Serialization for Rust's builtin and std types\n","sig":null,"attributes":[{"value":"/ De/Serialization for Rust's builtin and std types","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":83971,"byte_end":84024,"line_start":1,"line_end":1,"column_start":1,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":289},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":86337,"byte_end":86352,"line_start":76,"line_end":76,"column_start":9,"column_end":24},"name":"display_fromstr","qualname":"::rust::display_fromstr","value":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":307}],"decl_id":null,"docs":" De/Serialize using [`Display`] and [`FromStr`] implementation","sig":null,"attributes":[{"value":"/ De/Serialize using [`Display`] and [`FromStr`] implementation","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":84409,"byte_end":84474,"line_start":18,"line_end":18,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":84475,"byte_end":84478,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This allows to deserialize a string as a number.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":84479,"byte_end":84531,"line_start":20,"line_end":20,"column_start":1,"column_end":53}},{"value":"/ It can be very useful for serialization formats like JSON, which do not support integer","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":84532,"byte_end":84623,"line_start":21,"line_end":21,"column_start":1,"column_end":92}},{"value":"/ numbers and have to resort to strings to represent them.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":84624,"byte_end":84684,"line_start":22,"line_end":22,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":84685,"byte_end":84688,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ If you control the type you want to de/serialize, you can instead use the two derive macros, [`SerializeDisplay`] and [`DeserializeFromStr`].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":84689,"byte_end":84834,"line_start":24,"line_end":24,"column_start":1,"column_end":146}},{"value":"/ They properly implement the traits [`Serialize`] and [`Deserialize`] such that user of the type no longer have to use the with-attribute.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":84835,"byte_end":84976,"line_start":25,"line_end":25,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":84977,"byte_end":84980,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ## Converting to `serde_as`","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":84981,"byte_end":85012,"line_start":27,"line_end":27,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85013,"byte_end":85016,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The same functionality can be more clearly expressed via [`DisplayFromStr`] and using the [`serde_as`] macro.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85017,"byte_end":85130,"line_start":29,"line_end":29,"column_start":1,"column_end":114}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85131,"byte_end":85134,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85135,"byte_end":85146,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85147,"byte_end":85181,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85182,"byte_end":85218,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ # use serde_with::{serde_as, DisplayFromStr};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85219,"byte_end":85268,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85269,"byte_end":85274,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85275,"byte_end":85290,"line_start":36,"line_end":36,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85291,"byte_end":85317,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ struct A {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85318,"byte_end":85332,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"DisplayFromStr\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85333,"byte_end":85375,"line_start":39,"line_end":39,"column_start":1,"column_end":43}},{"value":"/     value: mime::Mime,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85376,"byte_end":85402,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85403,"byte_end":85408,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85409,"byte_end":85416,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85417,"byte_end":85424,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85425,"byte_end":85428,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85429,"byte_end":85443,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85444,"byte_end":85447,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85448,"byte_end":85459,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85460,"byte_end":85509,"line_start":48,"line_end":48,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85510,"byte_end":85515,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85516,"byte_end":85553,"line_start":50,"line_end":50,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85554,"byte_end":85568,"line_start":51,"line_end":51,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"serde_with::rust::display_fromstr\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85569,"byte_end":85629,"line_start":52,"line_end":52,"column_start":1,"column_end":61}},{"value":"/     mime: mime::Mime,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85630,"byte_end":85655,"line_start":53,"line_end":53,"column_start":1,"column_end":26}},{"value":"/     #[serde(with = \"serde_with::rust::display_fromstr\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85656,"byte_end":85716,"line_start":54,"line_end":54,"column_start":1,"column_end":61}},{"value":"/     number: u32,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85717,"byte_end":85737,"line_start":55,"line_end":55,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85738,"byte_end":85743,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85744,"byte_end":85747,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_str(r#\"{","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85748,"byte_end":85788,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     \"mime\": \"text/plain\",","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85789,"byte_end":85818,"line_start":59,"line_end":59,"column_start":1,"column_end":30}},{"value":"/     \"number\": \"159\"","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85819,"byte_end":85842,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"/ }\"#).unwrap();","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85843,"byte_end":85861,"line_start":61,"line_end":61,"column_start":1,"column_end":19}},{"value":"/ assert_eq!(mime::TEXT_PLAIN, v.mime);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85862,"byte_end":85903,"line_start":62,"line_end":62,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(159, v.number);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85904,"byte_end":85934,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85935,"byte_end":85938,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ let x = A {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85939,"byte_end":85954,"line_start":65,"line_end":65,"column_start":1,"column_end":16}},{"value":"/     mime: mime::STAR_STAR,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85955,"byte_end":85985,"line_start":66,"line_end":66,"column_start":1,"column_end":31}},{"value":"/     number: 777,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":85986,"byte_end":86006,"line_start":67,"line_end":67,"column_start":1,"column_end":21}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":86007,"byte_end":86013,"line_start":68,"line_end":68,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(r#\"{\"mime\":\"*/*\",\"number\":\"777\"}\"#, serde_json::to_string(&x).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":86014,"byte_end":86101,"line_start":69,"line_end":69,"column_start":1,"column_end":88}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":86102,"byte_end":86109,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":86110,"byte_end":86113,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ [`DeserializeFromStr`]: serde_with_macros::DeserializeFromStr","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":86114,"byte_end":86179,"line_start":72,"line_end":72,"column_start":1,"column_end":66}},{"value":"/ [`DisplayFromStr`]: crate::DisplayFromStr","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":86180,"byte_end":86225,"line_start":73,"line_end":73,"column_start":1,"column_end":46}},{"value":"/ [`serde_as`]: crate::guide::serde_as","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":86226,"byte_end":86266,"line_start":74,"line_end":74,"column_start":1,"column_end":41}},{"value":"/ [`SerializeDisplay`]: serde_with_macros::SerializeDisplay","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":86267,"byte_end":86328,"line_start":75,"line_end":75,"column_start":1,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":86450,"byte_end":86461,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::display_fromstr::deserialize","value":"pub fn deserialize<'de, D, T>(D) -> Result<T, D::Error> where D: Deserializer,\nT: FromStr, T::Err: Display","parent":null,"children":[],"decl_id":null,"docs":" Deserialize T using [FromStr]\n","sig":null,"attributes":[{"value":"/ Deserialize T using [FromStr]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":86405,"byte_end":86438,"line_start":80,"line_end":80,"column_start":5,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":87305,"byte_end":87314,"line_start":112,"line_end":112,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::display_fromstr::serialize","value":"pub fn serialize<T, S>(&T, S) -> Result<S::Ok, S::Error> where T: Display,\nS: Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize T using [Display]\n","sig":null,"attributes":[{"value":"/ Serialize T using [Display]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":87262,"byte_end":87293,"line_start":111,"line_end":111,"column_start":5,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":310},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":89727,"byte_end":89746,"line_start":187,"line_end":187,"column_start":9,"column_end":28},"name":"seq_display_fromstr","qualname":"::rust::seq_display_fromstr","value":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":5606},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":345}],"decl_id":null,"docs":" De/Serialize sequences using [`FromIterator`] and [`IntoIterator`] implementation for it and [`Display`] and [`FromStr`] implementation for each element","sig":null,"attributes":[{"value":"/ De/Serialize sequences using [`FromIterator`] and [`IntoIterator`] implementation for it and [`Display`] and [`FromStr`] implementation for each element","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":87496,"byte_end":87652,"line_start":121,"line_end":121,"column_start":1,"column_end":157}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":87653,"byte_end":87656,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ This allows to serialize and deserialize collections with elements which can be represented as strings.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":87657,"byte_end":87764,"line_start":123,"line_end":123,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":87765,"byte_end":87768,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ ## Converting to `serde_as`","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":87769,"byte_end":87800,"line_start":125,"line_end":125,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":87801,"byte_end":87804,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ The same functionality can be more clearly expressed via [`DisplayFromStr`] and using the [`serde_as`] macro.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":87805,"byte_end":87918,"line_start":127,"line_end":127,"column_start":1,"column_end":114}},{"value":"/ Instead of","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":87919,"byte_end":87933,"line_start":128,"line_end":128,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":87934,"byte_end":87937,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":87938,"byte_end":87956,"line_start":130,"line_end":130,"column_start":1,"column_end":19}},{"value":"/ #[serde(with = \"serde_with::rust::seq_display_fromstr\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":87957,"byte_end":88017,"line_start":131,"line_end":131,"column_start":1,"column_end":61}},{"value":"/ addresses: BTreeSet<Ipv4Addr>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":88018,"byte_end":88052,"line_start":132,"line_end":132,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":88053,"byte_end":88060,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ you can write:","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":88061,"byte_end":88079,"line_start":134,"line_end":134,"column_start":1,"column_end":19}},{"value":"/ ```rust,ignore","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":88080,"byte_end":88098,"line_start":135,"line_end":135,"column_start":1,"column_end":19}},{"value":"/ #[serde_as(as = \"BTreeSet<DisplayFromStr>\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":88099,"byte_end":88147,"line_start":136,"line_end":136,"column_start":1,"column_end":49}},{"value":"/ addresses: BTreeSet<Ipv4Addr>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":88148,"byte_end":88182,"line_start":137,"line_end":137,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":88183,"byte_end":88190,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":88191,"byte_end":88194,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ This works for any container type, so also for `Vec`:","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":88195,"byte_end":88252,"line_start":140,"line_end":140,"column_start":1,"column_end":58}},{"value":"/ ```rust,ignore","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":88253,"byte_end":88271,"line_start":141,"line_end":141,"column_start":1,"column_end":19}},{"value":"/ #[serde_as(as = \"Vec<DisplayFromStr>\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":88272,"byte_end":88315,"line_start":142,"line_end":142,"column_start":1,"column_end":44}},{"value":"/ bs: Vec<bool>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":88316,"byte_end":88334,"line_start":143,"line_end":143,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":88335,"byte_end":88342,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":88343,"byte_end":88346,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":88347,"byte_end":88361,"line_start":146,"line_end":146,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":88362,"byte_end":88365,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":88366,"byte_end":88373,"line_start":148,"line_end":148,"column_start":1,"column_end":8}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":88374,"byte_end":88423,"line_start":149,"line_end":149,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":88424,"byte_end":88429,"line_start":150,"line_end":150,"column_start":1,"column_end":6}},{"value":"/ use std::collections::BTreeSet;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":88430,"byte_end":88465,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":88466,"byte_end":88493,"line_start":152,"line_end":152,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":88494,"byte_end":88497,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":88498,"byte_end":88535,"line_start":154,"line_end":154,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":88536,"byte_end":88550,"line_start":155,"line_end":155,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"serde_with::rust::seq_display_fromstr\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":88551,"byte_end":88615,"line_start":156,"line_end":156,"column_start":1,"column_end":65}},{"value":"/     addresses: BTreeSet<Ipv4Addr>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":88616,"byte_end":88654,"line_start":157,"line_end":157,"column_start":1,"column_end":39}},{"value":"/     #[serde(with = \"serde_with::rust::seq_display_fromstr\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":88655,"byte_end":88719,"line_start":158,"line_end":158,"column_start":1,"column_end":65}},{"value":"/     bs: Vec<bool>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":88720,"byte_end":88742,"line_start":159,"line_end":159,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":88743,"byte_end":88748,"line_start":160,"line_end":160,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":88749,"byte_end":88752,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_str(r#\"{","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":88753,"byte_end":88793,"line_start":162,"line_end":162,"column_start":1,"column_end":41}},{"value":"/     \"addresses\": [\"192.168.2.1\", \"192.168.2.2\", \"192.168.1.1\", \"192.168.2.2\"],","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":88794,"byte_end":88876,"line_start":163,"line_end":163,"column_start":1,"column_end":83}},{"value":"/     \"bs\": [\"true\", \"false\"]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":88877,"byte_end":88908,"line_start":164,"line_end":164,"column_start":1,"column_end":32}},{"value":"/ }\"#).unwrap();","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":88909,"byte_end":88927,"line_start":165,"line_end":165,"column_start":1,"column_end":19}},{"value":"/ assert_eq!(v.addresses.len(), 3);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":88928,"byte_end":88965,"line_start":166,"line_end":166,"column_start":1,"column_end":38}},{"value":"/ assert!(v.addresses.contains(&Ipv4Addr::new(192, 168, 2, 1)));","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":88966,"byte_end":89032,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/ assert!(v.addresses.contains(&Ipv4Addr::new(192, 168, 2, 2)));","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":89033,"byte_end":89099,"line_start":168,"line_end":168,"column_start":1,"column_end":67}},{"value":"/ assert!(!v.addresses.contains(&Ipv4Addr::new(192, 168, 1, 2)));","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":89100,"byte_end":89167,"line_start":169,"line_end":169,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(v.bs.len(), 2);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":89168,"byte_end":89198,"line_start":170,"line_end":170,"column_start":1,"column_end":31}},{"value":"/ assert!(v.bs[0]);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":89199,"byte_end":89220,"line_start":171,"line_end":171,"column_start":1,"column_end":22}},{"value":"/ assert!(!v.bs[1]);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":89221,"byte_end":89243,"line_start":172,"line_end":172,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":89244,"byte_end":89247,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ let x = A {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":89248,"byte_end":89263,"line_start":174,"line_end":174,"column_start":1,"column_end":16}},{"value":"/     addresses: vec![","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":89264,"byte_end":89288,"line_start":175,"line_end":175,"column_start":1,"column_end":25}},{"value":"/         Ipv4Addr::new(127, 53, 0, 1),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":89289,"byte_end":89330,"line_start":176,"line_end":176,"column_start":1,"column_end":42}},{"value":"/         Ipv4Addr::new(127, 53, 1, 1),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":89331,"byte_end":89372,"line_start":177,"line_end":177,"column_start":1,"column_end":42}},{"value":"/         Ipv4Addr::new(127, 53, 0, 2)","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":89373,"byte_end":89413,"line_start":178,"line_end":178,"column_start":1,"column_end":41}},{"value":"/     ].into_iter().collect(),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":89414,"byte_end":89446,"line_start":179,"line_end":179,"column_start":1,"column_end":33}},{"value":"/     bs: vec![false, true],","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":89447,"byte_end":89477,"line_start":180,"line_end":180,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":89478,"byte_end":89484,"line_start":181,"line_end":181,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(r#\"{\"addresses\":[\"127.53.0.1\",\"127.53.0.2\",\"127.53.1.1\"],\"bs\":[\"false\",\"true\"]}\"#, serde_json::to_string(&x).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":89485,"byte_end":89619,"line_start":182,"line_end":182,"column_start":1,"column_end":135}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":89620,"byte_end":89627,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":89628,"byte_end":89631,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ [`DisplayFromStr`]: crate::DisplayFromStr","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":89632,"byte_end":89677,"line_start":185,"line_end":185,"column_start":1,"column_end":46}},{"value":"/ [`serde_as`]: crate::guide::serde_as","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":89678,"byte_end":89718,"line_start":186,"line_end":186,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":329},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":90113,"byte_end":90124,"line_start":200,"line_end":200,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::seq_display_fromstr::deserialize","value":"pub fn deserialize<'de, D, T, I>(D) -> Result<T, D::Error> where\nD: Deserializer, T: FromIterator<I> + Sized, I: FromStr, I::Err: Display","parent":null,"children":[],"decl_id":null,"docs":" Deserialize collection T using [FromIterator] and [FromStr] for each element\n","sig":null,"attributes":[{"value":"/ Deserialize collection T using [FromIterator] and [FromStr] for each element","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":90021,"byte_end":90101,"line_start":199,"line_end":199,"column_start":5,"column_end":85}}]},{"kind":"Function","id":{"krate":0,"index":345},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":91424,"byte_end":91433,"line_start":243,"line_end":243,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::seq_display_fromstr::serialize","value":"pub fn serialize<S, T, I>(&T, S) -> Result<S::Ok, S::Error> where\nS: Serializer, for<'a> &'a T: IntoIterator<Item = &'a I>, I: Display","parent":null,"children":[],"decl_id":null,"docs":" Serialize collection T using [IntoIterator] and [Display] for each element\n","sig":null,"attributes":[{"value":"/ Serialize collection T using [IntoIterator] and [Display] for each element","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":91334,"byte_end":91412,"line_start":242,"line_end":242,"column_start":5,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":3508},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":93918,"byte_end":93937,"line_start":318,"line_end":318,"column_start":12,"column_end":31},"name":"StringWithSeparator","qualname":"::rust::StringWithSeparator","value":"","parent":null,"children":[],"decl_id":null,"docs":" De/Serialize a delimited collection using [`Display`] and [`FromStr`] implementation","sig":null,"attributes":[{"value":"/ De/Serialize a delimited collection using [`Display`] and [`FromStr`] implementation","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":91856,"byte_end":91944,"line_start":259,"line_end":259,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":91945,"byte_end":91948,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ You can define an arbitrary separator, by specifying a type which implements [`Separator`].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":91949,"byte_end":92044,"line_start":261,"line_end":261,"column_start":1,"column_end":96}},{"value":"/ Some common ones, like space and comma are already predefined and you can find them [here][Separator].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":92045,"byte_end":92151,"line_start":262,"line_end":262,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":92152,"byte_end":92155,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ An empty string deserializes as an empty collection.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":92156,"byte_end":92212,"line_start":264,"line_end":264,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":92213,"byte_end":92216,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ ## Converting to `serde_as`","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":92217,"byte_end":92248,"line_start":266,"line_end":266,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":92249,"byte_end":92252,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ The same functionality can also be expressed using the [`serde_as`] macro.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":92253,"byte_end":92331,"line_start":268,"line_end":268,"column_start":1,"column_end":79}},{"value":"/ The usage is slightly different.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":92332,"byte_end":92368,"line_start":269,"line_end":269,"column_start":1,"column_end":37}},{"value":"/ `StringWithSeparator` takes a second type, which needs to implement [`Display`]+[`FromStr`] and constitutes the inner type of the collection.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":92369,"byte_end":92514,"line_start":270,"line_end":270,"column_start":1,"column_end":146}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":92515,"byte_end":92518,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":92519,"byte_end":92530,"line_start":272,"line_end":272,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":92531,"byte_end":92565,"line_start":273,"line_end":273,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":92566,"byte_end":92602,"line_start":274,"line_end":274,"column_start":1,"column_end":37}},{"value":"/ # use serde_with::{serde_as, SpaceSeparator, StringWithSeparator};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":92603,"byte_end":92673,"line_start":275,"line_end":275,"column_start":1,"column_end":71}},{"value":"/ #","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":92674,"byte_end":92679,"line_start":276,"line_end":276,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":92680,"byte_end":92695,"line_start":277,"line_end":277,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":92696,"byte_end":92722,"line_start":278,"line_end":278,"column_start":1,"column_end":27}},{"value":"/ struct A {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":92723,"byte_end":92737,"line_start":279,"line_end":279,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"StringWithSeparator::<SpaceSeparator, String>\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":92738,"byte_end":92811,"line_start":280,"line_end":280,"column_start":1,"column_end":74}},{"value":"/     tags: Vec<String>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":92812,"byte_end":92838,"line_start":281,"line_end":281,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":92839,"byte_end":92844,"line_start":282,"line_end":282,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":92845,"byte_end":92852,"line_start":283,"line_end":283,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":92853,"byte_end":92860,"line_start":284,"line_end":284,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":92861,"byte_end":92864,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":92865,"byte_end":92879,"line_start":286,"line_end":286,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":92880,"byte_end":92883,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":92884,"byte_end":92891,"line_start":288,"line_end":288,"column_start":1,"column_end":8}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":92892,"byte_end":92941,"line_start":289,"line_end":289,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":92942,"byte_end":92947,"line_start":290,"line_end":290,"column_start":1,"column_end":6}},{"value":"/ use serde_with::{CommaSeparator, SpaceSeparator};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":92948,"byte_end":93001,"line_start":291,"line_end":291,"column_start":1,"column_end":54}},{"value":"/ use std::collections::BTreeSet;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":93002,"byte_end":93037,"line_start":292,"line_end":292,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":93038,"byte_end":93041,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":93042,"byte_end":93079,"line_start":294,"line_end":294,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":93080,"byte_end":93094,"line_start":295,"line_end":295,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"serde_with::rust::StringWithSeparator::<SpaceSeparator>\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":93095,"byte_end":93177,"line_start":296,"line_end":296,"column_start":1,"column_end":83}},{"value":"/     tags: Vec<String>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":93178,"byte_end":93204,"line_start":297,"line_end":297,"column_start":1,"column_end":27}},{"value":"/     #[serde(with = \"serde_with::rust::StringWithSeparator::<CommaSeparator>\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":93205,"byte_end":93287,"line_start":298,"line_end":298,"column_start":1,"column_end":83}},{"value":"/     more_tags: BTreeSet<String>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":93288,"byte_end":93324,"line_start":299,"line_end":299,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":93325,"byte_end":93330,"line_start":300,"line_end":300,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":93331,"byte_end":93334,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_str(r##\"{","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":93335,"byte_end":93376,"line_start":302,"line_end":302,"column_start":1,"column_end":42}},{"value":"/     \"tags\": \"#hello #world\",","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":93377,"byte_end":93409,"line_start":303,"line_end":303,"column_start":1,"column_end":33}},{"value":"/     \"more_tags\": \"foo,bar,bar\"","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":93410,"byte_end":93444,"line_start":304,"line_end":304,"column_start":1,"column_end":35}},{"value":"/ }\"##).unwrap();","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":93445,"byte_end":93464,"line_start":305,"line_end":305,"column_start":1,"column_end":20}},{"value":"/ assert_eq!(vec![\"#hello\", \"#world\"], v.tags);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":93465,"byte_end":93514,"line_start":306,"line_end":306,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(2, v.more_tags.len());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":93515,"byte_end":93552,"line_start":307,"line_end":307,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":93553,"byte_end":93556,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ let x = A {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":93557,"byte_end":93572,"line_start":309,"line_end":309,"column_start":1,"column_end":16}},{"value":"/     tags: vec![\"1\".to_string(), \"2\".to_string(), \"3\".to_string()],","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":93573,"byte_end":93643,"line_start":310,"line_end":310,"column_start":1,"column_end":71}},{"value":"/     more_tags: BTreeSet::new(),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":93644,"byte_end":93679,"line_start":311,"line_end":311,"column_start":1,"column_end":36}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":93680,"byte_end":93686,"line_start":312,"line_end":312,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(r#\"{\"tags\":\"1 2 3\",\"more_tags\":\"\"}\"#, serde_json::to_string(&x).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":93687,"byte_end":93776,"line_start":313,"line_end":313,"column_start":1,"column_end":90}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":93777,"byte_end":93784,"line_start":314,"line_end":314,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":93785,"byte_end":93788,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ [`serde_as`]: crate::guide::serde_as","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":93789,"byte_end":93829,"line_start":316,"line_end":316,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":94115,"byte_end":94124,"line_start":325,"line_end":325,"column_start":12,"column_end":21},"name":"serialize","qualname":"<StringWithSeparator<Sep>>::serialize","value":"pub fn serialize<S, T, V>(T, S) -> Result<S::Ok, S::Error> where\nS: Serializer, T: IntoIterator<Item = V>, V: Display","parent":null,"children":[],"decl_id":null,"docs":" Serialize collection into a string with separator symbol\n","sig":null,"attributes":[{"value":"/ Serialize collection into a string with separator symbol","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":94043,"byte_end":94103,"line_start":324,"line_end":324,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":94724,"byte_end":94735,"line_start":345,"line_end":345,"column_start":12,"column_end":23},"name":"deserialize","qualname":"<StringWithSeparator<Sep>>::deserialize","value":"pub fn deserialize<'de, D, T, V>(D) -> Result<T, D::Error> where\nD: Deserializer, T: FromIterator<V>, V: FromStr, V::Err: Display","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a collection from a string with separator symbol\n","sig":null,"attributes":[{"value":"/ Deserialize a collection from a string with separator symbol","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":94648,"byte_end":94712,"line_start":344,"line_end":344,"column_start":5,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":96939,"byte_end":96952,"line_start":406,"line_end":406,"column_start":9,"column_end":22},"name":"double_option","qualname":"::rust::double_option","value":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":367}],"decl_id":null,"docs":" Makes a distinction between a missing, unset, or existing value","sig":null,"attributes":[{"value":"/ Makes a distinction between a missing, unset, or existing value","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":95227,"byte_end":95294,"line_start":364,"line_end":364,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":95295,"byte_end":95298,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/ Some serialization formats make a distinction between missing fields, fields with a `null`","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":95299,"byte_end":95393,"line_start":366,"line_end":366,"column_start":1,"column_end":95}},{"value":"/ value, and existing values. One such format is JSON. By default it is not easily possible to","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":95394,"byte_end":95490,"line_start":367,"line_end":367,"column_start":1,"column_end":97}},{"value":"/ differentiate between a missing value and a field which is `null`, as they deserialize to the","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":95491,"byte_end":95588,"line_start":368,"line_end":368,"column_start":1,"column_end":98}},{"value":"/ same value. This helper changes it, by using an `Option<Option<T>>` to deserialize into.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":95589,"byte_end":95681,"line_start":369,"line_end":369,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":95682,"byte_end":95685,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/ * `None`: Represents a missing value.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":95686,"byte_end":95727,"line_start":371,"line_end":371,"column_start":1,"column_end":42}},{"value":"/ * `Some(None)`: Represents a `null` value.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":95728,"byte_end":95774,"line_start":372,"line_end":372,"column_start":1,"column_end":47}},{"value":"/ * `Some(Some(value))`: Represents an existing value.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":95775,"byte_end":95831,"line_start":373,"line_end":373,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":95832,"byte_end":95835,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":95836,"byte_end":95850,"line_start":375,"line_end":375,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":95851,"byte_end":95854,"line_start":376,"line_end":376,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":95855,"byte_end":95866,"line_start":377,"line_end":377,"column_start":1,"column_end":12}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":95867,"byte_end":95916,"line_start":378,"line_end":378,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":95917,"byte_end":95922,"line_start":379,"line_end":379,"column_start":1,"column_end":6}},{"value":"/ # #[derive(Debug, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":95923,"byte_end":95960,"line_start":380,"line_end":380,"column_start":1,"column_end":38}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":95961,"byte_end":95998,"line_start":381,"line_end":381,"column_start":1,"column_end":38}},{"value":"/ struct Doc {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":95999,"byte_end":96015,"line_start":382,"line_end":382,"column_start":1,"column_end":17}},{"value":"/     #[serde(","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":96016,"byte_end":96032,"line_start":383,"line_end":383,"column_start":1,"column_end":17}},{"value":"/         default,                                    // <- important for deserialization","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":96033,"byte_end":96124,"line_start":384,"line_end":384,"column_start":1,"column_end":92}},{"value":"/         skip_serializing_if = \"Option::is_none\",    // <- important for serialization","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":96125,"byte_end":96214,"line_start":385,"line_end":385,"column_start":1,"column_end":90}},{"value":"/         with = \"::serde_with::rust::double_option\",","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":96215,"byte_end":96270,"line_start":386,"line_end":386,"column_start":1,"column_end":56}},{"value":"/     )]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":96271,"byte_end":96281,"line_start":387,"line_end":387,"column_start":1,"column_end":11}},{"value":"/     a: Option<Option<u8>>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":96282,"byte_end":96312,"line_start":388,"line_end":388,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":96313,"byte_end":96318,"line_start":389,"line_end":389,"column_start":1,"column_end":6}},{"value":"/ // Missing Value","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":96319,"byte_end":96339,"line_start":390,"line_end":390,"column_start":1,"column_end":21}},{"value":"/ let s = r#\"{}\"#;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":96340,"byte_end":96360,"line_start":391,"line_end":391,"column_start":1,"column_end":21}},{"value":"/ assert_eq!(Doc {a: None}, serde_json::from_str(s).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":96361,"byte_end":96425,"line_start":392,"line_end":392,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(s, serde_json::to_string(&Doc {a: None}).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":96426,"byte_end":96492,"line_start":393,"line_end":393,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":96493,"byte_end":96496,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/ // Unset Value","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":96497,"byte_end":96515,"line_start":395,"line_end":395,"column_start":1,"column_end":19}},{"value":"/ let s = r#\"{\"a\":null}\"#;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":96516,"byte_end":96544,"line_start":396,"line_end":396,"column_start":1,"column_end":29}},{"value":"/ assert_eq!(Doc {a: Some(None)}, serde_json::from_str(s).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":96545,"byte_end":96615,"line_start":397,"line_end":397,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(s, serde_json::to_string(&Doc {a: Some(None)}).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":96616,"byte_end":96688,"line_start":398,"line_end":398,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":96689,"byte_end":96692,"line_start":399,"line_end":399,"column_start":1,"column_end":4}},{"value":"/ // Existing Value","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":96693,"byte_end":96714,"line_start":400,"line_end":400,"column_start":1,"column_end":22}},{"value":"/ let s = r#\"{\"a\":5}\"#;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":96715,"byte_end":96740,"line_start":401,"line_end":401,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(Doc {a: Some(Some(5))}, serde_json::from_str(s).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":96741,"byte_end":96814,"line_start":402,"line_end":402,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(s, serde_json::to_string(&Doc {a: Some(Some(5))}).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":96815,"byte_end":96890,"line_start":403,"line_end":403,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":96891,"byte_end":96898,"line_start":404,"line_end":404,"column_start":1,"column_end":8}},{"value":"allow(clippy :: option_option)","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":96899,"byte_end":96930,"line_start":405,"line_end":405,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":97045,"byte_end":97056,"line_start":410,"line_end":410,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::double_option::deserialize","value":"pub fn deserialize<'de, T, D>(D) -> Result<Option<Option<T>>, D::Error> where\nT: Deserialize, D: Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserialize potentially non-existing optional value\n","sig":null,"attributes":[{"value":"/ Deserialize potentially non-existing optional value","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":96978,"byte_end":97033,"line_start":409,"line_end":409,"column_start":5,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":367},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":97307,"byte_end":97316,"line_start":419,"line_end":419,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::double_option::serialize","value":"pub fn serialize<S, T>(&Option<Option<T>>, S) -> Result<S::Ok, S::Error> where\nS: Serializer, T: Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serialize optional value\n","sig":null,"attributes":[{"value":"/ Serialize optional value","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":97267,"byte_end":97295,"line_start":418,"line_end":418,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":99781,"byte_end":99795,"line_start":491,"line_end":491,"column_start":9,"column_end":23},"name":"unwrap_or_skip","qualname":"::rust::unwrap_or_skip","value":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","parent":null,"children":[{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":376}],"decl_id":null,"docs":" Serialize inner value if [`Some`]`(T)`. If [`None`], serialize the unit struct `()`.","sig":null,"attributes":[{"value":"/ Serialize inner value if [`Some`]`(T)`. If [`None`], serialize the unit struct `()`.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":97660,"byte_end":97748,"line_start":432,"line_end":432,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":97749,"byte_end":97752,"line_start":433,"line_end":433,"column_start":1,"column_end":4}},{"value":"/ When used in conjunction with `skip_serializing_if = \"Option::is_none\"` and","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":97753,"byte_end":97832,"line_start":434,"line_end":434,"column_start":1,"column_end":80}},{"value":"/ `default`, you can build an optional value by skipping if it is [`None`], or serializing its","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":97833,"byte_end":97929,"line_start":435,"line_end":435,"column_start":1,"column_end":97}},{"value":"/ inner value if [`Some`]`(T)`.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":97930,"byte_end":97963,"line_start":436,"line_end":436,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":97964,"byte_end":97967,"line_start":437,"line_end":437,"column_start":1,"column_end":4}},{"value":"/ Not all serialization formats easily support optional values.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":97968,"byte_end":98033,"line_start":438,"line_end":438,"column_start":1,"column_end":66}},{"value":"/ While JSON uses the [`Option`] type to represent optional values and only serializes the inner","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":98034,"byte_end":98132,"line_start":439,"line_end":439,"column_start":1,"column_end":99}},{"value":"/ part of the [`Some`]`()`, other serialization formats, such as [RON][], choose to serialize the","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":98133,"byte_end":98232,"line_start":440,"line_end":440,"column_start":1,"column_end":100}},{"value":"/ [`Some`] around a value.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":98233,"byte_end":98261,"line_start":441,"line_end":441,"column_start":1,"column_end":29}},{"value":"/ This helper helps building a truly optional value for such serializers.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":98262,"byte_end":98337,"line_start":442,"line_end":442,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":98338,"byte_end":98341,"line_start":443,"line_end":443,"column_start":1,"column_end":4}},{"value":"/ [RON]: https://github.com/ron-rs/ron","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":98342,"byte_end":98382,"line_start":444,"line_end":444,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":98383,"byte_end":98386,"line_start":445,"line_end":445,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":98387,"byte_end":98400,"line_start":446,"line_end":446,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":98401,"byte_end":98404,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":98405,"byte_end":98416,"line_start":448,"line_end":448,"column_start":1,"column_end":12}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":98417,"byte_end":98466,"line_start":449,"line_end":449,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":98467,"byte_end":98472,"line_start":450,"line_end":450,"column_start":1,"column_end":6}},{"value":"/ # #[derive(Debug, Eq, PartialEq)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":98473,"byte_end":98510,"line_start":451,"line_end":451,"column_start":1,"column_end":38}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":98511,"byte_end":98548,"line_start":452,"line_end":452,"column_start":1,"column_end":38}},{"value":"/ struct Doc {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":98549,"byte_end":98565,"line_start":453,"line_end":453,"column_start":1,"column_end":17}},{"value":"/     mandatory: usize,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":98566,"byte_end":98591,"line_start":454,"line_end":454,"column_start":1,"column_end":26}},{"value":"/     #[serde(","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":98592,"byte_end":98608,"line_start":455,"line_end":455,"column_start":1,"column_end":17}},{"value":"/         default,                                    // <- important for deserialization","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":98609,"byte_end":98700,"line_start":456,"line_end":456,"column_start":1,"column_end":92}},{"value":"/         skip_serializing_if = \"Option::is_none\",    // <- important for serialization","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":98701,"byte_end":98790,"line_start":457,"line_end":457,"column_start":1,"column_end":90}},{"value":"/         with = \"::serde_with::rust::unwrap_or_skip\",","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":98791,"byte_end":98847,"line_start":458,"line_end":458,"column_start":1,"column_end":57}},{"value":"/     )]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":98848,"byte_end":98858,"line_start":459,"line_end":459,"column_start":1,"column_end":11}},{"value":"/     optional: Option<usize>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":98859,"byte_end":98891,"line_start":460,"line_end":460,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":98892,"byte_end":98897,"line_start":461,"line_end":461,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":98898,"byte_end":98901,"line_start":462,"line_end":462,"column_start":1,"column_end":4}},{"value":"/ // Transparently add/remove Some() wrapper","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":98902,"byte_end":98948,"line_start":463,"line_end":463,"column_start":1,"column_end":47}},{"value":"/ # let pretty_config = ron::ser::PrettyConfig::new()","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":98949,"byte_end":99004,"line_start":464,"line_end":464,"column_start":1,"column_end":56}},{"value":"/ #     .with_new_line(\"\\n\".into());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":99005,"byte_end":99043,"line_start":465,"line_end":465,"column_start":1,"column_end":39}},{"value":"/ let s = r#\"(","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":99044,"byte_end":99060,"line_start":466,"line_end":466,"column_start":1,"column_end":17}},{"value":"/     mandatory: 1,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":99061,"byte_end":99082,"line_start":467,"line_end":467,"column_start":1,"column_end":22}},{"value":"/     optional: 2,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":99083,"byte_end":99103,"line_start":468,"line_end":468,"column_start":1,"column_end":21}},{"value":"/ )\"#;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":99104,"byte_end":99112,"line_start":469,"line_end":469,"column_start":1,"column_end":9}},{"value":"/ let v = Doc {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":99113,"byte_end":99130,"line_start":470,"line_end":470,"column_start":1,"column_end":18}},{"value":"/     mandatory: 1,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":99131,"byte_end":99152,"line_start":471,"line_end":471,"column_start":1,"column_end":22}},{"value":"/     optional: Some(2),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":99153,"byte_end":99179,"line_start":472,"line_end":472,"column_start":1,"column_end":27}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":99180,"byte_end":99186,"line_start":473,"line_end":473,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(v, ron::de::from_str(s).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":99187,"byte_end":99236,"line_start":474,"line_end":474,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(s, ron::ser::to_string_pretty(&v, pretty_config).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":99237,"byte_end":99311,"line_start":475,"line_end":475,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":99312,"byte_end":99315,"line_start":476,"line_end":476,"column_start":1,"column_end":4}},{"value":"/ // Missing values are deserialized as `None`","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":99316,"byte_end":99364,"line_start":477,"line_end":477,"column_start":1,"column_end":49}},{"value":"/ // while `None` values are skipped during serialization.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":99365,"byte_end":99425,"line_start":478,"line_end":478,"column_start":1,"column_end":61}},{"value":"/ # let pretty_config = ron::ser::PrettyConfig::new()","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":99426,"byte_end":99481,"line_start":479,"line_end":479,"column_start":1,"column_end":56}},{"value":"/ #     .with_new_line(\"\\n\".into());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":99482,"byte_end":99520,"line_start":480,"line_end":480,"column_start":1,"column_end":39}},{"value":"/ let s = r#\"(","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":99521,"byte_end":99537,"line_start":481,"line_end":481,"column_start":1,"column_end":17}},{"value":"/     mandatory: 1,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":99538,"byte_end":99559,"line_start":482,"line_end":482,"column_start":1,"column_end":22}},{"value":"/ )\"#;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":99560,"byte_end":99568,"line_start":483,"line_end":483,"column_start":1,"column_end":9}},{"value":"/ let v = Doc {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":99569,"byte_end":99586,"line_start":484,"line_end":484,"column_start":1,"column_end":18}},{"value":"/     mandatory: 1,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":99587,"byte_end":99608,"line_start":485,"line_end":485,"column_start":1,"column_end":22}},{"value":"/     optional: None,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":99609,"byte_end":99632,"line_start":486,"line_end":486,"column_start":1,"column_end":24}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":99633,"byte_end":99639,"line_start":487,"line_end":487,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(v, ron::de::from_str(s).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":99640,"byte_end":99689,"line_start":488,"line_end":488,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(s, ron::ser::to_string_pretty(&v, pretty_config).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":99690,"byte_end":99764,"line_start":489,"line_end":489,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":99765,"byte_end":99772,"line_start":490,"line_end":490,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":372},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":99873,"byte_end":99884,"line_start":495,"line_end":495,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::unwrap_or_skip::deserialize","value":"pub fn deserialize<'de, D, T>(D) -> Result<Option<T>, D::Error> where\nD: Deserializer, T: DeserializeOwned","parent":null,"children":[],"decl_id":null,"docs":" Deserialize value wrapped in Some(T)\n","sig":null,"attributes":[{"value":"/ Deserialize value wrapped in Some(T)","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":99821,"byte_end":99861,"line_start":494,"line_end":494,"column_start":5,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":376},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":100140,"byte_end":100149,"line_start":504,"line_end":504,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::unwrap_or_skip::serialize","value":"pub fn serialize<T, S>(&Option<T>, S) -> Result<S::Ok, S::Error> where\nT: Serialize, S: Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize value if Some(T), unit struct if None\n","sig":null,"attributes":[{"value":"/ Serialize value if Some(T), unit struct if None","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":100077,"byte_end":100128,"line_start":503,"line_end":503,"column_start":5,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":379},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":101761,"byte_end":101790,"line_start":555,"line_end":555,"column_start":9,"column_end":38},"name":"sets_duplicate_value_is_error","qualname":"::rust::sets_duplicate_value_is_error","value":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":400}],"decl_id":null,"docs":" Ensure no duplicate values exist in a set.","sig":null,"attributes":[{"value":"/ Ensure no duplicate values exist in a set.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":100430,"byte_end":100476,"line_start":517,"line_end":517,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":100477,"byte_end":100480,"line_start":518,"line_end":518,"column_start":1,"column_end":4}},{"value":"/ By default serde has a last-value-wins implementation, if duplicate values for a set exist.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":100481,"byte_end":100576,"line_start":519,"line_end":519,"column_start":1,"column_end":96}},{"value":"/ Sometimes it is desirable to know when such an event happens, as the first value is overwritten","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":100577,"byte_end":100676,"line_start":520,"line_end":520,"column_start":1,"column_end":100}},{"value":"/ and it can indicate an error in the serialized data.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":100677,"byte_end":100733,"line_start":521,"line_end":521,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":100734,"byte_end":100737,"line_start":522,"line_end":522,"column_start":1,"column_end":4}},{"value":"/ This helper returns an error if two identical values exist in a set.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":100738,"byte_end":100810,"line_start":523,"line_end":523,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":100811,"byte_end":100814,"line_start":524,"line_end":524,"column_start":1,"column_end":4}},{"value":"/ The implementation supports both the [`HashSet`] and the [`BTreeSet`] from the standard library.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":100815,"byte_end":100915,"line_start":525,"line_end":525,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":100916,"byte_end":100919,"line_start":526,"line_end":526,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: std::collections::HashSet","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":100920,"byte_end":100962,"line_start":527,"line_end":527,"column_start":1,"column_end":43}},{"value":"/ [`BTreeSet`]: std::collections::HashSet","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":100963,"byte_end":101006,"line_start":528,"line_end":528,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":101007,"byte_end":101010,"line_start":529,"line_end":529,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":101011,"byte_end":101024,"line_start":530,"line_end":530,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":101025,"byte_end":101028,"line_start":531,"line_end":531,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":101029,"byte_end":101040,"line_start":532,"line_end":532,"column_start":1,"column_end":12}},{"value":"/ # use std::{collections::HashSet, iter::FromIterator};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":101041,"byte_end":101099,"line_start":533,"line_end":533,"column_start":1,"column_end":59}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":101100,"byte_end":101136,"line_start":534,"line_end":534,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":101137,"byte_end":101142,"line_start":535,"line_end":535,"column_start":1,"column_end":6}},{"value":"/ # #[derive(Debug, Eq, PartialEq)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":101143,"byte_end":101180,"line_start":536,"line_end":536,"column_start":1,"column_end":38}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":101181,"byte_end":101207,"line_start":537,"line_end":537,"column_start":1,"column_end":27}},{"value":"/ struct Doc {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":101208,"byte_end":101224,"line_start":538,"line_end":538,"column_start":1,"column_end":17}},{"value":"/     #[serde(with = \"::serde_with::rust::sets_duplicate_value_is_error\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":101225,"byte_end":101301,"line_start":539,"line_end":539,"column_start":1,"column_end":77}},{"value":"/     set: HashSet<usize>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":101302,"byte_end":101330,"line_start":540,"line_end":540,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":101331,"byte_end":101336,"line_start":541,"line_end":541,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":101337,"byte_end":101340,"line_start":542,"line_end":542,"column_start":1,"column_end":4}},{"value":"/ // Sets are serialized normally,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":101341,"byte_end":101377,"line_start":543,"line_end":543,"column_start":1,"column_end":37}},{"value":"/ let s = r#\"{\"set\": [1, 2, 3, 4]}\"#;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":101378,"byte_end":101417,"line_start":544,"line_end":544,"column_start":1,"column_end":40}},{"value":"/ let v = Doc {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":101418,"byte_end":101435,"line_start":545,"line_end":545,"column_start":1,"column_end":18}},{"value":"/     set: HashSet::from_iter(vec![1, 2, 3, 4]),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":101436,"byte_end":101486,"line_start":546,"line_end":546,"column_start":1,"column_end":51}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":101487,"byte_end":101493,"line_start":547,"line_end":547,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(v, serde_json::from_str(s).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":101494,"byte_end":101546,"line_start":548,"line_end":548,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":101547,"byte_end":101550,"line_start":549,"line_end":549,"column_start":1,"column_end":4}},{"value":"/ // but create an error if duplicate values, like the `1`, exist.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":101551,"byte_end":101619,"line_start":550,"line_end":550,"column_start":1,"column_end":69}},{"value":"/ let s = r#\"{\"set\": [1, 2, 3, 4, 1]}\"#;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":101620,"byte_end":101662,"line_start":551,"line_end":551,"column_start":1,"column_end":43}},{"value":"/ let res: Result<Doc, _> = serde_json::from_str(s);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":101663,"byte_end":101717,"line_start":552,"line_end":552,"column_start":1,"column_end":55}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":101718,"byte_end":101744,"line_start":553,"line_end":553,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":101745,"byte_end":101752,"line_start":554,"line_end":554,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":382},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":101953,"byte_end":101964,"line_start":560,"line_end":560,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::sets_duplicate_value_is_error::deserialize","value":"pub fn deserialize<'de, D, T, V>(D) -> Result<T, D::Error> where\nT: PreventDuplicateInsertsSet<V>, V: Deserialize, D: Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a set and return an error on duplicate values\n","sig":null,"attributes":[{"value":"/ Deserialize a set and return an error on duplicate values","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":101880,"byte_end":101941,"line_start":559,"line_end":559,"column_start":5,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":400},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":103378,"byte_end":103387,"line_start":607,"line_end":607,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::sets_duplicate_value_is_error::serialize","value":"pub fn serialize<T, S>(&T, S) -> Result<S::Ok, S::Error> where T: Serialize,\nS: Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize the set with the default serializer\n","sig":null,"attributes":[{"value":"/ Serialize the set with the default serializer","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":103317,"byte_end":103366,"line_start":606,"line_end":606,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":104934,"byte_end":104961,"line_start":657,"line_end":657,"column_start":9,"column_end":36},"name":"maps_duplicate_key_is_error","qualname":"::rust::maps_duplicate_key_is_error","value":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":428}],"decl_id":null,"docs":" Ensure no duplicate keys exist in a map.","sig":null,"attributes":[{"value":"/ Ensure no duplicate keys exist in a map.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":103553,"byte_end":103597,"line_start":616,"line_end":616,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":103598,"byte_end":103601,"line_start":617,"line_end":617,"column_start":1,"column_end":4}},{"value":"/ By default serde has a last-value-wins implementation, if duplicate keys for a map exist.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":103602,"byte_end":103695,"line_start":618,"line_end":618,"column_start":1,"column_end":94}},{"value":"/ Sometimes it is desirable to know when such an event happens, as the first value is overwritten","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":103696,"byte_end":103795,"line_start":619,"line_end":619,"column_start":1,"column_end":100}},{"value":"/ and it can indicate an error in the serialized data.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":103796,"byte_end":103852,"line_start":620,"line_end":620,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":103853,"byte_end":103856,"line_start":621,"line_end":621,"column_start":1,"column_end":4}},{"value":"/ This helper returns an error if two identical keys exist in a map.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":103857,"byte_end":103927,"line_start":622,"line_end":622,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":103928,"byte_end":103931,"line_start":623,"line_end":623,"column_start":1,"column_end":4}},{"value":"/ The implementation supports both the [`HashMap`] and the [`BTreeMap`] from the standard library.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":103932,"byte_end":104032,"line_start":624,"line_end":624,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":104033,"byte_end":104036,"line_start":625,"line_end":625,"column_start":1,"column_end":4}},{"value":"/ [`HashMap`]: std::collections::HashMap","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":104037,"byte_end":104079,"line_start":626,"line_end":626,"column_start":1,"column_end":43}},{"value":"/ [`BTreeMap`]: std::collections::HashMap","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":104080,"byte_end":104123,"line_start":627,"line_end":627,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":104124,"byte_end":104127,"line_start":628,"line_end":628,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":104128,"byte_end":104141,"line_start":629,"line_end":629,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":104142,"byte_end":104145,"line_start":630,"line_end":630,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":104146,"byte_end":104157,"line_start":631,"line_end":631,"column_start":1,"column_end":12}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":104158,"byte_end":104194,"line_start":632,"line_end":632,"column_start":1,"column_end":37}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":104195,"byte_end":104231,"line_start":633,"line_end":633,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":104232,"byte_end":104237,"line_start":634,"line_end":634,"column_start":1,"column_end":6}},{"value":"/ # #[derive(Debug, Eq, PartialEq)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":104238,"byte_end":104275,"line_start":635,"line_end":635,"column_start":1,"column_end":38}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":104276,"byte_end":104302,"line_start":636,"line_end":636,"column_start":1,"column_end":27}},{"value":"/ struct Doc {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":104303,"byte_end":104319,"line_start":637,"line_end":637,"column_start":1,"column_end":17}},{"value":"/     #[serde(with = \"::serde_with::rust::maps_duplicate_key_is_error\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":104320,"byte_end":104394,"line_start":638,"line_end":638,"column_start":1,"column_end":75}},{"value":"/     map: HashMap<usize, usize>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":104395,"byte_end":104430,"line_start":639,"line_end":639,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":104431,"byte_end":104436,"line_start":640,"line_end":640,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":104437,"byte_end":104440,"line_start":641,"line_end":641,"column_start":1,"column_end":4}},{"value":"/ // Maps are serialized normally,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":104441,"byte_end":104477,"line_start":642,"line_end":642,"column_start":1,"column_end":37}},{"value":"/ let s = r#\"{\"map\": {\"1\": 1, \"2\": 2, \"3\": 3}}\"#;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":104478,"byte_end":104529,"line_start":643,"line_end":643,"column_start":1,"column_end":52}},{"value":"/ let mut v = Doc {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":104530,"byte_end":104551,"line_start":644,"line_end":644,"column_start":1,"column_end":22}},{"value":"/     map: HashMap::new(),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":104552,"byte_end":104580,"line_start":645,"line_end":645,"column_start":1,"column_end":29}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":104581,"byte_end":104587,"line_start":646,"line_end":646,"column_start":1,"column_end":7}},{"value":"/ v.map.insert(1, 1);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":104588,"byte_end":104611,"line_start":647,"line_end":647,"column_start":1,"column_end":24}},{"value":"/ v.map.insert(2, 2);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":104612,"byte_end":104635,"line_start":648,"line_end":648,"column_start":1,"column_end":24}},{"value":"/ v.map.insert(3, 3);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":104636,"byte_end":104659,"line_start":649,"line_end":649,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(v, serde_json::from_str(s).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":104660,"byte_end":104712,"line_start":650,"line_end":650,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":104713,"byte_end":104716,"line_start":651,"line_end":651,"column_start":1,"column_end":4}},{"value":"/ // but create an error if duplicate keys, like the `1`, exist.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":104717,"byte_end":104783,"line_start":652,"line_end":652,"column_start":1,"column_end":67}},{"value":"/ let s = r#\"{\"map\": {\"1\": 1, \"2\": 2, \"1\": 3}}\"#;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":104784,"byte_end":104835,"line_start":653,"line_end":653,"column_start":1,"column_end":52}},{"value":"/ let res: Result<Doc, _> = serde_json::from_str(s);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":104836,"byte_end":104890,"line_start":654,"line_end":654,"column_start":1,"column_end":55}},{"value":"/ assert!(res.is_err());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":104891,"byte_end":104917,"line_start":655,"line_end":655,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":104918,"byte_end":104925,"line_start":656,"line_end":656,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":406},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":105122,"byte_end":105133,"line_start":662,"line_end":662,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::maps_duplicate_key_is_error::deserialize","value":"pub fn deserialize<'de, D, T, K, V>(D) -> Result<T, D::Error> where\nT: PreventDuplicateInsertsMap<K, V>, K: Deserialize, V: Deserialize,\nD: Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a map and return an error on duplicate keys\n","sig":null,"attributes":[{"value":"/ Deserialize a map and return an error on duplicate keys","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":105051,"byte_end":105110,"line_start":661,"line_end":661,"column_start":5,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":428},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":106713,"byte_end":106722,"line_start":713,"line_end":713,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::maps_duplicate_key_is_error::serialize","value":"pub fn serialize<T, S>(&T, S) -> Result<S::Ok, S::Error> where T: Serialize,\nS: Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize the map with the default serializer\n","sig":null,"attributes":[{"value":"/ Serialize the map with the default serializer","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":106652,"byte_end":106701,"line_start":712,"line_end":712,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":431},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":107203,"byte_end":107224,"line_start":727,"line_end":727,"column_start":9,"column_end":30},"name":"sets_first_value_wins","qualname":"::rust::sets_first_value_wins","value":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":452}],"decl_id":null,"docs":" *DEPRECATED* Ensure that the first value is taken, if duplicate values exist","sig":null,"attributes":[{"value":"/ *DEPRECATED* Ensure that the first value is taken, if duplicate values exist","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":106888,"byte_end":106968,"line_start":722,"line_end":722,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":106969,"byte_end":106972,"line_start":723,"line_end":723,"column_start":1,"column_end":4}},{"value":"/ This module implements the default behavior in serde.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":106973,"byte_end":107030,"line_start":724,"line_end":724,"column_start":1,"column_end":58}},{"value":"deprecated =\n  \"This module does nothing. Remove the attribute. Serde's default behavior is to use the first value when deserializing a set.\"","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":107031,"byte_end":107173,"line_start":725,"line_end":725,"column_start":1,"column_end":143}},{"value":"allow(deprecated)","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":107174,"byte_end":107194,"line_start":726,"line_end":726,"column_start":1,"column_end":21}}]},{"kind":"Function","id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":107533,"byte_end":107544,"line_start":733,"line_end":733,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::sets_first_value_wins::deserialize","value":"pub fn deserialize<'de, D, T, V>(D) -> Result<T, D::Error> where\nT: DuplicateInsertsFirstWinsSet<V>, V: Deserialize, D: Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a set and keep the first of equal values\n","sig":null,"attributes":[{"value":"/ Deserialize a set and keep the first of equal values","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":107316,"byte_end":107372,"line_start":731,"line_end":731,"column_start":5,"column_end":61}},{"value":"deprecated =\n  \"This function does nothing. Remove the attribute. Serde's default behavior is to use the first value when deserializing a set.\"","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":107377,"byte_end":107521,"line_start":732,"line_end":732,"column_start":5,"column_end":149}}]},{"kind":"Function","id":{"krate":0,"index":452},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":108992,"byte_end":109001,"line_start":779,"line_end":779,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::sets_first_value_wins::serialize","value":"pub fn serialize<T, S>(&T, S) -> Result<S::Ok, S::Error> where T: Serialize,\nS: Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize the set with the default serializer\n","sig":null,"attributes":[{"value":"/ Serialize the set with the default serializer","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":108782,"byte_end":108831,"line_start":777,"line_end":777,"column_start":5,"column_end":54}},{"value":"deprecated =\n  \"This function does nothing. Remove the attribute. Serde's default behavior is to use the first value when deserializing a set.\"","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":108836,"byte_end":108980,"line_start":778,"line_end":778,"column_start":5,"column_end":149}}]},{"kind":"Mod","id":{"krate":0,"index":455},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":109637,"byte_end":109657,"line_start":797,"line_end":797,"column_start":9,"column_end":29},"name":"sets_last_value_wins","qualname":"::rust::sets_last_value_wins","value":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":476}],"decl_id":null,"docs":" Ensure that the last value is taken, if duplicate values exist","sig":null,"attributes":[{"value":"/ Ensure that the last value is taken, if duplicate values exist","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":109167,"byte_end":109233,"line_start":788,"line_end":788,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":109234,"byte_end":109237,"line_start":789,"line_end":789,"column_start":1,"column_end":4}},{"value":"/ By default serde has a first-value-wins implementation, if duplicate keys for a set exist.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":109238,"byte_end":109332,"line_start":790,"line_end":790,"column_start":1,"column_end":95}},{"value":"/ Sometimes the opposite strategy is desired. This helper implements a first-value-wins strategy.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":109333,"byte_end":109432,"line_start":791,"line_end":791,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":109433,"byte_end":109436,"line_start":792,"line_end":792,"column_start":1,"column_end":4}},{"value":"/ The implementation supports both the [`HashSet`] and the [`BTreeSet`] from the standard library.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":109437,"byte_end":109537,"line_start":793,"line_end":793,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":109538,"byte_end":109541,"line_start":794,"line_end":794,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: std::collections::HashSet","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":109542,"byte_end":109584,"line_start":795,"line_end":795,"column_start":1,"column_end":43}},{"value":"/ [`BTreeSet`]: std::collections::HashSet","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":109585,"byte_end":109628,"line_start":796,"line_end":796,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":109815,"byte_end":109826,"line_start":802,"line_end":802,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::sets_last_value_wins::deserialize","value":"pub fn deserialize<'de, D, T, V>(D) -> Result<T, D::Error> where\nT: DuplicateInsertsLastWinsSet<V>, V: Deserialize, D: Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a set and keep the last of equal values\n","sig":null,"attributes":[{"value":"/ Deserialize a set and keep the last of equal values","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":109748,"byte_end":109803,"line_start":801,"line_end":801,"column_start":5,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":476},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":111124,"byte_end":111133,"line_start":847,"line_end":847,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::sets_last_value_wins::serialize","value":"pub fn serialize<T, S>(&T, S) -> Result<S::Ok, S::Error> where T: Serialize,\nS: Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize the set with the default serializer\n","sig":null,"attributes":[{"value":"/ Serialize the set with the default serializer","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":111063,"byte_end":111112,"line_start":846,"line_end":846,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":479},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":112632,"byte_end":112651,"line_start":898,"line_end":898,"column_start":9,"column_end":28},"name":"maps_first_key_wins","qualname":"::rust::maps_first_key_wins","value":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","parent":null,"children":[{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":504}],"decl_id":null,"docs":" Ensure that the first key is taken, if duplicate keys exist","sig":null,"attributes":[{"value":"/ Ensure that the first key is taken, if duplicate keys exist","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":111299,"byte_end":111362,"line_start":856,"line_end":856,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":111363,"byte_end":111366,"line_start":857,"line_end":857,"column_start":1,"column_end":4}},{"value":"/ By default serde has a last-key-wins implementation, if duplicate keys for a map exist.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":111367,"byte_end":111458,"line_start":858,"line_end":858,"column_start":1,"column_end":92}},{"value":"/ Sometimes the opposite strategy is desired. This helper implements a first-key-wins strategy.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":111459,"byte_end":111556,"line_start":859,"line_end":859,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":111557,"byte_end":111560,"line_start":860,"line_end":860,"column_start":1,"column_end":4}},{"value":"/ The implementation supports both the [`HashMap`] and the [`BTreeMap`] from the standard library.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":111561,"byte_end":111661,"line_start":861,"line_end":861,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":111662,"byte_end":111665,"line_start":862,"line_end":862,"column_start":1,"column_end":4}},{"value":"/ [`HashMap`]: std::collections::HashMap","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":111666,"byte_end":111708,"line_start":863,"line_end":863,"column_start":1,"column_end":43}},{"value":"/ [`BTreeMap`]: std::collections::HashMap","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":111709,"byte_end":111752,"line_start":864,"line_end":864,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":111753,"byte_end":111756,"line_start":865,"line_end":865,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":111757,"byte_end":111770,"line_start":866,"line_end":866,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":111771,"byte_end":111774,"line_start":867,"line_end":867,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":111775,"byte_end":111786,"line_start":868,"line_end":868,"column_start":1,"column_end":12}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":111787,"byte_end":111823,"line_start":869,"line_end":869,"column_start":1,"column_end":37}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":111824,"byte_end":111860,"line_start":870,"line_end":870,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":111861,"byte_end":111866,"line_start":871,"line_end":871,"column_start":1,"column_end":6}},{"value":"/ # #[derive(Debug, Eq, PartialEq)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":111867,"byte_end":111904,"line_start":872,"line_end":872,"column_start":1,"column_end":38}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":111905,"byte_end":111931,"line_start":873,"line_end":873,"column_start":1,"column_end":27}},{"value":"/ struct Doc {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":111932,"byte_end":111948,"line_start":874,"line_end":874,"column_start":1,"column_end":17}},{"value":"/     #[serde(with = \"::serde_with::rust::maps_first_key_wins\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":111949,"byte_end":112015,"line_start":875,"line_end":875,"column_start":1,"column_end":67}},{"value":"/     map: HashMap<usize, usize>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":112016,"byte_end":112051,"line_start":876,"line_end":876,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":112052,"byte_end":112057,"line_start":877,"line_end":877,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":112058,"byte_end":112061,"line_start":878,"line_end":878,"column_start":1,"column_end":4}},{"value":"/ // Maps are serialized normally,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":112062,"byte_end":112098,"line_start":879,"line_end":879,"column_start":1,"column_end":37}},{"value":"/ let s = r#\"{\"map\": {\"1\": 1, \"2\": 2, \"3\": 3}}\"#;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":112099,"byte_end":112150,"line_start":880,"line_end":880,"column_start":1,"column_end":52}},{"value":"/ let mut v = Doc {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":112151,"byte_end":112172,"line_start":881,"line_end":881,"column_start":1,"column_end":22}},{"value":"/     map: HashMap::new(),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":112173,"byte_end":112201,"line_start":882,"line_end":882,"column_start":1,"column_end":29}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":112202,"byte_end":112208,"line_start":883,"line_end":883,"column_start":1,"column_end":7}},{"value":"/ v.map.insert(1, 1);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":112209,"byte_end":112232,"line_start":884,"line_end":884,"column_start":1,"column_end":24}},{"value":"/ v.map.insert(2, 2);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":112233,"byte_end":112256,"line_start":885,"line_end":885,"column_start":1,"column_end":24}},{"value":"/ v.map.insert(3, 3);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":112257,"byte_end":112280,"line_start":886,"line_end":886,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(v, serde_json::from_str(s).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":112281,"byte_end":112333,"line_start":887,"line_end":887,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":112334,"byte_end":112337,"line_start":888,"line_end":888,"column_start":1,"column_end":4}},{"value":"/ // but create an error if duplicate keys, like the `1`, exist.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":112338,"byte_end":112404,"line_start":889,"line_end":889,"column_start":1,"column_end":67}},{"value":"/ let s = r#\"{\"map\": {\"1\": 1, \"2\": 2, \"1\": 3}}\"#;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":112405,"byte_end":112456,"line_start":890,"line_end":890,"column_start":1,"column_end":52}},{"value":"/ let mut v = Doc {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":112457,"byte_end":112478,"line_start":891,"line_end":891,"column_start":1,"column_end":22}},{"value":"/     map: HashMap::new(),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":112479,"byte_end":112507,"line_start":892,"line_end":892,"column_start":1,"column_end":29}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":112508,"byte_end":112514,"line_start":893,"line_end":893,"column_start":1,"column_end":7}},{"value":"/ v.map.insert(1, 1);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":112515,"byte_end":112538,"line_start":894,"line_end":894,"column_start":1,"column_end":24}},{"value":"/ v.map.insert(2, 2);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":112539,"byte_end":112562,"line_start":895,"line_end":895,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(v, serde_json::from_str(s).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":112563,"byte_end":112615,"line_start":896,"line_end":896,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":112616,"byte_end":112623,"line_start":897,"line_end":897,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":482},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":112814,"byte_end":112825,"line_start":903,"line_end":903,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::maps_first_key_wins::deserialize","value":"pub fn deserialize<'de, D, T, K, V>(D) -> Result<T, D::Error> where\nT: DuplicateInsertsFirstWinsMap<K, V>, K: Deserialize, V: Deserialize,\nD: Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a map and return an error on duplicate keys\n","sig":null,"attributes":[{"value":"/ Deserialize a map and return an error on duplicate keys","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":112743,"byte_end":112802,"line_start":902,"line_end":902,"column_start":5,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":504},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":114292,"byte_end":114301,"line_start":952,"line_end":952,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::maps_first_key_wins::serialize","value":"pub fn serialize<T, S>(&T, S) -> Result<S::Ok, S::Error> where T: Serialize,\nS: Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize the map with the default serializer\n","sig":null,"attributes":[{"value":"/ Serialize the map with the default serializer","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":114231,"byte_end":114280,"line_start":951,"line_end":951,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":507},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":116141,"byte_end":116161,"line_start":1016,"line_end":1016,"column_start":9,"column_end":29},"name":"string_empty_as_none","qualname":"::rust::string_empty_as_none","value":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","parent":null,"children":[{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":528}],"decl_id":null,"docs":" De/Serialize a [`Option`]`<`[`String`]`>` type while transforming the empty string to [`None`]","sig":null,"attributes":[{"value":"/ De/Serialize a [`Option`]`<`[`String`]`>` type while transforming the empty string to [`None`]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":114467,"byte_end":114565,"line_start":961,"line_end":961,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":114566,"byte_end":114569,"line_start":962,"line_end":962,"column_start":1,"column_end":4}},{"value":"/ Convert an [`Option`]`<T>` from/to string using [`FromStr`] and [`AsRef`]`<`[`str`]`>` implementations.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":114570,"byte_end":114677,"line_start":963,"line_end":963,"column_start":1,"column_end":108}},{"value":"/ An empty string is deserialized as [`None`] and a [`None`] vice versa.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":114678,"byte_end":114752,"line_start":964,"line_end":964,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":114753,"byte_end":114756,"line_start":965,"line_end":965,"column_start":1,"column_end":4}},{"value":"/ ## Converting to `serde_as`","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":114757,"byte_end":114788,"line_start":966,"line_end":966,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":114789,"byte_end":114792,"line_start":967,"line_end":967,"column_start":1,"column_end":4}},{"value":"/ The same functionality can be more clearly expressed via [`NoneAsEmptyString`] and using the [`serde_as`] macro.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":114793,"byte_end":114909,"line_start":968,"line_end":968,"column_start":1,"column_end":117}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":114910,"byte_end":114913,"line_start":969,"line_end":969,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":114914,"byte_end":114925,"line_start":970,"line_end":970,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":114926,"byte_end":114960,"line_start":971,"line_end":971,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":114961,"byte_end":114997,"line_start":972,"line_end":972,"column_start":1,"column_end":37}},{"value":"/ # use serde_with::{serde_as, NoneAsEmptyString};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":114998,"byte_end":115050,"line_start":973,"line_end":973,"column_start":1,"column_end":53}},{"value":"/ #","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":115051,"byte_end":115056,"line_start":974,"line_end":974,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":115057,"byte_end":115072,"line_start":975,"line_end":975,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":115073,"byte_end":115099,"line_start":976,"line_end":976,"column_start":1,"column_end":27}},{"value":"/ struct A {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":115100,"byte_end":115114,"line_start":977,"line_end":977,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"NoneAsEmptyString\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":115115,"byte_end":115160,"line_start":978,"line_end":978,"column_start":1,"column_end":46}},{"value":"/     value: Option<String>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":115161,"byte_end":115191,"line_start":979,"line_end":979,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":115192,"byte_end":115197,"line_start":980,"line_end":980,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":115198,"byte_end":115205,"line_start":981,"line_end":981,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":115206,"byte_end":115213,"line_start":982,"line_end":982,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":115214,"byte_end":115217,"line_start":983,"line_end":983,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":115218,"byte_end":115232,"line_start":984,"line_end":984,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":115233,"byte_end":115236,"line_start":985,"line_end":985,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":115237,"byte_end":115244,"line_start":986,"line_end":986,"column_start":1,"column_end":8}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":115245,"byte_end":115294,"line_start":987,"line_end":987,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":115295,"byte_end":115322,"line_start":988,"line_end":988,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::rust::string_empty_as_none;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":115323,"byte_end":115372,"line_start":989,"line_end":989,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":115373,"byte_end":115378,"line_start":990,"line_end":990,"column_start":1,"column_end":6}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":115379,"byte_end":115416,"line_start":991,"line_end":991,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":115417,"byte_end":115431,"line_start":992,"line_end":992,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"string_empty_as_none\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":115432,"byte_end":115479,"line_start":993,"line_end":993,"column_start":1,"column_end":48}},{"value":"/     tags: Option<String>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":115480,"byte_end":115509,"line_start":994,"line_end":994,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":115510,"byte_end":115515,"line_start":995,"line_end":995,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":115516,"byte_end":115519,"line_start":996,"line_end":996,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_value(json!({ \"tags\": \"\" })).unwrap();","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":115520,"byte_end":115590,"line_start":997,"line_end":997,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(None, v.tags);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":115591,"byte_end":115620,"line_start":998,"line_end":998,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":115621,"byte_end":115624,"line_start":999,"line_end":999,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_value(json!({ \"tags\": \"Hi\" })).unwrap();","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":115625,"byte_end":115697,"line_start":1000,"line_end":1000,"column_start":1,"column_end":73}},{"value":"/ assert_eq!(Some(\"Hi\".to_string()), v.tags);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":115698,"byte_end":115745,"line_start":1001,"line_end":1001,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":115746,"byte_end":115749,"line_start":1002,"line_end":1002,"column_start":1,"column_end":4}},{"value":"/ let x = A {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":115750,"byte_end":115765,"line_start":1003,"line_end":1003,"column_start":1,"column_end":16}},{"value":"/     tags: Some(\"This is text\".to_string()),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":115766,"byte_end":115813,"line_start":1004,"line_end":1004,"column_start":1,"column_end":48}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":115814,"byte_end":115820,"line_start":1005,"line_end":1005,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(json!({ \"tags\": \"This is text\" }), serde_json::to_value(&x).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":115821,"byte_end":115906,"line_start":1006,"line_end":1006,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":115907,"byte_end":115910,"line_start":1007,"line_end":1007,"column_start":1,"column_end":4}},{"value":"/ let x = A {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":115911,"byte_end":115926,"line_start":1008,"line_end":1008,"column_start":1,"column_end":16}},{"value":"/     tags: None,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":115927,"byte_end":115946,"line_start":1009,"line_end":1009,"column_start":1,"column_end":20}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":115947,"byte_end":115953,"line_start":1010,"line_end":1010,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(json!({ \"tags\": \"\" }), serde_json::to_value(&x).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":115954,"byte_end":116027,"line_start":1011,"line_end":1011,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":116028,"byte_end":116035,"line_start":1012,"line_end":1012,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":116036,"byte_end":116039,"line_start":1013,"line_end":1013,"column_start":1,"column_end":4}},{"value":"/ [`NoneAsEmptyString`]: crate::NoneAsEmptyString","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":116040,"byte_end":116091,"line_start":1014,"line_end":1014,"column_start":1,"column_end":52}},{"value":"/ [`serde_as`]: crate::guide::serde_as","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":116092,"byte_end":116132,"line_start":1015,"line_end":1015,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":116259,"byte_end":116270,"line_start":1020,"line_end":1020,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::string_empty_as_none::deserialize","value":"pub fn deserialize<'de, D, S>(D) -> Result<Option<S>, D::Error> where\nD: Deserializer, S: FromStr, S::Err: Display","parent":null,"children":[],"decl_id":null,"docs":" Deserialize an `Option<T>` from a string using `FromStr`\n","sig":null,"attributes":[{"value":"/ Deserialize an `Option<T>` from a string using `FromStr`","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":116187,"byte_end":116247,"line_start":1019,"line_end":1019,"column_start":5,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":528},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":117819,"byte_end":117828,"line_start":1071,"line_end":1071,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::string_empty_as_none::serialize","value":"pub fn serialize<T, S>(&Option<T>, S) -> Result<S::Ok, S::Error> where\nT: AsRef<str>, S: Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize a string from `Option<T>` using `AsRef<str>` or using the empty string if `None`.\n","sig":null,"attributes":[{"value":"/ Serialize a string from `Option<T>` using `AsRef<str>` or using the empty string if `None`.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":117712,"byte_end":117807,"line_start":1070,"line_end":1070,"column_start":5,"column_end":100}}]},{"kind":"Mod","id":{"krate":0,"index":531},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":120463,"byte_end":120484,"line_start":1164,"line_end":1164,"column_start":9,"column_end":30},"name":"hashmap_as_tuple_list","qualname":"::rust::hashmap_as_tuple_list","value":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":540},{"krate":0,"index":546},{"krate":0,"index":552}],"decl_id":null,"docs":" De/Serialize a [`HashMap`] into a list of tuples","sig":null,"attributes":[{"value":"/ De/Serialize a [`HashMap`] into a list of tuples","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":118119,"byte_end":118171,"line_start":1084,"line_end":1084,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":118172,"byte_end":118175,"line_start":1085,"line_end":1085,"column_start":1,"column_end":4}},{"value":"/ Some formats, like JSON, have limitations on the type of keys for maps.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":118176,"byte_end":118251,"line_start":1086,"line_end":1086,"column_start":1,"column_end":76}},{"value":"/ In case of JSON, keys are restricted to strings.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":118252,"byte_end":118304,"line_start":1087,"line_end":1087,"column_start":1,"column_end":53}},{"value":"/ Rust features more powerful keys, for example tuple, which can not be serialized to JSON.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":118305,"byte_end":118398,"line_start":1088,"line_end":1088,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":118399,"byte_end":118402,"line_start":1089,"line_end":1089,"column_start":1,"column_end":4}},{"value":"/ This helper serializes the [`HashMap`] into a list of tuples, which does not have the same type restrictions.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":118403,"byte_end":118516,"line_start":1090,"line_end":1090,"column_start":1,"column_end":114}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":118517,"byte_end":118520,"line_start":1091,"line_end":1091,"column_start":1,"column_end":4}},{"value":"/ If you need to de/serialize a [`BTreeMap`] then use [`btreemap_as_tuple_list`].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":118521,"byte_end":118604,"line_start":1092,"line_end":1092,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":118605,"byte_end":118608,"line_start":1093,"line_end":1093,"column_start":1,"column_end":4}},{"value":"/ ## Converting to `serde_as`","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":118609,"byte_end":118640,"line_start":1094,"line_end":1094,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":118641,"byte_end":118644,"line_start":1095,"line_end":1095,"column_start":1,"column_end":4}},{"value":"/ The same functionality can be more clearly expressed using the [`serde_as`] macro.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":118645,"byte_end":118731,"line_start":1096,"line_end":1096,"column_start":1,"column_end":87}},{"value":"/ The `_` is a placeholder which works for any type which implements [`Serialize`]/[`Deserialize`], such as the tuple and `u32` type.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":118732,"byte_end":118867,"line_start":1097,"line_end":1097,"column_start":1,"column_end":136}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":118868,"byte_end":118871,"line_start":1098,"line_end":1098,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":118872,"byte_end":118883,"line_start":1099,"line_end":1099,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":118884,"byte_end":118918,"line_start":1100,"line_end":1100,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":118919,"byte_end":118968,"line_start":1101,"line_end":1101,"column_start":1,"column_end":50}},{"value":"/ # use serde_with::serde_as;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":118969,"byte_end":119000,"line_start":1102,"line_end":1102,"column_start":1,"column_end":32}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119001,"byte_end":119037,"line_start":1103,"line_end":1103,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119038,"byte_end":119043,"line_start":1104,"line_end":1104,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119044,"byte_end":119059,"line_start":1105,"line_end":1105,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119060,"byte_end":119097,"line_start":1106,"line_end":1106,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119098,"byte_end":119112,"line_start":1107,"line_end":1107,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"Vec<(_, _)>\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119113,"byte_end":119152,"line_start":1108,"line_end":1108,"column_start":1,"column_end":40}},{"value":"/     s: HashMap<(String, u32), u32>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119153,"byte_end":119192,"line_start":1109,"line_end":1109,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119193,"byte_end":119198,"line_start":1110,"line_end":1110,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119199,"byte_end":119206,"line_start":1111,"line_end":1111,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119207,"byte_end":119214,"line_start":1112,"line_end":1112,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119215,"byte_end":119218,"line_start":1113,"line_end":1113,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119219,"byte_end":119233,"line_start":1114,"line_end":1114,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119234,"byte_end":119237,"line_start":1115,"line_end":1115,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119238,"byte_end":119245,"line_start":1116,"line_end":1116,"column_start":1,"column_end":8}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119246,"byte_end":119295,"line_start":1117,"line_end":1117,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119296,"byte_end":119323,"line_start":1118,"line_end":1118,"column_start":1,"column_end":28}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119324,"byte_end":119360,"line_start":1119,"line_end":1119,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119361,"byte_end":119366,"line_start":1120,"line_end":1120,"column_start":1,"column_end":6}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119367,"byte_end":119404,"line_start":1121,"line_end":1121,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119405,"byte_end":119419,"line_start":1122,"line_end":1122,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"serde_with::rust::hashmap_as_tuple_list\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119420,"byte_end":119486,"line_start":1123,"line_end":1123,"column_start":1,"column_end":67}},{"value":"/     s: HashMap<(String, u32), u32>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119487,"byte_end":119526,"line_start":1124,"line_end":1124,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119527,"byte_end":119532,"line_start":1125,"line_end":1125,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119533,"byte_end":119536,"line_start":1126,"line_end":1126,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_value(json!({","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119537,"byte_end":119582,"line_start":1127,"line_end":1127,"column_start":1,"column_end":46}},{"value":"/     \"s\": [","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119583,"byte_end":119597,"line_start":1128,"line_end":1128,"column_start":1,"column_end":15}},{"value":"/         [[\"Hello\", 123], 0],","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119598,"byte_end":119630,"line_start":1129,"line_end":1129,"column_start":1,"column_end":33}},{"value":"/         [[\"World\", 456], 1]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119631,"byte_end":119662,"line_start":1130,"line_end":1130,"column_start":1,"column_end":32}},{"value":"/     ]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119663,"byte_end":119672,"line_start":1131,"line_end":1131,"column_start":1,"column_end":10}},{"value":"/ })).unwrap();","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119673,"byte_end":119690,"line_start":1132,"line_end":1132,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119691,"byte_end":119694,"line_start":1133,"line_end":1133,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(2, v.s.len());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119695,"byte_end":119724,"line_start":1134,"line_end":1134,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(1, v.s[&(\"World\".to_string(), 456)]);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119725,"byte_end":119777,"line_start":1135,"line_end":1135,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119778,"byte_end":119785,"line_start":1136,"line_end":1136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119786,"byte_end":119789,"line_start":1137,"line_end":1137,"column_start":1,"column_end":4}},{"value":"/ The helper is generic over the hasher type of the [`HashMap`] and works with different variants, such as `FnvHashMap`.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119790,"byte_end":119912,"line_start":1138,"line_end":1138,"column_start":1,"column_end":123}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119913,"byte_end":119916,"line_start":1139,"line_end":1139,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119917,"byte_end":119924,"line_start":1140,"line_end":1140,"column_start":1,"column_end":8}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119925,"byte_end":119974,"line_start":1141,"line_end":1141,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":119975,"byte_end":120002,"line_start":1142,"line_end":1142,"column_start":1,"column_end":28}},{"value":"/ #","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":120003,"byte_end":120008,"line_start":1143,"line_end":1143,"column_start":1,"column_end":6}},{"value":"/ use fnv::FnvHashMap;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":120009,"byte_end":120033,"line_start":1144,"line_end":1144,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":120034,"byte_end":120037,"line_start":1145,"line_end":1145,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":120038,"byte_end":120075,"line_start":1146,"line_end":1146,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":120076,"byte_end":120090,"line_start":1147,"line_end":1147,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"serde_with::rust::hashmap_as_tuple_list\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":120091,"byte_end":120157,"line_start":1148,"line_end":1148,"column_start":1,"column_end":67}},{"value":"/     s: FnvHashMap<u32, bool>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":120158,"byte_end":120191,"line_start":1149,"line_end":1149,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":120192,"byte_end":120197,"line_start":1150,"line_end":1150,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":120198,"byte_end":120201,"line_start":1151,"line_end":1151,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_value(json!({","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":120202,"byte_end":120247,"line_start":1152,"line_end":1152,"column_start":1,"column_end":46}},{"value":"/     \"s\": [","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":120248,"byte_end":120262,"line_start":1153,"line_end":1153,"column_start":1,"column_end":15}},{"value":"/         [0, false],","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":120263,"byte_end":120286,"line_start":1154,"line_end":1154,"column_start":1,"column_end":24}},{"value":"/         [1, true]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":120287,"byte_end":120308,"line_start":1155,"line_end":1155,"column_start":1,"column_end":22}},{"value":"/     ]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":120309,"byte_end":120318,"line_start":1156,"line_end":1156,"column_start":1,"column_end":10}},{"value":"/ })).unwrap();","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":120319,"byte_end":120336,"line_start":1157,"line_end":1157,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":120337,"byte_end":120340,"line_start":1158,"line_end":1158,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(2, v.s.len());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":120341,"byte_end":120370,"line_start":1159,"line_end":1159,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(true, v.s[&1]);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":120371,"byte_end":120401,"line_start":1160,"line_end":1160,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":120402,"byte_end":120409,"line_start":1161,"line_end":1161,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":120410,"byte_end":120413,"line_start":1162,"line_end":1162,"column_start":1,"column_end":4}},{"value":"/ [`serde_as`]: crate::guide::serde_as","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":120414,"byte_end":120454,"line_start":1163,"line_end":1163,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":535},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":120653,"byte_end":120662,"line_start":1168,"line_end":1168,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::hashmap_as_tuple_list::serialize","value":"pub fn serialize<K, V, S, BH>(&HashMap<K, V, BH>, S)\n-> Result<S::Ok, S::Error> where S: Serializer, K: Eq + Hash + Serialize,\nV: Serialize, BH: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Serialize the [`HashMap`] as a list of tuples\n","sig":null,"attributes":[{"value":"/ Serialize the [`HashMap`] as a list of tuples","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":120592,"byte_end":120641,"line_start":1167,"line_end":1167,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":540},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":121107,"byte_end":121118,"line_start":1183,"line_end":1183,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::hashmap_as_tuple_list::deserialize","value":"pub fn deserialize<'de, K, V, BH, D>(D) -> Result<HashMap<K, V, BH>, D::Error>\nwhere D: Deserializer, K: Eq + Hash + Deserialize, V: Deserialize,\nBH: BuildHasher + Default","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a [`HashMap`] from a list of tuples\n","sig":null,"attributes":[{"value":"/ Deserialize a [`HashMap`] from a list of tuples","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":121044,"byte_end":121095,"line_start":1182,"line_end":1182,"column_start":5,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":561},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":124049,"byte_end":124071,"line_start":1277,"line_end":1277,"column_start":9,"column_end":31},"name":"btreemap_as_tuple_list","qualname":"::rust::btreemap_as_tuple_list","value":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":567},{"krate":0,"index":572},{"krate":0,"index":577}],"decl_id":null,"docs":" De/Serialize a [`BTreeMap`] into a list of tuples","sig":null,"attributes":[{"value":"/ De/Serialize a [`BTreeMap`] into a list of tuples","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":122324,"byte_end":122377,"line_start":1222,"line_end":1222,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":122378,"byte_end":122381,"line_start":1223,"line_end":1223,"column_start":1,"column_end":4}},{"value":"/ Some formats, like JSON, have limitations on the type of keys for maps.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":122382,"byte_end":122457,"line_start":1224,"line_end":1224,"column_start":1,"column_end":76}},{"value":"/ In case of JSON, keys are restricted to strings.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":122458,"byte_end":122510,"line_start":1225,"line_end":1225,"column_start":1,"column_end":53}},{"value":"/ Rust features more powerful keys, for example tuple, which can not be serialized to JSON.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":122511,"byte_end":122604,"line_start":1226,"line_end":1226,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":122605,"byte_end":122608,"line_start":1227,"line_end":1227,"column_start":1,"column_end":4}},{"value":"/ This helper serializes the [`BTreeMap`] into a list of tuples, which does not have the same type restrictions.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":122609,"byte_end":122723,"line_start":1228,"line_end":1228,"column_start":1,"column_end":115}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":122724,"byte_end":122727,"line_start":1229,"line_end":1229,"column_start":1,"column_end":4}},{"value":"/ If you need to de/serialize a [`HashMap`] then use [`hashmap_as_tuple_list`].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":122728,"byte_end":122809,"line_start":1230,"line_end":1230,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":122810,"byte_end":122813,"line_start":1231,"line_end":1231,"column_start":1,"column_end":4}},{"value":"/ ## Converting to `serde_as`","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":122814,"byte_end":122845,"line_start":1232,"line_end":1232,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":122846,"byte_end":122849,"line_start":1233,"line_end":1233,"column_start":1,"column_end":4}},{"value":"/ The same functionality can be more clearly expressed using the [`serde_as`] macro.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":122850,"byte_end":122936,"line_start":1234,"line_end":1234,"column_start":1,"column_end":87}},{"value":"/ The `_` is a placeholder which works for any type which implements [`Serialize`]/[`Deserialize`], such as the tuple and `u32` type.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":122937,"byte_end":123072,"line_start":1235,"line_end":1235,"column_start":1,"column_end":136}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123073,"byte_end":123076,"line_start":1236,"line_end":1236,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123077,"byte_end":123088,"line_start":1237,"line_end":1237,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123089,"byte_end":123123,"line_start":1238,"line_end":1238,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123124,"byte_end":123173,"line_start":1239,"line_end":1239,"column_start":1,"column_end":50}},{"value":"/ # use serde_with::serde_as;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123174,"byte_end":123205,"line_start":1240,"line_end":1240,"column_start":1,"column_end":32}},{"value":"/ # use std::collections::BTreeMap;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123206,"byte_end":123243,"line_start":1241,"line_end":1241,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123244,"byte_end":123249,"line_start":1242,"line_end":1242,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123250,"byte_end":123265,"line_start":1243,"line_end":1243,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123266,"byte_end":123303,"line_start":1244,"line_end":1244,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123304,"byte_end":123318,"line_start":1245,"line_end":1245,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"Vec<(_, _)>\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123319,"byte_end":123358,"line_start":1246,"line_end":1246,"column_start":1,"column_end":40}},{"value":"/     s: BTreeMap<(String, u32), u32>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123359,"byte_end":123399,"line_start":1247,"line_end":1247,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123400,"byte_end":123405,"line_start":1248,"line_end":1248,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123406,"byte_end":123413,"line_start":1249,"line_end":1249,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123414,"byte_end":123421,"line_start":1250,"line_end":1250,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123422,"byte_end":123425,"line_start":1251,"line_end":1251,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123426,"byte_end":123440,"line_start":1252,"line_end":1252,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123441,"byte_end":123444,"line_start":1253,"line_end":1253,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123445,"byte_end":123452,"line_start":1254,"line_end":1254,"column_start":1,"column_end":8}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123453,"byte_end":123502,"line_start":1255,"line_end":1255,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123503,"byte_end":123530,"line_start":1256,"line_end":1256,"column_start":1,"column_end":28}},{"value":"/ # use std::collections::BTreeMap;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123531,"byte_end":123568,"line_start":1257,"line_end":1257,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123569,"byte_end":123574,"line_start":1258,"line_end":1258,"column_start":1,"column_end":6}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123575,"byte_end":123612,"line_start":1259,"line_end":1259,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123613,"byte_end":123627,"line_start":1260,"line_end":1260,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"serde_with::rust::btreemap_as_tuple_list\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123628,"byte_end":123695,"line_start":1261,"line_end":1261,"column_start":1,"column_end":68}},{"value":"/     s: BTreeMap<(String, u32), u32>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123696,"byte_end":123736,"line_start":1262,"line_end":1262,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123737,"byte_end":123742,"line_start":1263,"line_end":1263,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123743,"byte_end":123746,"line_start":1264,"line_end":1264,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_value(json!({","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123747,"byte_end":123792,"line_start":1265,"line_end":1265,"column_start":1,"column_end":46}},{"value":"/     \"s\": [","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123793,"byte_end":123807,"line_start":1266,"line_end":1266,"column_start":1,"column_end":15}},{"value":"/         [[\"Hello\", 123], 0],","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123808,"byte_end":123840,"line_start":1267,"line_end":1267,"column_start":1,"column_end":33}},{"value":"/         [[\"World\", 456], 1]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123841,"byte_end":123872,"line_start":1268,"line_end":1268,"column_start":1,"column_end":32}},{"value":"/     ]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123873,"byte_end":123882,"line_start":1269,"line_end":1269,"column_start":1,"column_end":10}},{"value":"/ })).unwrap();","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123883,"byte_end":123900,"line_start":1270,"line_end":1270,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123901,"byte_end":123904,"line_start":1271,"line_end":1271,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(2, v.s.len());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123905,"byte_end":123934,"line_start":1272,"line_end":1272,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(1, v.s[&(\"World\".to_string(), 456)]);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123935,"byte_end":123987,"line_start":1273,"line_end":1273,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123988,"byte_end":123995,"line_start":1274,"line_end":1274,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":123996,"byte_end":123999,"line_start":1275,"line_end":1275,"column_start":1,"column_end":4}},{"value":"/ [`serde_as`]: crate::guide::serde_as","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":124000,"byte_end":124040,"line_start":1276,"line_end":1276,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":124159,"byte_end":124168,"line_start":1281,"line_end":1281,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::btreemap_as_tuple_list::serialize","value":"pub fn serialize<K, V, S>(&BTreeMap<K, V>, S) -> Result<S::Ok, S::Error> where\nS: Serializer, K: Eq + Hash + Serialize, V: Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serialize the [`BTreeMap`] as a list of tuples\n","sig":null,"attributes":[{"value":"/ Serialize the [`BTreeMap`] as a list of tuples","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":124097,"byte_end":124147,"line_start":1280,"line_end":1280,"column_start":5,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":567},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":124582,"byte_end":124593,"line_start":1295,"line_end":1295,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::btreemap_as_tuple_list::deserialize","value":"pub fn deserialize<'de, K, V, D>(D) -> Result<BTreeMap<K, V>, D::Error> where\nD: Deserializer, K: Deserialize + Ord, V: Deserialize","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a [`BTreeMap`] from a list of tuples\n","sig":null,"attributes":[{"value":"/ Deserialize a [`BTreeMap`] from a list of tuples","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":124518,"byte_end":124570,"line_start":1294,"line_end":1294,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":585},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":128885,"byte_end":128902,"line_start":1427,"line_end":1427,"column_start":9,"column_end":26},"name":"tuple_list_as_map","qualname":"::rust::tuple_list_as_map","value":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","parent":null,"children":[{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":595},{"krate":0,"index":601},{"krate":0,"index":607},{"krate":0,"index":616},{"krate":0,"index":624}],"decl_id":null,"docs":" This serializes a list of tuples into a map and back","sig":null,"attributes":[{"value":"/ This serializes a list of tuples into a map and back","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":125620,"byte_end":125676,"line_start":1331,"line_end":1331,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":125677,"byte_end":125680,"line_start":1332,"line_end":1332,"column_start":1,"column_end":4}},{"value":"/ Normally, you want to use a [`HashMap`] or a [`BTreeMap`] when deserializing a map.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":125681,"byte_end":125768,"line_start":1333,"line_end":1333,"column_start":1,"column_end":88}},{"value":"/ However, sometimes this is not possible due to type contains, e.g., if the type implements neither [`Hash`] nor [`Ord`].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":125769,"byte_end":125893,"line_start":1334,"line_end":1334,"column_start":1,"column_end":125}},{"value":"/ Another use case is deserializing a map with duplicate keys.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":125894,"byte_end":125958,"line_start":1335,"line_end":1335,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":125959,"byte_end":125962,"line_start":1336,"line_end":1336,"column_start":1,"column_end":4}},{"value":"/ The implementation is generic using the [`FromIterator`] and [`IntoIterator`] traits.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":125963,"byte_end":126052,"line_start":1337,"line_end":1337,"column_start":1,"column_end":90}},{"value":"/ Therefore, all of [`Vec`], [`VecDeque`](std::collections::VecDeque), and [`LinkedList`](std::collections::LinkedList) and anything which implements those are supported.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":126053,"byte_end":126225,"line_start":1338,"line_end":1338,"column_start":1,"column_end":173}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":126226,"byte_end":126229,"line_start":1339,"line_end":1339,"column_start":1,"column_end":4}},{"value":"/ ## Converting to `serde_as`","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":126230,"byte_end":126261,"line_start":1340,"line_end":1340,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":126262,"byte_end":126265,"line_start":1341,"line_end":1341,"column_start":1,"column_end":4}},{"value":"/ The same functionality can be more clearly expressed using the [`serde_as`] macro.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":126266,"byte_end":126352,"line_start":1342,"line_end":1342,"column_start":1,"column_end":87}},{"value":"/ The `_` is a placeholder which works for any type which implements [`Serialize`]/[`Deserialize`], such as the tuple and `u32` type.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":126353,"byte_end":126488,"line_start":1343,"line_end":1343,"column_start":1,"column_end":136}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":126489,"byte_end":126492,"line_start":1344,"line_end":1344,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":126493,"byte_end":126504,"line_start":1345,"line_end":1345,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":126505,"byte_end":126539,"line_start":1346,"line_end":1346,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":126540,"byte_end":126589,"line_start":1347,"line_end":1347,"column_start":1,"column_end":50}},{"value":"/ # use serde_with::serde_as;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":126590,"byte_end":126621,"line_start":1348,"line_end":1348,"column_start":1,"column_end":32}},{"value":"/ # use std::collections::BTreeMap;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":126622,"byte_end":126659,"line_start":1349,"line_end":1349,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":126660,"byte_end":126665,"line_start":1350,"line_end":1350,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":126666,"byte_end":126681,"line_start":1351,"line_end":1351,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":126682,"byte_end":126719,"line_start":1352,"line_end":1352,"column_start":1,"column_end":38}},{"value":"/ struct S {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":126720,"byte_end":126734,"line_start":1353,"line_end":1353,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"BTreeMap<_, _>\")] // HashMap will also work","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":126735,"byte_end":126803,"line_start":1354,"line_end":1354,"column_start":1,"column_end":69}},{"value":"/     s: BTreeMap<(String, u32), u32>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":126804,"byte_end":126844,"line_start":1355,"line_end":1355,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":126845,"byte_end":126850,"line_start":1356,"line_end":1356,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":126851,"byte_end":126858,"line_start":1357,"line_end":1357,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":126859,"byte_end":126866,"line_start":1358,"line_end":1358,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":126867,"byte_end":126870,"line_start":1359,"line_end":1359,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":126871,"byte_end":126885,"line_start":1360,"line_end":1360,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":126886,"byte_end":126889,"line_start":1361,"line_end":1361,"column_start":1,"column_end":4}},{"value":"/ `Wrapper` does not implement [`Hash`] nor [`Ord`], thus prohibiting the use [`HashMap`] or [`BTreeMap`].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":126890,"byte_end":126998,"line_start":1362,"line_end":1362,"column_start":1,"column_end":109}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":126999,"byte_end":127002,"line_start":1363,"line_end":1363,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":127003,"byte_end":127010,"line_start":1364,"line_end":1364,"column_start":1,"column_end":8}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":127011,"byte_end":127060,"line_start":1365,"line_end":1365,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":127061,"byte_end":127066,"line_start":1366,"line_end":1366,"column_start":1,"column_end":6}},{"value":"/ #[derive(Debug, Deserialize, Serialize, Default)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":127067,"byte_end":127120,"line_start":1367,"line_end":1367,"column_start":1,"column_end":54}},{"value":"/ struct S {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":127121,"byte_end":127135,"line_start":1368,"line_end":1368,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"serde_with::rust::tuple_list_as_map\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":127136,"byte_end":127198,"line_start":1369,"line_end":1369,"column_start":1,"column_end":63}},{"value":"/     s: Vec<(Wrapper<i32>, Wrapper<String>)>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":127199,"byte_end":127247,"line_start":1370,"line_end":1370,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":127248,"byte_end":127253,"line_start":1371,"line_end":1371,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":127254,"byte_end":127257,"line_start":1372,"line_end":1372,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone, Debug, Serialize, Deserialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":127258,"byte_end":127309,"line_start":1373,"line_end":1373,"column_start":1,"column_end":52}},{"value":"/ #[serde(transparent)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":127310,"byte_end":127335,"line_start":1374,"line_end":1374,"column_start":1,"column_end":26}},{"value":"/ struct Wrapper<T>(T);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":127336,"byte_end":127361,"line_start":1375,"line_end":1375,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":127362,"byte_end":127365,"line_start":1376,"line_end":1376,"column_start":1,"column_end":4}},{"value":"/ let from = r#\"{","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":127366,"byte_end":127385,"line_start":1377,"line_end":1377,"column_start":1,"column_end":20}},{"value":"/   \"s\": {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":127386,"byte_end":127398,"line_start":1378,"line_end":1378,"column_start":1,"column_end":13}},{"value":"/     \"1\": \"Hi\",","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":127399,"byte_end":127417,"line_start":1379,"line_end":1379,"column_start":1,"column_end":19}},{"value":"/     \"2\": \"Cake\",","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":127418,"byte_end":127438,"line_start":1380,"line_end":1380,"column_start":1,"column_end":21}},{"value":"/     \"99\": \"Lie\"","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":127439,"byte_end":127458,"line_start":1381,"line_end":1381,"column_start":1,"column_end":20}},{"value":"/   }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":127459,"byte_end":127466,"line_start":1382,"line_end":1382,"column_start":1,"column_end":8}},{"value":"/ }\"#;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":127467,"byte_end":127475,"line_start":1383,"line_end":1383,"column_start":1,"column_end":9}},{"value":"/ let mut expected = S::default();","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":127476,"byte_end":127512,"line_start":1384,"line_end":1384,"column_start":1,"column_end":37}},{"value":"/ expected.s.push((Wrapper(1), Wrapper(\"Hi\".into())));","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":127513,"byte_end":127569,"line_start":1385,"line_end":1385,"column_start":1,"column_end":57}},{"value":"/ expected.s.push((Wrapper(2), Wrapper(\"Cake\".into())));","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":127570,"byte_end":127628,"line_start":1386,"line_end":1386,"column_start":1,"column_end":59}},{"value":"/ expected.s.push((Wrapper(99), Wrapper(\"Lie\".into())));","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":127629,"byte_end":127687,"line_start":1387,"line_end":1387,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":127688,"byte_end":127691,"line_start":1388,"line_end":1388,"column_start":1,"column_end":4}},{"value":"/ let res: S = serde_json::from_str(from).unwrap();","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":127692,"byte_end":127745,"line_start":1389,"line_end":1389,"column_start":1,"column_end":54}},{"value":"/ for ((exp_k, exp_v), (res_k, res_v)) in expected.s.iter().zip(&res.s) {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":127746,"byte_end":127821,"line_start":1390,"line_end":1390,"column_start":1,"column_end":76}},{"value":"/     assert_eq!(exp_k.0, res_k.0);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":127822,"byte_end":127859,"line_start":1391,"line_end":1391,"column_start":1,"column_end":38}},{"value":"/     assert_eq!(exp_v.0, res_v.0);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":127860,"byte_end":127897,"line_start":1392,"line_end":1392,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":127898,"byte_end":127903,"line_start":1393,"line_end":1393,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(from, serde_json::to_string_pretty(&expected).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":127904,"byte_end":127975,"line_start":1394,"line_end":1394,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":127976,"byte_end":127983,"line_start":1395,"line_end":1395,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":127984,"byte_end":127987,"line_start":1396,"line_end":1396,"column_start":1,"column_end":4}},{"value":"/ In this example, the serialized format contains duplicate keys, which is not supported with [`HashMap`] or [`BTreeMap`].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":127988,"byte_end":128112,"line_start":1397,"line_end":1397,"column_start":1,"column_end":125}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":128113,"byte_end":128116,"line_start":1398,"line_end":1398,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":128117,"byte_end":128124,"line_start":1399,"line_end":1399,"column_start":1,"column_end":8}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":128125,"byte_end":128174,"line_start":1400,"line_end":1400,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":128175,"byte_end":128180,"line_start":1401,"line_end":1401,"column_start":1,"column_end":6}},{"value":"/ #[derive(Debug, Deserialize, Serialize, PartialEq, Default)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":128181,"byte_end":128245,"line_start":1402,"line_end":1402,"column_start":1,"column_end":65}},{"value":"/ struct S {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":128246,"byte_end":128260,"line_start":1403,"line_end":1403,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"serde_with::rust::tuple_list_as_map\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":128261,"byte_end":128323,"line_start":1404,"line_end":1404,"column_start":1,"column_end":63}},{"value":"/     s: Vec<(i32, String)>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":128324,"byte_end":128354,"line_start":1405,"line_end":1405,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":128355,"byte_end":128360,"line_start":1406,"line_end":1406,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":128361,"byte_end":128364,"line_start":1407,"line_end":1407,"column_start":1,"column_end":4}},{"value":"/ let from = r#\"{","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":128365,"byte_end":128384,"line_start":1408,"line_end":1408,"column_start":1,"column_end":20}},{"value":"/   \"s\": {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":128385,"byte_end":128397,"line_start":1409,"line_end":1409,"column_start":1,"column_end":13}},{"value":"/     \"1\": \"Hi\",","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":128398,"byte_end":128416,"line_start":1410,"line_end":1410,"column_start":1,"column_end":19}},{"value":"/     \"1\": \"Cake\",","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":128417,"byte_end":128437,"line_start":1411,"line_end":1411,"column_start":1,"column_end":21}},{"value":"/     \"1\": \"Lie\"","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":128438,"byte_end":128456,"line_start":1412,"line_end":1412,"column_start":1,"column_end":19}},{"value":"/   }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":128457,"byte_end":128464,"line_start":1413,"line_end":1413,"column_start":1,"column_end":8}},{"value":"/ }\"#;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":128465,"byte_end":128473,"line_start":1414,"line_end":1414,"column_start":1,"column_end":9}},{"value":"/ let mut expected = S::default();","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":128474,"byte_end":128510,"line_start":1415,"line_end":1415,"column_start":1,"column_end":37}},{"value":"/ expected.s.push((1, \"Hi\".into()));","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":128511,"byte_end":128549,"line_start":1416,"line_end":1416,"column_start":1,"column_end":39}},{"value":"/ expected.s.push((1, \"Cake\".into()));","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":128550,"byte_end":128590,"line_start":1417,"line_end":1417,"column_start":1,"column_end":41}},{"value":"/ expected.s.push((1, \"Lie\".into()));","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":128591,"byte_end":128630,"line_start":1418,"line_end":1418,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":128631,"byte_end":128634,"line_start":1419,"line_end":1419,"column_start":1,"column_end":4}},{"value":"/ let res: S = serde_json::from_str(from).unwrap();","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":128635,"byte_end":128688,"line_start":1420,"line_end":1420,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(3, res.s.len());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":128689,"byte_end":128720,"line_start":1421,"line_end":1421,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(expected, res);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":128721,"byte_end":128751,"line_start":1422,"line_end":1422,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(from, serde_json::to_string_pretty(&expected).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":128752,"byte_end":128823,"line_start":1423,"line_end":1423,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":128824,"byte_end":128831,"line_start":1424,"line_end":1424,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":128832,"byte_end":128835,"line_start":1425,"line_end":1425,"column_start":1,"column_end":4}},{"value":"/ [`serde_as`]: crate::guide::serde_as","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":128836,"byte_end":128876,"line_start":1426,"line_end":1426,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":589},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":129071,"byte_end":129080,"line_start":1431,"line_end":1431,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::tuple_list_as_map::serialize","value":"pub fn serialize<'a, I, K, V, S>(I, S) -> Result<S::Ok, S::Error> where\nI: IntoIterator<Item = &'a (K, V)>, I::IntoIter: ExactSizeIterator,\nK: Serialize + 'a, V: Serialize + 'a, S: Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize any iteration of tuples into a map.\n","sig":null,"attributes":[{"value":"/ Serialize any iteration of tuples into a map.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":129010,"byte_end":129059,"line_start":1430,"line_end":1430,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":595},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":129612,"byte_end":129623,"line_start":1448,"line_end":1448,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::tuple_list_as_map::deserialize","value":"pub fn deserialize<'de, I, K, V, D>(D) -> Result<I, D::Error> where\nI: FromIterator<(K, V)>, K: Deserialize, V: Deserialize, D: Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a map into an iterator of tuples.\n","sig":null,"attributes":[{"value":"/ Deserialize a map into an iterator of tuples.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":129551,"byte_end":129600,"line_start":1447,"line_end":1447,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":632},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":133040,"byte_end":133055,"line_start":1576,"line_end":1576,"column_start":9,"column_end":24},"name":"bytes_or_string","qualname":"::rust::bytes_or_string","value":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":637},{"krate":0,"index":639}],"decl_id":null,"docs":" Deserialize from bytes or string","sig":null,"attributes":[{"value":"/ Deserialize from bytes or string","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":131263,"byte_end":131299,"line_start":1509,"line_end":1509,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":131300,"byte_end":131303,"line_start":1510,"line_end":1510,"column_start":1,"column_end":4}},{"value":"/ Any Rust [`String`] can be converted into bytes, i.e., `Vec<u8>`.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":131304,"byte_end":131373,"line_start":1511,"line_end":1511,"column_start":1,"column_end":70}},{"value":"/ Accepting both as formats while deserializing can be helpful while interacting with language","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":131374,"byte_end":131470,"line_start":1512,"line_end":1512,"column_start":1,"column_end":97}},{"value":"/ which have a looser definition of string than Rust.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":131471,"byte_end":131526,"line_start":1513,"line_end":1513,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":131527,"byte_end":131530,"line_start":1514,"line_end":1514,"column_start":1,"column_end":4}},{"value":"/ ## Converting to `serde_as`","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":131531,"byte_end":131562,"line_start":1515,"line_end":1515,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":131563,"byte_end":131566,"line_start":1516,"line_end":1516,"column_start":1,"column_end":4}},{"value":"/ The same functionality can be more clearly expressed via [`BytesOrString`] and using the [`serde_as`] macro.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":131567,"byte_end":131679,"line_start":1517,"line_end":1517,"column_start":1,"column_end":113}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":131680,"byte_end":131683,"line_start":1518,"line_end":1518,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":131684,"byte_end":131695,"line_start":1519,"line_end":1519,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":131696,"byte_end":131730,"line_start":1520,"line_end":1520,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":131731,"byte_end":131767,"line_start":1521,"line_end":1521,"column_start":1,"column_end":37}},{"value":"/ # use serde_with::{serde_as, BytesOrString};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":131768,"byte_end":131816,"line_start":1522,"line_end":1522,"column_start":1,"column_end":49}},{"value":"/ #","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":131817,"byte_end":131822,"line_start":1523,"line_end":1523,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":131823,"byte_end":131838,"line_start":1524,"line_end":1524,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":131839,"byte_end":131865,"line_start":1525,"line_end":1525,"column_start":1,"column_end":27}},{"value":"/ struct A {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":131866,"byte_end":131880,"line_start":1526,"line_end":1526,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"BytesOrString\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":131881,"byte_end":131922,"line_start":1527,"line_end":1527,"column_start":1,"column_end":42}},{"value":"/     bos: Vec<u8>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":131923,"byte_end":131944,"line_start":1528,"line_end":1528,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":131945,"byte_end":131950,"line_start":1529,"line_end":1529,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":131951,"byte_end":131958,"line_start":1530,"line_end":1530,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":131959,"byte_end":131966,"line_start":1531,"line_end":1531,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":131967,"byte_end":131970,"line_start":1532,"line_end":1532,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":131971,"byte_end":131984,"line_start":1533,"line_end":1533,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":131985,"byte_end":131996,"line_start":1534,"line_end":1534,"column_start":1,"column_end":12}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":131997,"byte_end":132046,"line_start":1535,"line_end":1535,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132047,"byte_end":132052,"line_start":1536,"line_end":1536,"column_start":1,"column_end":6}},{"value":"/ #[derive(Debug, Deserialize, Serialize, PartialEq, Default)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132053,"byte_end":132117,"line_start":1537,"line_end":1537,"column_start":1,"column_end":65}},{"value":"/ struct S {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132118,"byte_end":132132,"line_start":1538,"line_end":1538,"column_start":1,"column_end":15}},{"value":"/     #[serde(deserialize_with = \"serde_with::rust::bytes_or_string::deserialize\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132133,"byte_end":132218,"line_start":1539,"line_end":1539,"column_start":1,"column_end":86}},{"value":"/     bos: Vec<u8>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132219,"byte_end":132240,"line_start":1540,"line_end":1540,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132241,"byte_end":132246,"line_start":1541,"line_end":1541,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132247,"byte_end":132250,"line_start":1542,"line_end":1542,"column_start":1,"column_end":4}},{"value":"/ // Here we deserialize from a byte array ...","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132251,"byte_end":132299,"line_start":1543,"line_end":1543,"column_start":1,"column_end":49}},{"value":"/ let from = r#\"{","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132300,"byte_end":132319,"line_start":1544,"line_end":1544,"column_start":1,"column_end":20}},{"value":"/   \"bos\": [","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132320,"byte_end":132334,"line_start":1545,"line_end":1545,"column_start":1,"column_end":15}},{"value":"/     0,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132335,"byte_end":132345,"line_start":1546,"line_end":1546,"column_start":1,"column_end":11}},{"value":"/     1,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132346,"byte_end":132356,"line_start":1547,"line_end":1547,"column_start":1,"column_end":11}},{"value":"/     2,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132357,"byte_end":132367,"line_start":1548,"line_end":1548,"column_start":1,"column_end":11}},{"value":"/     3","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132368,"byte_end":132377,"line_start":1549,"line_end":1549,"column_start":1,"column_end":10}},{"value":"/   ]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132378,"byte_end":132385,"line_start":1550,"line_end":1550,"column_start":1,"column_end":8}},{"value":"/ }\"#;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132386,"byte_end":132394,"line_start":1551,"line_end":1551,"column_start":1,"column_end":9}},{"value":"/ let expected = S {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132395,"byte_end":132417,"line_start":1552,"line_end":1552,"column_start":1,"column_end":23}},{"value":"/     bos: vec![0, 1, 2, 3],","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132418,"byte_end":132448,"line_start":1553,"line_end":1553,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132449,"byte_end":132455,"line_start":1554,"line_end":1554,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132456,"byte_end":132459,"line_start":1555,"line_end":1555,"column_start":1,"column_end":4}},{"value":"/ let res: S = serde_json::from_str(from).unwrap();","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132460,"byte_end":132513,"line_start":1556,"line_end":1556,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(expected, res);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132514,"byte_end":132544,"line_start":1557,"line_end":1557,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132545,"byte_end":132548,"line_start":1558,"line_end":1558,"column_start":1,"column_end":4}},{"value":"/ // and serialization works too.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132549,"byte_end":132584,"line_start":1559,"line_end":1559,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(from, serde_json::to_string_pretty(&expected).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132585,"byte_end":132656,"line_start":1560,"line_end":1560,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132657,"byte_end":132660,"line_start":1561,"line_end":1561,"column_start":1,"column_end":4}},{"value":"/ // But we also support deserializing from a String","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132661,"byte_end":132715,"line_start":1562,"line_end":1562,"column_start":1,"column_end":55}},{"value":"/ let from = r#\"{","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132716,"byte_end":132735,"line_start":1563,"line_end":1563,"column_start":1,"column_end":20}},{"value":"/   \"bos\": \"✨Works!\"","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132736,"byte_end":132760,"line_start":1564,"line_end":1564,"column_start":1,"column_end":23}},{"value":"/ }\"#;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132761,"byte_end":132769,"line_start":1565,"line_end":1565,"column_start":1,"column_end":9}},{"value":"/ let expected = S {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132770,"byte_end":132792,"line_start":1566,"line_end":1566,"column_start":1,"column_end":23}},{"value":"/     bos: \"✨Works!\".as_bytes().to_vec(),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132793,"byte_end":132838,"line_start":1567,"line_end":1567,"column_start":1,"column_end":44}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132839,"byte_end":132845,"line_start":1568,"line_end":1568,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132846,"byte_end":132849,"line_start":1569,"line_end":1569,"column_start":1,"column_end":4}},{"value":"/ let res: S = serde_json::from_str(from).unwrap();","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132850,"byte_end":132903,"line_start":1570,"line_end":1570,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(expected, res);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132904,"byte_end":132934,"line_start":1571,"line_end":1571,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132935,"byte_end":132942,"line_start":1572,"line_end":1572,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132943,"byte_end":132946,"line_start":1573,"line_end":1573,"column_start":1,"column_end":4}},{"value":"/ [`BytesOrString`]: crate::BytesOrString","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132947,"byte_end":132990,"line_start":1574,"line_end":1574,"column_start":1,"column_end":44}},{"value":"/ [`serde_as`]: crate::guide::serde_as","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":132991,"byte_end":133031,"line_start":1575,"line_end":1575,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":634},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":133152,"byte_end":133163,"line_start":1580,"line_end":1580,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::bytes_or_string::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<Vec<u8>, D::Error> where\nD: Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a [`Vec`]`<u8>` from either bytes or string\n","sig":null,"attributes":[{"value":"/ Deserialize a [`Vec`]`<u8>` from either bytes or string","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":133081,"byte_end":133140,"line_start":1579,"line_end":1579,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":653},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":136644,"byte_end":136660,"line_start":1698,"line_end":1698,"column_start":9,"column_end":25},"name":"default_on_error","qualname":"::rust::default_on_error","value":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","parent":null,"children":[{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":659}],"decl_id":null,"docs":" Deserialize value and return [`Default`] on error","sig":null,"attributes":[{"value":"/ Deserialize value and return [`Default`] on error","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":134396,"byte_end":134449,"line_start":1625,"line_end":1625,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":134450,"byte_end":134453,"line_start":1626,"line_end":1626,"column_start":1,"column_end":4}},{"value":"/ The main use case is ignoring error while deserializing.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":134454,"byte_end":134514,"line_start":1627,"line_end":1627,"column_start":1,"column_end":61}},{"value":"/ Instead of erroring, it simply deserializes the [`Default`] variant of the type.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":134515,"byte_end":134599,"line_start":1628,"line_end":1628,"column_start":1,"column_end":85}},{"value":"/ It is not possible to find the error location, i.e., which field had a deserialization error, with this method.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":134600,"byte_end":134715,"line_start":1629,"line_end":1629,"column_start":1,"column_end":116}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":134716,"byte_end":134719,"line_start":1630,"line_end":1630,"column_start":1,"column_end":4}},{"value":"/ ## Converting to `serde_as`","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":134720,"byte_end":134751,"line_start":1631,"line_end":1631,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":134752,"byte_end":134755,"line_start":1632,"line_end":1632,"column_start":1,"column_end":4}},{"value":"/ The same functionality can be more clearly expressed via [`DefaultOnError`] and using the [`serde_as`] macro.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":134756,"byte_end":134869,"line_start":1633,"line_end":1633,"column_start":1,"column_end":114}},{"value":"/ The `_` is a placeholder which works for any type which implements [`Serialize`]/[`Deserialize`], such as the tuple and `u32` type.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":134870,"byte_end":135005,"line_start":1634,"line_end":1634,"column_start":1,"column_end":136}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135006,"byte_end":135009,"line_start":1635,"line_end":1635,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135010,"byte_end":135021,"line_start":1636,"line_end":1636,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135022,"byte_end":135056,"line_start":1637,"line_end":1637,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135057,"byte_end":135093,"line_start":1638,"line_end":1638,"column_start":1,"column_end":37}},{"value":"/ # use serde_with::{serde_as, DefaultOnError};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135094,"byte_end":135143,"line_start":1639,"line_end":1639,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135144,"byte_end":135149,"line_start":1640,"line_end":1640,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135150,"byte_end":135165,"line_start":1641,"line_end":1641,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135166,"byte_end":135192,"line_start":1642,"line_end":1642,"column_start":1,"column_end":27}},{"value":"/ struct A {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135193,"byte_end":135207,"line_start":1643,"line_end":1643,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"DefaultOnError\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135208,"byte_end":135250,"line_start":1644,"line_end":1644,"column_start":1,"column_end":43}},{"value":"/     value: u32,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135251,"byte_end":135270,"line_start":1645,"line_end":1645,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135271,"byte_end":135276,"line_start":1646,"line_end":1646,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135277,"byte_end":135284,"line_start":1647,"line_end":1647,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135285,"byte_end":135292,"line_start":1648,"line_end":1648,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135293,"byte_end":135296,"line_start":1649,"line_end":1649,"column_start":1,"column_end":4}},{"value":"/ [`DefaultOnError`]: crate::DefaultOnError","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135297,"byte_end":135342,"line_start":1650,"line_end":1650,"column_start":1,"column_end":46}},{"value":"/ [`serde_as`]: crate::guide::serde_as","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135343,"byte_end":135383,"line_start":1651,"line_end":1651,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135384,"byte_end":135387,"line_start":1652,"line_end":1652,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135388,"byte_end":135402,"line_start":1653,"line_end":1653,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135403,"byte_end":135406,"line_start":1654,"line_end":1654,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135407,"byte_end":135414,"line_start":1655,"line_end":1655,"column_start":1,"column_end":8}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135415,"byte_end":135451,"line_start":1656,"line_end":1656,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135452,"byte_end":135457,"line_start":1657,"line_end":1657,"column_start":1,"column_end":6}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135458,"byte_end":135484,"line_start":1658,"line_end":1658,"column_start":1,"column_end":27}},{"value":"/ struct A {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135485,"byte_end":135499,"line_start":1659,"line_end":1659,"column_start":1,"column_end":15}},{"value":"/     #[serde(deserialize_with = \"serde_with::rust::default_on_error::deserialize\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135500,"byte_end":135586,"line_start":1660,"line_end":1660,"column_start":1,"column_end":87}},{"value":"/     value: u32,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135587,"byte_end":135606,"line_start":1661,"line_end":1661,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135607,"byte_end":135612,"line_start":1662,"line_end":1662,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135613,"byte_end":135616,"line_start":1663,"line_end":1663,"column_start":1,"column_end":4}},{"value":"/ let a: A = serde_json::from_str(r#\"{\"value\": 123}\"#).unwrap();","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135617,"byte_end":135683,"line_start":1664,"line_end":1664,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(123, a.value);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135684,"byte_end":135713,"line_start":1665,"line_end":1665,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135714,"byte_end":135717,"line_start":1666,"line_end":1666,"column_start":1,"column_end":4}},{"value":"/ // null is of invalid type","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135718,"byte_end":135748,"line_start":1667,"line_end":1667,"column_start":1,"column_end":31}},{"value":"/ let a: A = serde_json::from_str(r#\"{\"value\": null}\"#).unwrap();","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135749,"byte_end":135816,"line_start":1668,"line_end":1668,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(0, a.value);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135817,"byte_end":135844,"line_start":1669,"line_end":1669,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135845,"byte_end":135848,"line_start":1670,"line_end":1670,"column_start":1,"column_end":4}},{"value":"/ // String is of invalid type","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135849,"byte_end":135881,"line_start":1671,"line_end":1671,"column_start":1,"column_end":33}},{"value":"/ let a: A = serde_json::from_str(r#\"{\"value\": \"123\"}\"#).unwrap();","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135882,"byte_end":135950,"line_start":1672,"line_end":1672,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(0, a.value);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135951,"byte_end":135978,"line_start":1673,"line_end":1673,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135979,"byte_end":135982,"line_start":1674,"line_end":1674,"column_start":1,"column_end":4}},{"value":"/ // Map is of invalid type","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":135983,"byte_end":136012,"line_start":1675,"line_end":1675,"column_start":1,"column_end":30}},{"value":"/ let a: A = serde_json::from_str(r#\"{\"value\": {}}\"#).unwrap();","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":136013,"byte_end":136078,"line_start":1676,"line_end":1676,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(0, a.value);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":136079,"byte_end":136106,"line_start":1677,"line_end":1677,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":136107,"byte_end":136110,"line_start":1678,"line_end":1678,"column_start":1,"column_end":4}},{"value":"/ // Missing entries still cause errors","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":136111,"byte_end":136152,"line_start":1679,"line_end":1679,"column_start":1,"column_end":42}},{"value":"/ assert!(serde_json::from_str::<A>(r#\"{  }\"#).is_err());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":136153,"byte_end":136212,"line_start":1680,"line_end":1680,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":136213,"byte_end":136220,"line_start":1681,"line_end":1681,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":136221,"byte_end":136224,"line_start":1682,"line_end":1682,"column_start":1,"column_end":4}},{"value":"/ Deserializing missing values can be supported by adding the `default` field attribute:","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":136225,"byte_end":136315,"line_start":1683,"line_end":1683,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":136316,"byte_end":136319,"line_start":1684,"line_end":1684,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":136320,"byte_end":136327,"line_start":1685,"line_end":1685,"column_start":1,"column_end":8}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":136328,"byte_end":136364,"line_start":1686,"line_end":1686,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":136365,"byte_end":136370,"line_start":1687,"line_end":1687,"column_start":1,"column_end":6}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":136371,"byte_end":136397,"line_start":1688,"line_end":1688,"column_start":1,"column_end":27}},{"value":"/ struct B {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":136398,"byte_end":136412,"line_start":1689,"line_end":1689,"column_start":1,"column_end":15}},{"value":"/     #[serde(default, deserialize_with = \"serde_with::rust::default_on_error::deserialize\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":136413,"byte_end":136508,"line_start":1690,"line_end":1690,"column_start":1,"column_end":96}},{"value":"/     value: u32,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":136509,"byte_end":136528,"line_start":1691,"line_end":1691,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":136529,"byte_end":136534,"line_start":1692,"line_end":1692,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":136535,"byte_end":136538,"line_start":1693,"line_end":1693,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":136539,"byte_end":136542,"line_start":1694,"line_end":1694,"column_start":1,"column_end":4}},{"value":"/ let b: B = serde_json::from_str(r#\"{  }\"#).unwrap();","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":136543,"byte_end":136599,"line_start":1695,"line_end":1695,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(0, b.value);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":136600,"byte_end":136627,"line_start":1696,"line_end":1696,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":136628,"byte_end":136635,"line_start":1697,"line_end":1697,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":655},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":136757,"byte_end":136768,"line_start":1702,"line_end":1702,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::default_on_error::deserialize","value":"pub fn deserialize<'de, D, T>(D) -> Result<T, D::Error> where D: Deserializer,\nT: Deserialize + Default","parent":null,"children":[],"decl_id":null,"docs":" Deserialize T and return the [`Default`] value on error\n","sig":null,"attributes":[{"value":"/ Deserialize T and return the [`Default`] value on error","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":136686,"byte_end":136745,"line_start":1701,"line_end":1701,"column_start":5,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":659},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":137548,"byte_end":137557,"line_start":1724,"line_end":1724,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::default_on_error::serialize","value":"pub fn serialize<T, S>(&T, S) -> Result<S::Ok, S::Error> where T: Serialize,\nS: Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize value with the default serializer\n","sig":null,"attributes":[{"value":"/ Serialize value with the default serializer","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":137489,"byte_end":137536,"line_start":1723,"line_end":1723,"column_start":5,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":662},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":138512,"byte_end":138527,"line_start":1758,"line_end":1758,"column_start":9,"column_end":24},"name":"default_on_null","qualname":"::rust::default_on_null","value":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","parent":null,"children":[{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":668}],"decl_id":null,"docs":" Deserialize default value if encountering `null`.","sig":null,"attributes":[{"value":"/ Deserialize default value if encountering `null`.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":137723,"byte_end":137776,"line_start":1733,"line_end":1733,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":137777,"byte_end":137780,"line_start":1734,"line_end":1734,"column_start":1,"column_end":4}},{"value":"/ One use case are JSON APIs in which the `null` value represents some default state.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":137781,"byte_end":137868,"line_start":1735,"line_end":1735,"column_start":1,"column_end":88}},{"value":"/ This adapter allows to turn the `null` directly into the [`Default`] value of the type.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":137869,"byte_end":137960,"line_start":1736,"line_end":1736,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":137961,"byte_end":137964,"line_start":1737,"line_end":1737,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":137965,"byte_end":137979,"line_start":1738,"line_end":1738,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":137980,"byte_end":137983,"line_start":1739,"line_end":1739,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":137984,"byte_end":137991,"line_start":1740,"line_end":1740,"column_start":1,"column_end":8}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":137992,"byte_end":138028,"line_start":1741,"line_end":1741,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":138029,"byte_end":138034,"line_start":1742,"line_end":1742,"column_start":1,"column_end":6}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":138035,"byte_end":138061,"line_start":1743,"line_end":1743,"column_start":1,"column_end":27}},{"value":"/ struct A {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":138062,"byte_end":138076,"line_start":1744,"line_end":1744,"column_start":1,"column_end":15}},{"value":"/     #[serde(deserialize_with = \"serde_with::rust::default_on_null::deserialize\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":138077,"byte_end":138162,"line_start":1745,"line_end":1745,"column_start":1,"column_end":86}},{"value":"/     value: u32,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":138163,"byte_end":138182,"line_start":1746,"line_end":1746,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":138183,"byte_end":138188,"line_start":1747,"line_end":1747,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":138189,"byte_end":138192,"line_start":1748,"line_end":1748,"column_start":1,"column_end":4}},{"value":"/ let a: A = serde_json::from_str(r#\"{\"value\": 123}\"#).unwrap();","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":138193,"byte_end":138259,"line_start":1749,"line_end":1749,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(123, a.value);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":138260,"byte_end":138289,"line_start":1750,"line_end":1750,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":138290,"byte_end":138293,"line_start":1751,"line_end":1751,"column_start":1,"column_end":4}},{"value":"/ let a: A = serde_json::from_str(r#\"{\"value\": null}\"#).unwrap();","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":138294,"byte_end":138361,"line_start":1752,"line_end":1752,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(0, a.value);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":138362,"byte_end":138389,"line_start":1753,"line_end":1753,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":138390,"byte_end":138393,"line_start":1754,"line_end":1754,"column_start":1,"column_end":4}},{"value":"/ // String is invalid type","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":138394,"byte_end":138423,"line_start":1755,"line_end":1755,"column_start":1,"column_end":30}},{"value":"/ assert!(serde_json::from_str::<A>(r#\"{\"value\": \"123\"}\"#).is_err());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":138424,"byte_end":138495,"line_start":1756,"line_end":1756,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":138496,"byte_end":138503,"line_start":1757,"line_end":1757,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":664},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":138643,"byte_end":138654,"line_start":1762,"line_end":1762,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::rust::default_on_null::deserialize","value":"pub fn deserialize<'de, D, T>(D) -> Result<T, D::Error> where D: Deserializer,\nT: Deserialize + Default","parent":null,"children":[],"decl_id":null,"docs":" Deserialize T and return the [`Default`] value if original value is `null`\n","sig":null,"attributes":[{"value":"/ Deserialize T and return the [`Default`] value if original value is `null`","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":138553,"byte_end":138631,"line_start":1761,"line_end":1761,"column_start":5,"column_end":83}}]},{"kind":"Function","id":{"krate":0,"index":668},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":138928,"byte_end":138937,"line_start":1771,"line_end":1771,"column_start":12,"column_end":21},"name":"serialize","qualname":"::rust::default_on_null::serialize","value":"pub fn serialize<T, S>(&T, S) -> Result<S::Ok, S::Error> where T: Serialize,\nS: Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize value with the default serializer\n","sig":null,"attributes":[{"value":"/ Serialize value with the default serializer","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":138869,"byte_end":138916,"line_start":1770,"line_end":1770,"column_start":5,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":671},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ser","qualname":"::ser","value":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","parent":null,"children":[{"krate":0,"index":672},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":5100},{"krate":0,"index":5106},{"krate":0,"index":747},{"krate":0,"index":752},{"krate":0,"index":758}],"decl_id":null,"docs":" Module for [`SerializeAs`][] implementations","sig":null,"attributes":[{"value":"/ Module for [`SerializeAs`][] implementations","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":139103,"byte_end":139151,"line_start":1,"line_end":1,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":139152,"byte_end":139155,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The module contains the [`SerializeAs`][] trait and helper code.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":139156,"byte_end":139224,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/ Additionally, it contains implementations of [`SerializeAs`][] for types defined in the Rust Standard Library or this crate.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":139225,"byte_end":139353,"line_start":4,"line_end":4,"column_start":1,"column_end":129}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":139354,"byte_end":139357,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ You can find more details on how to implement this trait for your types in the documentation of the [`SerializeAs`][] trait and details about the usage in the [user guide][].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":139358,"byte_end":139536,"line_start":6,"line_end":6,"column_start":1,"column_end":179}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":139537,"byte_end":139540,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [user guide]: crate::guide","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":139541,"byte_end":139571,"line_start":8,"line_end":8,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":743},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":141855,"byte_end":141866,"line_start":68,"line_end":68,"column_start":11,"column_end":22},"name":"SerializeAs","qualname":"::ser::SerializeAs","value":"SerializeAs<T>","parent":null,"children":[{"krate":0,"index":745}],"decl_id":null,"docs":" A **data structure** that can be serialized into any data format supported by Serde, analogue to [`Serialize`].","sig":null,"attributes":[{"value":"/ A **data structure** that can be serialized into any data format supported by Serde, analogue to [`Serialize`].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":139600,"byte_end":139715,"line_start":14,"line_end":14,"column_start":1,"column_end":116}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":139716,"byte_end":139719,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The trait is analogue to the [`serde::Serialize`][`Serialize`] trait, with the same meaning of input and output arguments.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":139720,"byte_end":139846,"line_start":16,"line_end":16,"column_start":1,"column_end":127}},{"value":"/ It can and should the implemented using the same code structure as the [`Serialize`] trait.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":139847,"byte_end":139942,"line_start":17,"line_end":17,"column_start":1,"column_end":96}},{"value":"/ As such, the same advice for [implementing `Serialize`][impl-serialize] applies here.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":139943,"byte_end":140032,"line_start":18,"line_end":18,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":140033,"byte_end":140036,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Differences to [`Serialize`]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":140037,"byte_end":140071,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":140072,"byte_end":140075,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The trait is only required for container-like types or types implementing specific conversion functions.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":140076,"byte_end":140184,"line_start":22,"line_end":22,"column_start":1,"column_end":109}},{"value":"/ Container-like types are [`Vec`][], [`BTreeMap`][], but also [`Option`][] and [`Box`][].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":140185,"byte_end":140277,"line_start":23,"line_end":23,"column_start":1,"column_end":93}},{"value":"/ Conversion types serialize into a different serde data type.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":140278,"byte_end":140342,"line_start":24,"line_end":24,"column_start":1,"column_end":65}},{"value":"/ For example, [`DisplayFromStr`] uses the [`Display`] trait to serialize a String and [`DurationSeconds`] converts a [`Duration`] into either String or integer values.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":140343,"byte_end":140513,"line_start":25,"line_end":25,"column_start":1,"column_end":171}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":140514,"byte_end":140517,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This code shows how to implement [`Serialize`] for [`Box`]:","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":140518,"byte_end":140581,"line_start":27,"line_end":27,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":140582,"byte_end":140585,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":140586,"byte_end":140604,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"/ impl<T> Serialize for Box<T>","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":140605,"byte_end":140637,"line_start":30,"line_end":30,"column_start":1,"column_end":33}},{"value":"/ where","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":140638,"byte_end":140647,"line_start":31,"line_end":31,"column_start":1,"column_end":10}},{"value":"/     T: Serialize,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":140648,"byte_end":140669,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/ {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":140670,"byte_end":140675,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/     #[inline]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":140676,"byte_end":140693,"line_start":34,"line_end":34,"column_start":1,"column_end":18}},{"value":"/     fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":140694,"byte_end":140766,"line_start":35,"line_end":35,"column_start":1,"column_end":73}},{"value":"/     where","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":140767,"byte_end":140780,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/         S: Serializer,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":140781,"byte_end":140807,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/     {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":140808,"byte_end":140817,"line_start":38,"line_end":38,"column_start":1,"column_end":10}},{"value":"/         (**self).serialize(serializer)","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":140818,"byte_end":140860,"line_start":39,"line_end":39,"column_start":1,"column_end":43}},{"value":"/     }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":140861,"byte_end":140870,"line_start":40,"line_end":40,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":140871,"byte_end":140876,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":140877,"byte_end":140884,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":140885,"byte_end":140888,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ and this code shows how to do the same using [`SerializeAs`][]:","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":140889,"byte_end":140956,"line_start":44,"line_end":44,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":140957,"byte_end":140960,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":140961,"byte_end":140979,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ impl<T, U> SerializeAs<Box<T>> for Box<U>","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":140980,"byte_end":141025,"line_start":47,"line_end":47,"column_start":1,"column_end":46}},{"value":"/ where","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":141026,"byte_end":141035,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/     U: SerializeAs<T>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":141036,"byte_end":141062,"line_start":49,"line_end":49,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":141063,"byte_end":141068,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"/     fn serialize_as<S>(source: &Box<T>, serializer: S) -> Result<S::Ok, S::Error>","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":141069,"byte_end":141154,"line_start":51,"line_end":51,"column_start":1,"column_end":86}},{"value":"/     where","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":141155,"byte_end":141168,"line_start":52,"line_end":52,"column_start":1,"column_end":14}},{"value":"/         S: Serializer,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":141169,"byte_end":141195,"line_start":53,"line_end":53,"column_start":1,"column_end":27}},{"value":"/     {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":141196,"byte_end":141205,"line_start":54,"line_end":54,"column_start":1,"column_end":10}},{"value":"/         SerializeAsWrap::<T, U>::new(source).serialize(serializer)","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":141206,"byte_end":141276,"line_start":55,"line_end":55,"column_start":1,"column_end":71}},{"value":"/     }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":141277,"byte_end":141286,"line_start":56,"line_end":56,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":141287,"byte_end":141292,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":141293,"byte_end":141300,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":141301,"byte_end":141304,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ It uses two type parameters, `T` and `U` instead of only one and performs the serialization step using the `SerializeAsWrap` type.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":141305,"byte_end":141439,"line_start":60,"line_end":60,"column_start":1,"column_end":135}},{"value":"/ The `T` type is the on the Rust side before serialization, whereas the `U` type determines how the value will be serialized.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":141440,"byte_end":141568,"line_start":61,"line_end":61,"column_start":1,"column_end":129}},{"value":"/ These two changes are usually enough to make a container type implement [`SerializeAs`][].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":141569,"byte_end":141663,"line_start":62,"line_end":62,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":141664,"byte_end":141667,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ [`BTreeMap`]: std::collections::BTreeMap","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":141668,"byte_end":141712,"line_start":64,"line_end":64,"column_start":1,"column_end":45}},{"value":"/ [`Display`]: std::fmt::Display","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":141713,"byte_end":141747,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/ [`Duration`]: std::time::Duration","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":141748,"byte_end":141785,"line_start":66,"line_end":66,"column_start":1,"column_end":38}},{"value":"/ [impl-serialize]: https://serde.rs/impl-serialize.html","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":141786,"byte_end":141844,"line_start":67,"line_end":67,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":141941,"byte_end":141953,"line_start":70,"line_end":70,"column_start":8,"column_end":20},"name":"serialize_as","qualname":"::ser::SerializeAs::serialize_as","value":"pub fn serialize_as<S>(&T, S) -> Result<S::Ok, S::Error> where S: Serializer","parent":{"krate":0,"index":743},"children":[],"decl_id":null,"docs":" Serialize this value into the given Serde serializer.\n","sig":null,"attributes":[{"value":"/ Serialize this value into the given Serde serializer.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":141876,"byte_end":141933,"line_start":69,"line_end":69,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":5100},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":142146,"byte_end":142161,"line_start":77,"line_end":77,"column_start":12,"column_end":27},"name":"SerializeAsWrap","qualname":"::ser::SerializeAsWrap","value":"SerializeAsWrap {  }","parent":null,"children":[{"krate":0,"index":5104},{"krate":0,"index":5105}],"decl_id":null,"docs":" Helper type to implement [`SerializeAs`] for container-like types.\n","sig":null,"attributes":[{"value":"/ Helper type to implement [`SerializeAs`] for container-like types.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":142047,"byte_end":142117,"line_start":75,"line_end":75,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":142326,"byte_end":142329,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"new","qualname":"<SerializeAsWrap>::new","value":"pub fn new(&'a T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new instance with provided value.\n","sig":null,"attributes":[{"value":"/ Create new instance with provided value.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":142270,"byte_end":142314,"line_start":83,"line_end":83,"column_start":5,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":952},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\with_prefix.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"with_prefix","qualname":"::with_prefix","value":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\with_prefix.rs","parent":null,"children":[{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":5814},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":972},{"krate":0,"index":977},{"krate":0,"index":982},{"krate":0,"index":1025},{"krate":0,"index":1038},{"krate":0,"index":1046},{"krate":0,"index":1053},{"krate":0,"index":1064},{"krate":0,"index":1072},{"krate":0,"index":1081},{"krate":0,"index":1087},{"krate":0,"index":1097},{"krate":0,"index":1104}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":972},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\with_prefix.rs","byte_start":176562,"byte_end":176572,"line_start":141,"line_end":141,"column_start":12,"column_end":22},"name":"WithPrefix","qualname":"::with_prefix::WithPrefix","value":"WithPrefix { delegate, prefix }","parent":null,"children":[{"krate":0,"index":975},{"krate":0,"index":976}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\with_prefix.rs","byte_start":176511,"byte_end":176550,"line_start":140,"line_end":140,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":975},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\with_prefix.rs","byte_start":176590,"byte_end":176598,"line_start":142,"line_end":142,"column_start":9,"column_end":17},"name":"delegate","qualname":"::with_prefix::WithPrefix::delegate","value":"T","parent":{"krate":0,"index":972},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":976},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\with_prefix.rs","byte_start":176611,"byte_end":176617,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"name":"prefix","qualname":"::with_prefix::WithPrefix::prefix","value":"&'a str","parent":{"krate":0,"index":972},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1081},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\with_prefix.rs","byte_start":186966,"byte_end":186982,"line_start":517,"line_end":517,"column_start":12,"column_end":28},"name":"WithPrefixOption","qualname":"::with_prefix::WithPrefixOption","value":"WithPrefixOption {  }","parent":null,"children":[{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\with_prefix.rs","byte_start":186915,"byte_end":186954,"line_start":516,"line_end":516,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":1124},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":9539,"byte_end":9548,"line_start":270,"line_end":270,"column_start":11,"column_end":20},"name":"Separator","qualname":"::Separator","value":"Separator","parent":null,"children":[{"krate":0,"index":1125}],"decl_id":null,"docs":" Separator for string-based collection de/serialization\n","sig":null,"attributes":[{"value":"/ Separator for string-based collection de/serialization","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":9470,"byte_end":9528,"line_start":269,"line_end":269,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1125},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":9639,"byte_end":9648,"line_start":272,"line_end":272,"column_start":8,"column_end":17},"name":"separator","qualname":"::Separator::separator","value":"pub fn separator() -> &'static str","parent":{"krate":0,"index":1124},"children":[],"decl_id":null,"docs":" Return the string delimiting two elements in the string-based collection\n","sig":null,"attributes":[{"value":"/ Return the string delimiting two elements in the string-based collection","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":9555,"byte_end":9631,"line_start":271,"line_end":271,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":5260},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":9805,"byte_end":9819,"line_start":277,"line_end":277,"column_start":12,"column_end":26},"name":"SpaceSeparator","qualname":"::SpaceSeparator","value":"","parent":null,"children":[],"decl_id":null,"docs":" Predefined separator using a single space\n","sig":null,"attributes":[{"value":"/ Predefined separator using a single space","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":9671,"byte_end":9716,"line_start":275,"line_end":275,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":5282},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":10064,"byte_end":10078,"line_start":288,"line_end":288,"column_start":12,"column_end":26},"name":"CommaSeparator","qualname":"::CommaSeparator","value":"","parent":null,"children":[],"decl_id":null,"docs":" Predefined separator using a single comma\n","sig":null,"attributes":[{"value":"/ Predefined separator using a single comma","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":9930,"byte_end":9975,"line_start":286,"line_end":286,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":5304},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":12311,"byte_end":12313,"line_start":338,"line_end":338,"column_start":12,"column_end":14},"name":"As","qualname":"::As","value":"","parent":null,"children":[],"decl_id":null,"docs":" Adapter to convert from `serde_as` to the serde traits.","sig":null,"attributes":[{"value":"/ Adapter to convert from `serde_as` to the serde traits.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":10189,"byte_end":10248,"line_start":297,"line_end":297,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":10249,"byte_end":10252,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ The `As` type adapter allows to use types implementing [`DeserializeAs`][] or [`SerializeAs`][] in place of serde's with-annotation.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":10253,"byte_end":10389,"line_start":299,"line_end":299,"column_start":1,"column_end":137}},{"value":"/ The with-annotation allows to run custom code when de/serializing, however it is quite inflexible.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":10390,"byte_end":10492,"line_start":300,"line_end":300,"column_start":1,"column_end":103}},{"value":"/ The traits [`DeserializeAs`][]/[`SerializeAs`][] are more flexible, as they allow composition and nesting of types to create more complex de/serialization behavior.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":10493,"byte_end":10661,"line_start":301,"line_end":301,"column_start":1,"column_end":169}},{"value":"/ However, they are not directly compatible with serde, as they are not provided by serde.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":10662,"byte_end":10754,"line_start":302,"line_end":302,"column_start":1,"column_end":93}},{"value":"/ The `As` type adapter makes them compatible, by forwarding the function calls to `serialize`/`deserialize` to the corresponding functions `serialize_as` and `deserialize_as`.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":10755,"byte_end":10933,"line_start":303,"line_end":303,"column_start":1,"column_end":179}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":10934,"byte_end":10937,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ It is not required to use this type directly.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":10938,"byte_end":10987,"line_start":305,"line_end":305,"column_start":1,"column_end":50}},{"value":"/ Instead, it is highly encouraged to use the [`#[serde_as]`][serde_as] attribute since it includes further usability improvements.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":10988,"byte_end":11121,"line_start":306,"line_end":306,"column_start":1,"column_end":134}},{"value":"/ If the use of the use of the proc-macro is not acceptable, then `As` can be used directly with serde.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":11122,"byte_end":11227,"line_start":307,"line_end":307,"column_start":1,"column_end":106}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":11228,"byte_end":11231,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":11232,"byte_end":11243,"line_start":309,"line_end":309,"column_start":1,"column_end":12}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":11244,"byte_end":11293,"line_start":310,"line_end":310,"column_start":1,"column_end":50}},{"value":"/ # use serde_with::{As, DisplayFromStr};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":11294,"byte_end":11337,"line_start":311,"line_end":311,"column_start":1,"column_end":44}},{"value":"/ #","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":11338,"byte_end":11343,"line_start":312,"line_end":312,"column_start":1,"column_end":6}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":11344,"byte_end":11381,"line_start":313,"line_end":313,"column_start":1,"column_end":38}},{"value":"/ # struct S {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":11382,"byte_end":11398,"line_start":314,"line_end":314,"column_start":1,"column_end":17}},{"value":"/ // Serialize numbers as sequence of strings, using Display and FromStr","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":11399,"byte_end":11473,"line_start":315,"line_end":315,"column_start":1,"column_end":75}},{"value":"/ #[serde(with = \"As::<Vec<DisplayFromStr>>\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":11474,"byte_end":11522,"line_start":316,"line_end":316,"column_start":1,"column_end":49}},{"value":"/ field: Vec<u8>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":11523,"byte_end":11542,"line_start":317,"line_end":317,"column_start":1,"column_end":20}},{"value":"/ # }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":11543,"byte_end":11550,"line_start":318,"line_end":318,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":11551,"byte_end":11558,"line_start":319,"line_end":319,"column_start":1,"column_end":8}},{"value":"/ If the normal `Deserialize`/`Serialize` traits should be used, the placeholder type [`Same`] can be used.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":11559,"byte_end":11668,"line_start":320,"line_end":320,"column_start":1,"column_end":110}},{"value":"/ It implements [`DeserializeAs`][]/[`SerializeAs`][], when the underlying type implements `Deserialize`/`Serialize`.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":11669,"byte_end":11788,"line_start":321,"line_end":321,"column_start":1,"column_end":120}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":11789,"byte_end":11792,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":11793,"byte_end":11804,"line_start":323,"line_end":323,"column_start":1,"column_end":12}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":11805,"byte_end":11854,"line_start":324,"line_end":324,"column_start":1,"column_end":50}},{"value":"/ # use serde_with::{As, DisplayFromStr, Same};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":11855,"byte_end":11904,"line_start":325,"line_end":325,"column_start":1,"column_end":50}},{"value":"/ # use std::collections::BTreeMap;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":11905,"byte_end":11942,"line_start":326,"line_end":326,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":11943,"byte_end":11948,"line_start":327,"line_end":327,"column_start":1,"column_end":6}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":11949,"byte_end":11986,"line_start":328,"line_end":328,"column_start":1,"column_end":38}},{"value":"/ # struct S {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":11987,"byte_end":12003,"line_start":329,"line_end":329,"column_start":1,"column_end":17}},{"value":"/ // Serialize map, turn keys into strings but keep type of value","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":12004,"byte_end":12071,"line_start":330,"line_end":330,"column_start":1,"column_end":68}},{"value":"/ #[serde(with = \"As::<BTreeMap<DisplayFromStr, Same>>\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":12072,"byte_end":12131,"line_start":331,"line_end":331,"column_start":1,"column_end":60}},{"value":"/ field: BTreeMap<u8, i32>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":12132,"byte_end":12161,"line_start":332,"line_end":332,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":12162,"byte_end":12169,"line_start":333,"line_end":333,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":12170,"byte_end":12177,"line_start":334,"line_end":334,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":12178,"byte_end":12181,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ [serde_as]: https://docs.rs/serde_with/1.5.1/serde_with/attr.serde_as.html","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":12182,"byte_end":12260,"line_start":336,"line_end":336,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1132},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":12589,"byte_end":12598,"line_start":346,"line_end":346,"column_start":12,"column_end":21},"name":"serialize","qualname":"<As<T>>::serialize","value":"pub fn serialize<S, I>(&I, S) -> Result<S::Ok, S::Error> where S: Serializer,\nT: SerializeAs<I>","parent":null,"children":[],"decl_id":null,"docs":" Serialize type `T` using [`SerializeAs`][]","sig":null,"attributes":[{"value":"/ Serialize type `T` using [`SerializeAs`][]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":12355,"byte_end":12401,"line_start":341,"line_end":341,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":12406,"byte_end":12409,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ The function signature is compatible with [serde's with-annotation][with-annotation].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":12414,"byte_end":12503,"line_start":343,"line_end":343,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":12508,"byte_end":12511,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ [with-annotation]: https://serde.rs/field-attrs.html#with","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":12516,"byte_end":12577,"line_start":345,"line_end":345,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1135},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":13016,"byte_end":13027,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"name":"deserialize","qualname":"<As<T>>::deserialize","value":"pub fn deserialize<'de, D, I>(D) -> Result<I, D::Error> where\nT: DeserializeAs, D: Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserialize type `T` using [`DeserializeAs`][]","sig":null,"attributes":[{"value":"/ Deserialize type `T` using [`DeserializeAs`][]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":12778,"byte_end":12828,"line_start":354,"line_end":354,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":12833,"byte_end":12836,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ The function signature is compatible with [serde's with-annotation][with-annotation].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":12841,"byte_end":12930,"line_start":356,"line_end":356,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":12935,"byte_end":12938,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ [with-annotation]: https://serde.rs/field-attrs.html#with","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":12943,"byte_end":13004,"line_start":358,"line_end":358,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":5319},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":13559,"byte_end":13563,"line_start":374,"line_end":374,"column_start":12,"column_end":16},"name":"Same","qualname":"::Same","value":"","parent":null,"children":[],"decl_id":null,"docs":" Adapter to convert from `serde_as` to the serde traits.","sig":null,"attributes":[{"value":"/ Adapter to convert from `serde_as` to the serde traits.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":13208,"byte_end":13267,"line_start":368,"line_end":368,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":13268,"byte_end":13271,"line_start":369,"line_end":369,"column_start":1,"column_end":4}},{"value":"/ This is the counter-type to [`As`][].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":13272,"byte_end":13313,"line_start":370,"line_end":370,"column_start":1,"column_end":42}},{"value":"/ It can be used whenever a type implementing [`DeserializeAs`][]/[`SerializeAs`][] is required but the normal `Deserialize`/`Serialize` traits should be used.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":13314,"byte_end":13475,"line_start":371,"line_end":371,"column_start":1,"column_end":162}},{"value":"/ Check [`As`] for an example.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":13476,"byte_end":13508,"line_start":372,"line_end":372,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":5328},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":15369,"byte_end":15383,"line_start":425,"line_end":425,"column_start":12,"column_end":26},"name":"DisplayFromStr","qualname":"::DisplayFromStr","value":"","parent":null,"children":[],"decl_id":null,"docs":" De/Serialize using [`Display`] and [`FromStr`] implementation","sig":null,"attributes":[{"value":"/ De/Serialize using [`Display`] and [`FromStr`] implementation","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":13566,"byte_end":13631,"line_start":376,"line_end":376,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":13632,"byte_end":13635,"line_start":377,"line_end":377,"column_start":1,"column_end":4}},{"value":"/ This allows to deserialize a string as a number.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":13636,"byte_end":13688,"line_start":378,"line_end":378,"column_start":1,"column_end":53}},{"value":"/ It can be very useful for serialization formats like JSON, which do not support integer","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":13689,"byte_end":13780,"line_start":379,"line_end":379,"column_start":1,"column_end":92}},{"value":"/ numbers and have to resort to strings to represent them.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":13781,"byte_end":13841,"line_start":380,"line_end":380,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":13842,"byte_end":13845,"line_start":381,"line_end":381,"column_start":1,"column_end":4}},{"value":"/ Another use case is types with [`Display`] and [`FromStr`] implementations, but without serde","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":13846,"byte_end":13943,"line_start":382,"line_end":382,"column_start":1,"column_end":98}},{"value":"/ support, which can be found in some crates.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":13944,"byte_end":13991,"line_start":383,"line_end":383,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":13992,"byte_end":13995,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/ If you control the type you want to de/serialize, you can instead use the two derive macros, [`SerializeDisplay`] and [`DeserializeFromStr`].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":13996,"byte_end":14141,"line_start":385,"line_end":385,"column_start":1,"column_end":146}},{"value":"/ They properly implement the traits [`Serialize`] and [`Deserialize`] such that user of the type no longer have to use the `serde_as` system.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":14142,"byte_end":14286,"line_start":386,"line_end":386,"column_start":1,"column_end":145}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":14287,"byte_end":14290,"line_start":387,"line_end":387,"column_start":1,"column_end":4}},{"value":"/ The same functionality is also available as [`serde_with::rust::display_fromstr`][crate::rust::display_fromstr] compatible with serde's with-annotation.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":14291,"byte_end":14447,"line_start":388,"line_end":388,"column_start":1,"column_end":157}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":14448,"byte_end":14451,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":14452,"byte_end":14466,"line_start":390,"line_end":390,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":14467,"byte_end":14470,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":14471,"byte_end":14482,"line_start":392,"line_end":392,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":14483,"byte_end":14517,"line_start":393,"line_end":393,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":14518,"byte_end":14567,"line_start":394,"line_end":394,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":14568,"byte_end":14595,"line_start":395,"line_end":395,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::{serde_as, DisplayFromStr};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":14596,"byte_end":14645,"line_start":396,"line_end":396,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":14646,"byte_end":14651,"line_start":397,"line_end":397,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":14652,"byte_end":14667,"line_start":398,"line_end":398,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":14668,"byte_end":14705,"line_start":399,"line_end":399,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":14706,"byte_end":14720,"line_start":400,"line_end":400,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"DisplayFromStr\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":14721,"byte_end":14763,"line_start":401,"line_end":401,"column_start":1,"column_end":43}},{"value":"/     mime: mime::Mime,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":14764,"byte_end":14789,"line_start":402,"line_end":402,"column_start":1,"column_end":26}},{"value":"/     #[serde_as(as = \"DisplayFromStr\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":14790,"byte_end":14832,"line_start":403,"line_end":403,"column_start":1,"column_end":43}},{"value":"/     number: u32,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":14833,"byte_end":14853,"line_start":404,"line_end":404,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":14854,"byte_end":14859,"line_start":405,"line_end":405,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":14860,"byte_end":14863,"line_start":406,"line_end":406,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_value(json!({","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":14864,"byte_end":14909,"line_start":407,"line_end":407,"column_start":1,"column_end":46}},{"value":"/     \"mime\": \"text/plain\",","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":14910,"byte_end":14939,"line_start":408,"line_end":408,"column_start":1,"column_end":30}},{"value":"/     \"number\": \"159\",","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":14940,"byte_end":14964,"line_start":409,"line_end":409,"column_start":1,"column_end":25}},{"value":"/ })).unwrap();","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":14965,"byte_end":14982,"line_start":410,"line_end":410,"column_start":1,"column_end":18}},{"value":"/ assert_eq!(mime::TEXT_PLAIN, v.mime);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":14983,"byte_end":15024,"line_start":411,"line_end":411,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(159, v.number);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":15025,"byte_end":15055,"line_start":412,"line_end":412,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":15056,"byte_end":15059,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ let x = A {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":15060,"byte_end":15075,"line_start":414,"line_end":414,"column_start":1,"column_end":16}},{"value":"/     mime: mime::STAR_STAR,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":15076,"byte_end":15106,"line_start":415,"line_end":415,"column_start":1,"column_end":31}},{"value":"/     number: 777,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":15107,"byte_end":15127,"line_start":416,"line_end":416,"column_start":1,"column_end":21}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":15128,"byte_end":15134,"line_start":417,"line_end":417,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(json!({ \"mime\": \"*/*\", \"number\": \"777\" }), serde_json::to_value(&x).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":15135,"byte_end":15228,"line_start":418,"line_end":418,"column_start":1,"column_end":94}},{"value":"/ # }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":15229,"byte_end":15236,"line_start":419,"line_end":419,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":15237,"byte_end":15244,"line_start":420,"line_end":420,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":15245,"byte_end":15248,"line_start":421,"line_end":421,"column_start":1,"column_end":4}},{"value":"/ [`Display`]: std::fmt::Display","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":15249,"byte_end":15283,"line_start":422,"line_end":422,"column_start":1,"column_end":35}},{"value":"/ [`FromStr`]: std::str::FromStr","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":15284,"byte_end":15318,"line_start":423,"line_end":423,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5337},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":16814,"byte_end":16831,"line_start":469,"line_end":469,"column_start":12,"column_end":29},"name":"NoneAsEmptyString","qualname":"::NoneAsEmptyString","value":"","parent":null,"children":[],"decl_id":null,"docs":" De/Serialize a [`Option`]`<`[`String`]`>` type while transforming the empty string to [`None`]","sig":null,"attributes":[{"value":"/ De/Serialize a [`Option`]`<`[`String`]`>` type while transforming the empty string to [`None`]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":15386,"byte_end":15484,"line_start":427,"line_end":427,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":15485,"byte_end":15488,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ Convert an [`Option`]`<T>` from/to string using [`FromStr`] and [`AsRef`]`<`[`str`]`>` implementations.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":15489,"byte_end":15596,"line_start":429,"line_end":429,"column_start":1,"column_end":108}},{"value":"/ An empty string is deserialized as [`None`] and a [`None`] vice versa.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":15597,"byte_end":15671,"line_start":430,"line_end":430,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":15672,"byte_end":15675,"line_start":431,"line_end":431,"column_start":1,"column_end":4}},{"value":"/ The same functionality is also available as [`serde_with::rust::string_empty_as_none`][crate::rust::string_empty_as_none] compatible with serde's with-annotation.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":15676,"byte_end":15842,"line_start":432,"line_end":432,"column_start":1,"column_end":167}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":15843,"byte_end":15846,"line_start":433,"line_end":433,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":15847,"byte_end":15861,"line_start":434,"line_end":434,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":15862,"byte_end":15865,"line_start":435,"line_end":435,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":15866,"byte_end":15873,"line_start":436,"line_end":436,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":15874,"byte_end":15908,"line_start":437,"line_end":437,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":15909,"byte_end":15958,"line_start":438,"line_end":438,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":15959,"byte_end":15986,"line_start":439,"line_end":439,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::{serde_as, NoneAsEmptyString};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":15987,"byte_end":16039,"line_start":440,"line_end":440,"column_start":1,"column_end":53}},{"value":"/ #","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":16040,"byte_end":16045,"line_start":441,"line_end":441,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":16046,"byte_end":16061,"line_start":442,"line_end":442,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":16062,"byte_end":16099,"line_start":443,"line_end":443,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":16100,"byte_end":16114,"line_start":444,"line_end":444,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"NoneAsEmptyString\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":16115,"byte_end":16160,"line_start":445,"line_end":445,"column_start":1,"column_end":46}},{"value":"/     tags: Option<String>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":16161,"byte_end":16190,"line_start":446,"line_end":446,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":16191,"byte_end":16196,"line_start":447,"line_end":447,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":16197,"byte_end":16200,"line_start":448,"line_end":448,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_value(json!({ \"tags\": \"\" })).unwrap();","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":16201,"byte_end":16271,"line_start":449,"line_end":449,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(None, v.tags);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":16272,"byte_end":16301,"line_start":450,"line_end":450,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":16302,"byte_end":16305,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/ let v: A = serde_json::from_value(json!({ \"tags\": \"Hi\" })).unwrap();","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":16306,"byte_end":16378,"line_start":452,"line_end":452,"column_start":1,"column_end":73}},{"value":"/ assert_eq!(Some(\"Hi\".to_string()), v.tags);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":16379,"byte_end":16426,"line_start":453,"line_end":453,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":16427,"byte_end":16430,"line_start":454,"line_end":454,"column_start":1,"column_end":4}},{"value":"/ let x = A {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":16431,"byte_end":16446,"line_start":455,"line_end":455,"column_start":1,"column_end":16}},{"value":"/     tags: Some(\"This is text\".to_string()),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":16447,"byte_end":16494,"line_start":456,"line_end":456,"column_start":1,"column_end":48}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":16495,"byte_end":16501,"line_start":457,"line_end":457,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(json!({ \"tags\": \"This is text\" }), serde_json::to_value(&x).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":16502,"byte_end":16587,"line_start":458,"line_end":458,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":16588,"byte_end":16591,"line_start":459,"line_end":459,"column_start":1,"column_end":4}},{"value":"/ let x = A {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":16592,"byte_end":16607,"line_start":460,"line_end":460,"column_start":1,"column_end":16}},{"value":"/     tags: None,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":16608,"byte_end":16627,"line_start":461,"line_end":461,"column_start":1,"column_end":20}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":16628,"byte_end":16634,"line_start":462,"line_end":462,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(json!({ \"tags\": \"\" }), serde_json::to_value(&x).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":16635,"byte_end":16708,"line_start":463,"line_end":463,"column_start":1,"column_end":74}},{"value":"/ # }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":16709,"byte_end":16716,"line_start":464,"line_end":464,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":16717,"byte_end":16724,"line_start":465,"line_end":465,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":16725,"byte_end":16728,"line_start":466,"line_end":466,"column_start":1,"column_end":4}},{"value":"/ [`FromStr`]: std::str::FromStr","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":16729,"byte_end":16763,"line_start":467,"line_end":467,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5346},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":19592,"byte_end":19606,"line_start":558,"line_end":558,"column_start":12,"column_end":26},"name":"DefaultOnError","qualname":"::DefaultOnError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Deserialize value and return [`Default`] on error","sig":null,"attributes":[{"value":"/ Deserialize value and return [`Default`] on error","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":16834,"byte_end":16887,"line_start":471,"line_end":471,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":16888,"byte_end":16891,"line_start":472,"line_end":472,"column_start":1,"column_end":4}},{"value":"/ The main use case is ignoring error while deserializing.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":16892,"byte_end":16952,"line_start":473,"line_end":473,"column_start":1,"column_end":61}},{"value":"/ Instead of erroring, it simply deserializes the [`Default`] variant of the type.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":16953,"byte_end":17037,"line_start":474,"line_end":474,"column_start":1,"column_end":85}},{"value":"/ It is not possible to find the error location, i.e., which field had a deserialization error, with this method.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":17038,"byte_end":17153,"line_start":475,"line_end":475,"column_start":1,"column_end":116}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":17154,"byte_end":17157,"line_start":476,"line_end":476,"column_start":1,"column_end":4}},{"value":"/ The same functionality is also available as [`serde_with::rust::default_on_error`][crate::rust::default_on_error] compatible with serde's with-annotation.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":17158,"byte_end":17316,"line_start":477,"line_end":477,"column_start":1,"column_end":159}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":17317,"byte_end":17320,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":17321,"byte_end":17335,"line_start":479,"line_end":479,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":17336,"byte_end":17339,"line_start":480,"line_end":480,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":17340,"byte_end":17347,"line_start":481,"line_end":481,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":17348,"byte_end":17382,"line_start":482,"line_end":482,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":17383,"byte_end":17419,"line_start":483,"line_end":483,"column_start":1,"column_end":37}},{"value":"/ # use serde_with::{serde_as, DefaultOnError};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":17420,"byte_end":17469,"line_start":484,"line_end":484,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":17470,"byte_end":17475,"line_start":485,"line_end":485,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":17476,"byte_end":17491,"line_start":486,"line_end":486,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize,  Debug)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":17492,"byte_end":17526,"line_start":487,"line_end":487,"column_start":1,"column_end":35}},{"value":"/ struct A {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":17527,"byte_end":17541,"line_start":488,"line_end":488,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(deserialize_as = \"DefaultOnError\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":17542,"byte_end":17596,"line_start":489,"line_end":489,"column_start":1,"column_end":55}},{"value":"/     value: u32,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":17597,"byte_end":17616,"line_start":490,"line_end":490,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":17617,"byte_end":17622,"line_start":491,"line_end":491,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":17623,"byte_end":17626,"line_start":492,"line_end":492,"column_start":1,"column_end":4}},{"value":"/ let a: A = serde_json::from_str(r#\"{\"value\": 123}\"#).unwrap();","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":17627,"byte_end":17693,"line_start":493,"line_end":493,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(123, a.value);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":17694,"byte_end":17723,"line_start":494,"line_end":494,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":17724,"byte_end":17727,"line_start":495,"line_end":495,"column_start":1,"column_end":4}},{"value":"/ // null is of invalid type","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":17728,"byte_end":17758,"line_start":496,"line_end":496,"column_start":1,"column_end":31}},{"value":"/ let a: A = serde_json::from_str(r#\"{\"value\": null}\"#).unwrap();","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":17759,"byte_end":17826,"line_start":497,"line_end":497,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(0, a.value);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":17827,"byte_end":17854,"line_start":498,"line_end":498,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":17855,"byte_end":17858,"line_start":499,"line_end":499,"column_start":1,"column_end":4}},{"value":"/ // String is of invalid type","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":17859,"byte_end":17891,"line_start":500,"line_end":500,"column_start":1,"column_end":33}},{"value":"/ let a: A = serde_json::from_str(r#\"{\"value\": \"123\"}\"#).unwrap();","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":17892,"byte_end":17960,"line_start":501,"line_end":501,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(0, a.value);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":17961,"byte_end":17988,"line_start":502,"line_end":502,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":17989,"byte_end":17992,"line_start":503,"line_end":503,"column_start":1,"column_end":4}},{"value":"/ // Map is of invalid type","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":17993,"byte_end":18022,"line_start":504,"line_end":504,"column_start":1,"column_end":30}},{"value":"/ let a: A = dbg!(serde_json::from_str(r#\"{\"value\": {}}\"#)).unwrap();","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":18023,"byte_end":18094,"line_start":505,"line_end":505,"column_start":1,"column_end":72}},{"value":"/ assert_eq!(0, a.value);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":18095,"byte_end":18122,"line_start":506,"line_end":506,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":18123,"byte_end":18126,"line_start":507,"line_end":507,"column_start":1,"column_end":4}},{"value":"/ // Missing entries still cause errors","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":18127,"byte_end":18168,"line_start":508,"line_end":508,"column_start":1,"column_end":42}},{"value":"/ assert!(serde_json::from_str::<A>(r#\"{  }\"#).is_err());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":18169,"byte_end":18228,"line_start":509,"line_end":509,"column_start":1,"column_end":60}},{"value":"/ # }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":18229,"byte_end":18236,"line_start":510,"line_end":510,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":18237,"byte_end":18244,"line_start":511,"line_end":511,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":18245,"byte_end":18248,"line_start":512,"line_end":512,"column_start":1,"column_end":4}},{"value":"/ Deserializing missing values can be supported by adding the `default` field attribute:","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":18249,"byte_end":18339,"line_start":513,"line_end":513,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":18340,"byte_end":18343,"line_start":514,"line_end":514,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":18344,"byte_end":18351,"line_start":515,"line_end":515,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":18352,"byte_end":18386,"line_start":516,"line_end":516,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":18387,"byte_end":18423,"line_start":517,"line_end":517,"column_start":1,"column_end":37}},{"value":"/ # use serde_with::{serde_as, DefaultOnError};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":18424,"byte_end":18473,"line_start":518,"line_end":518,"column_start":1,"column_end":50}},{"value":"/ #","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":18474,"byte_end":18479,"line_start":519,"line_end":519,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":18480,"byte_end":18495,"line_start":520,"line_end":520,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":18496,"byte_end":18522,"line_start":521,"line_end":521,"column_start":1,"column_end":27}},{"value":"/ struct B {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":18523,"byte_end":18537,"line_start":522,"line_end":522,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(deserialize_as = \"DefaultOnError\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":18538,"byte_end":18592,"line_start":523,"line_end":523,"column_start":1,"column_end":55}},{"value":"/     #[serde(default)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":18593,"byte_end":18618,"line_start":524,"line_end":524,"column_start":1,"column_end":26}},{"value":"/     value: u32,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":18619,"byte_end":18638,"line_start":525,"line_end":525,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":18639,"byte_end":18644,"line_start":526,"line_end":526,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":18645,"byte_end":18648,"line_start":527,"line_end":527,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":18649,"byte_end":18652,"line_start":528,"line_end":528,"column_start":1,"column_end":4}},{"value":"/ let b: B = serde_json::from_str(r#\"{  }\"#).unwrap();","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":18653,"byte_end":18709,"line_start":529,"line_end":529,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(0, b.value);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":18710,"byte_end":18737,"line_start":530,"line_end":530,"column_start":1,"column_end":28}},{"value":"/ # }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":18738,"byte_end":18745,"line_start":531,"line_end":531,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":18746,"byte_end":18753,"line_start":532,"line_end":532,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":18754,"byte_end":18757,"line_start":533,"line_end":533,"column_start":1,"column_end":4}},{"value":"/ `DefaultOnError` can be combined with other conversion methods.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":18758,"byte_end":18825,"line_start":534,"line_end":534,"column_start":1,"column_end":68}},{"value":"/ In this example we deserialize a `Vec`, each element is deserialized from a string.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":18826,"byte_end":18913,"line_start":535,"line_end":535,"column_start":1,"column_end":88}},{"value":"/ If the string does not parse as a number, then we get the default value of 0.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":18914,"byte_end":18995,"line_start":536,"line_end":536,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":18996,"byte_end":18999,"line_start":537,"line_end":537,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":19000,"byte_end":19011,"line_start":538,"line_end":538,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":19012,"byte_end":19046,"line_start":539,"line_end":539,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":19047,"byte_end":19096,"line_start":540,"line_end":540,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":19097,"byte_end":19124,"line_start":541,"line_end":541,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::{serde_as, DefaultOnError, DisplayFromStr};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":19125,"byte_end":19190,"line_start":542,"line_end":542,"column_start":1,"column_end":66}},{"value":"/ #","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":19191,"byte_end":19196,"line_start":543,"line_end":543,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":19197,"byte_end":19212,"line_start":544,"line_end":544,"column_start":1,"column_end":16}},{"value":"/ #[derive(Serialize, Deserialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":19213,"byte_end":19250,"line_start":545,"line_end":545,"column_start":1,"column_end":38}},{"value":"/ struct C {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":19251,"byte_end":19265,"line_start":546,"line_end":546,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"Vec<DefaultOnError<DisplayFromStr>>\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":19266,"byte_end":19329,"line_start":547,"line_end":547,"column_start":1,"column_end":64}},{"value":"/     value: Vec<u32>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":19330,"byte_end":19354,"line_start":548,"line_end":548,"column_start":1,"column_end":25}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":19355,"byte_end":19361,"line_start":549,"line_end":549,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":19362,"byte_end":19365,"line_start":550,"line_end":550,"column_start":1,"column_end":4}},{"value":"/ let c: C = serde_json::from_value(json!({","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":19366,"byte_end":19411,"line_start":551,"line_end":551,"column_start":1,"column_end":46}},{"value":"/     \"value\": [\"1\", \"2\", \"a3\", \"\", {}, \"6\"]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":19412,"byte_end":19458,"line_start":552,"line_end":552,"column_start":1,"column_end":47}},{"value":"/ })).unwrap();","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":19459,"byte_end":19476,"line_start":553,"line_end":553,"column_start":1,"column_end":18}},{"value":"/ assert_eq!(vec![1, 2, 0, 0, 0, 6], c.value);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":19477,"byte_end":19525,"line_start":554,"line_end":554,"column_start":1,"column_end":49}},{"value":"/ # }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":19526,"byte_end":19533,"line_start":555,"line_end":555,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":19534,"byte_end":19541,"line_start":556,"line_end":556,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5361},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20923,"byte_end":20936,"line_start":606,"line_end":606,"column_start":12,"column_end":25},"name":"BytesOrString","qualname":"::BytesOrString","value":"","parent":null,"children":[],"decl_id":null,"docs":" Deserialize from bytes or string","sig":null,"attributes":[{"value":"/ Deserialize from bytes or string","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":19635,"byte_end":19671,"line_start":560,"line_end":560,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":19672,"byte_end":19675,"line_start":561,"line_end":561,"column_start":1,"column_end":4}},{"value":"/ Any Rust [`String`] can be converted into bytes, i.e., `Vec<u8>`.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":19676,"byte_end":19745,"line_start":562,"line_end":562,"column_start":1,"column_end":70}},{"value":"/ Accepting both as formats while deserializing can be helpful while interacting with language","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":19746,"byte_end":19842,"line_start":563,"line_end":563,"column_start":1,"column_end":97}},{"value":"/ which have a looser definition of string than Rust.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":19843,"byte_end":19898,"line_start":564,"line_end":564,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":19899,"byte_end":19902,"line_start":565,"line_end":565,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":19903,"byte_end":19916,"line_start":566,"line_end":566,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":19917,"byte_end":19928,"line_start":567,"line_end":567,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":19929,"byte_end":19963,"line_start":568,"line_end":568,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":19964,"byte_end":20013,"line_start":569,"line_end":569,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20014,"byte_end":20041,"line_start":570,"line_end":570,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::{serde_as, BytesOrString};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20042,"byte_end":20090,"line_start":571,"line_end":571,"column_start":1,"column_end":49}},{"value":"/ #","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20091,"byte_end":20096,"line_start":572,"line_end":572,"column_start":1,"column_end":6}},{"value":"/ #[serde_as]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20097,"byte_end":20112,"line_start":573,"line_end":573,"column_start":1,"column_end":16}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20113,"byte_end":20150,"line_start":574,"line_end":574,"column_start":1,"column_end":38}},{"value":"/ struct A {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20151,"byte_end":20165,"line_start":575,"line_end":575,"column_start":1,"column_end":15}},{"value":"/     #[serde_as(as = \"BytesOrString\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20166,"byte_end":20207,"line_start":576,"line_end":576,"column_start":1,"column_end":42}},{"value":"/     bytes_or_string: Vec<u8>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20208,"byte_end":20241,"line_start":577,"line_end":577,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20242,"byte_end":20247,"line_start":578,"line_end":578,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20248,"byte_end":20251,"line_start":579,"line_end":579,"column_start":1,"column_end":4}},{"value":"/ // Here we deserialize from a byte array ...","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20252,"byte_end":20300,"line_start":580,"line_end":580,"column_start":1,"column_end":49}},{"value":"/ let j = json!({","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20301,"byte_end":20320,"line_start":581,"line_end":581,"column_start":1,"column_end":20}},{"value":"/   \"bytes_or_string\": [","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20321,"byte_end":20347,"line_start":582,"line_end":582,"column_start":1,"column_end":27}},{"value":"/     0,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20348,"byte_end":20358,"line_start":583,"line_end":583,"column_start":1,"column_end":11}},{"value":"/     1,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20359,"byte_end":20369,"line_start":584,"line_end":584,"column_start":1,"column_end":11}},{"value":"/     2,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20370,"byte_end":20380,"line_start":585,"line_end":585,"column_start":1,"column_end":11}},{"value":"/     3","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20381,"byte_end":20390,"line_start":586,"line_end":586,"column_start":1,"column_end":10}},{"value":"/   ]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20391,"byte_end":20398,"line_start":587,"line_end":587,"column_start":1,"column_end":8}},{"value":"/ });","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20399,"byte_end":20406,"line_start":588,"line_end":588,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20407,"byte_end":20410,"line_start":589,"line_end":589,"column_start":1,"column_end":4}},{"value":"/ let a: A = serde_json::from_value(j.clone()).unwrap();","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20411,"byte_end":20469,"line_start":590,"line_end":590,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(vec![0, 1, 2, 3], a.bytes_or_string);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20470,"byte_end":20522,"line_start":591,"line_end":591,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20523,"byte_end":20526,"line_start":592,"line_end":592,"column_start":1,"column_end":4}},{"value":"/ // and serialization works too.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20527,"byte_end":20562,"line_start":593,"line_end":593,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(j, serde_json::to_value(&a).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20563,"byte_end":20616,"line_start":594,"line_end":594,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20617,"byte_end":20620,"line_start":595,"line_end":595,"column_start":1,"column_end":4}},{"value":"/ // But we also support deserializing from a String","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20621,"byte_end":20675,"line_start":596,"line_end":596,"column_start":1,"column_end":55}},{"value":"/ let j = json!({","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20676,"byte_end":20695,"line_start":597,"line_end":597,"column_start":1,"column_end":20}},{"value":"/   \"bytes_or_string\": \"✨Works!\"","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20696,"byte_end":20732,"line_start":598,"line_end":598,"column_start":1,"column_end":35}},{"value":"/ });","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20733,"byte_end":20740,"line_start":599,"line_end":599,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20741,"byte_end":20744,"line_start":600,"line_end":600,"column_start":1,"column_end":4}},{"value":"/ let a: A = serde_json::from_value(j).unwrap();","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20745,"byte_end":20795,"line_start":601,"line_end":601,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"✨Works!\".as_bytes(), &*a.bytes_or_string);","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20796,"byte_end":20856,"line_start":602,"line_end":602,"column_start":1,"column_end":59}},{"value":"/ # }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20857,"byte_end":20864,"line_start":603,"line_end":603,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20865,"byte_end":20872,"line_start":604,"line_end":604,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5370},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":26288,"byte_end":26303,"line_start":743,"line_end":743,"column_start":12,"column_end":27},"name":"DurationSeconds","qualname":"::DurationSeconds","value":"","parent":null,"children":[],"decl_id":null,"docs":" De/Serialize Durations as number of seconds.","sig":null,"attributes":[{"value":"/ De/Serialize Durations as number of seconds.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20939,"byte_end":20987,"line_start":608,"line_end":608,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20988,"byte_end":20991,"line_start":609,"line_end":609,"column_start":1,"column_end":4}},{"value":"/ De/serialize durations as number of seconds with subsecond precision.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":20992,"byte_end":21065,"line_start":610,"line_end":610,"column_start":1,"column_end":74}},{"value":"/ Subsecond precision is *only* supported for [`DurationSecondsWithFrac`], but not for [`DurationSeconds`].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":21066,"byte_end":21175,"line_start":611,"line_end":611,"column_start":1,"column_end":110}},{"value":"/ You can configure the serialization format between integers, floats, and stringified numbers with the `FORMAT` specifier and configure the deserialization with the `STRICTNESS` specifier.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":21176,"byte_end":21367,"line_start":612,"line_end":612,"column_start":1,"column_end":192}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":21368,"byte_end":21371,"line_start":613,"line_end":613,"column_start":1,"column_end":4}},{"value":"/ The `STRICTNESS` specifier can either be [`formats::Strict`] or [`formats::Flexible`] and defaults to [`formats::Strict`].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":21372,"byte_end":21498,"line_start":614,"line_end":614,"column_start":1,"column_end":127}},{"value":"/ [`formats::Strict`] means that deserialization only supports the type given in `FORMAT`, e.g., if `FORMAT` is `u64` deserialization from a `f64` will error.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":21499,"byte_end":21659,"line_start":615,"line_end":615,"column_start":1,"column_end":161}},{"value":"/ [`formats::Flexible`] means that deserialization will perform a best effort to extract the correct duration and allows deserialization from any type.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":21660,"byte_end":21813,"line_start":616,"line_end":616,"column_start":1,"column_end":154}},{"value":"/ For example, deserializing `DurationSeconds<f64, Flexible>` will discard any subsecond precision during deserialization from `f64` and will parse a `String` as an integer number.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":21814,"byte_end":21996,"line_start":617,"line_end":617,"column_start":1,"column_end":183}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":21997,"byte_end":22000,"line_start":618,"line_end":618,"column_start":1,"column_end":4}},{"value":"/ This type also supports `chrono::Duration` with the `chrono`-[feature flag].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":22001,"byte_end":22081,"line_start":619,"line_end":619,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":22082,"byte_end":22085,"line_start":620,"line_end":620,"column_start":1,"column_end":4}},{"value":"/ | Duration Type         | Converter                 | Available `FORMAT`s    |","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":22086,"byte_end":22168,"line_start":621,"line_end":621,"column_start":1,"column_end":83}},{"value":"/ | --------------------- | ------------------------- | ---------------------- |","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":22169,"byte_end":22251,"line_start":622,"line_end":622,"column_start":1,"column_end":83}},{"value":"/ | `std::time::Duration` | `DurationSeconds`         | `u64`, `f64`, `String` |","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":22252,"byte_end":22334,"line_start":623,"line_end":623,"column_start":1,"column_end":83}},{"value":"/ | `std::time::Duration` | `DurationSecondsWithFrac` | `f64`, `String`        |","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":22335,"byte_end":22417,"line_start":624,"line_end":624,"column_start":1,"column_end":83}},{"value":"/ | `chrono::Duration`    | `DurationSeconds`         | `i64`, `f64`, `String` |","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":22418,"byte_end":22500,"line_start":625,"line_end":625,"column_start":1,"column_end":83}},{"value":"/ | `chrono::Duration`    | `DurationSecondsWithFrac` | `f64`, `String`        |","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":22501,"byte_end":22583,"line_start":626,"line_end":626,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":22584,"byte_end":22587,"line_start":627,"line_end":627,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":22588,"byte_end":22602,"line_start":628,"line_end":628,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":22603,"byte_end":22606,"line_start":629,"line_end":629,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":22607,"byte_end":22618,"line_start":630,"line_end":630,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":22619,"byte_end":22653,"line_start":631,"line_end":631,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":22654,"byte_end":22703,"line_start":632,"line_end":632,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":22704,"byte_end":22731,"line_start":633,"line_end":633,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::{serde_as, DurationSeconds};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":22732,"byte_end":22782,"line_start":634,"line_end":634,"column_start":1,"column_end":51}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":22783,"byte_end":22811,"line_start":635,"line_end":635,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":22812,"byte_end":22815,"line_start":636,"line_end":636,"column_start":1,"column_end":4}},{"value":"/ #[serde_as]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":22816,"byte_end":22831,"line_start":637,"line_end":637,"column_start":1,"column_end":16}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":22832,"byte_end":22865,"line_start":638,"line_end":638,"column_start":1,"column_end":34}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":22866,"byte_end":22903,"line_start":639,"line_end":639,"column_start":1,"column_end":38}},{"value":"/ struct Durations {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":22904,"byte_end":22926,"line_start":640,"line_end":640,"column_start":1,"column_end":23}},{"value":"/     #[serde_as(as = \"DurationSeconds<u64>\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":22927,"byte_end":22975,"line_start":641,"line_end":641,"column_start":1,"column_end":49}},{"value":"/     d_u64: Duration,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":22976,"byte_end":23000,"line_start":642,"line_end":642,"column_start":1,"column_end":25}},{"value":"/     #[serde_as(as = \"DurationSeconds<f64>\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":23001,"byte_end":23049,"line_start":643,"line_end":643,"column_start":1,"column_end":49}},{"value":"/     d_f64: Duration,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":23050,"byte_end":23074,"line_start":644,"line_end":644,"column_start":1,"column_end":25}},{"value":"/     #[serde_as(as = \"DurationSeconds<String>\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":23075,"byte_end":23126,"line_start":645,"line_end":645,"column_start":1,"column_end":52}},{"value":"/     d_string: Duration,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":23127,"byte_end":23154,"line_start":646,"line_end":646,"column_start":1,"column_end":28}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":23155,"byte_end":23161,"line_start":647,"line_end":647,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":23162,"byte_end":23165,"line_start":648,"line_end":648,"column_start":1,"column_end":4}},{"value":"/ // Serialization","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":23166,"byte_end":23186,"line_start":649,"line_end":649,"column_start":1,"column_end":21}},{"value":"/ // See how the values get rounded, since subsecond precision is not allowed.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":23187,"byte_end":23267,"line_start":650,"line_end":650,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":23268,"byte_end":23271,"line_start":651,"line_end":651,"column_start":1,"column_end":4}},{"value":"/ let d = Durations {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":23272,"byte_end":23295,"line_start":652,"line_end":652,"column_start":1,"column_end":24}},{"value":"/     d_u64: Duration::new(12345, 0), // Create from seconds and nanoseconds","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":23296,"byte_end":23374,"line_start":653,"line_end":653,"column_start":1,"column_end":79}},{"value":"/     d_f64: Duration::new(12345, 500_000_000),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":23375,"byte_end":23424,"line_start":654,"line_end":654,"column_start":1,"column_end":50}},{"value":"/     d_string: Duration::new(12345, 999_999_999),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":23425,"byte_end":23477,"line_start":655,"line_end":655,"column_start":1,"column_end":53}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":23478,"byte_end":23484,"line_start":656,"line_end":656,"column_start":1,"column_end":7}},{"value":"/ // Observe the different datatypes","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":23485,"byte_end":23523,"line_start":657,"line_end":657,"column_start":1,"column_end":39}},{"value":"/ let expected = json!({","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":23524,"byte_end":23550,"line_start":658,"line_end":658,"column_start":1,"column_end":27}},{"value":"/     \"d_u64\": 12345,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":23551,"byte_end":23574,"line_start":659,"line_end":659,"column_start":1,"column_end":24}},{"value":"/     \"d_f64\": 12346.0,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":23575,"byte_end":23600,"line_start":660,"line_end":660,"column_start":1,"column_end":26}},{"value":"/     \"d_string\": \"12346\",","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":23601,"byte_end":23629,"line_start":661,"line_end":661,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":23630,"byte_end":23637,"line_start":662,"line_end":662,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(expected, serde_json::to_value(&d).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":23638,"byte_end":23698,"line_start":663,"line_end":663,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":23699,"byte_end":23702,"line_start":664,"line_end":664,"column_start":1,"column_end":4}},{"value":"/ // Deserialization works too","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":23703,"byte_end":23735,"line_start":665,"line_end":665,"column_start":1,"column_end":33}},{"value":"/ // Subsecond precision in numbers will be rounded away","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":23736,"byte_end":23794,"line_start":666,"line_end":666,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":23795,"byte_end":23798,"line_start":667,"line_end":667,"column_start":1,"column_end":4}},{"value":"/ let json = json!({","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":23799,"byte_end":23821,"line_start":668,"line_end":668,"column_start":1,"column_end":23}},{"value":"/     \"d_u64\": 12345,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":23822,"byte_end":23845,"line_start":669,"line_end":669,"column_start":1,"column_end":24}},{"value":"/     \"d_f64\": 12345.5,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":23846,"byte_end":23871,"line_start":670,"line_end":670,"column_start":1,"column_end":26}},{"value":"/     \"d_string\": \"12346\",","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":23872,"byte_end":23900,"line_start":671,"line_end":671,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":23901,"byte_end":23908,"line_start":672,"line_end":672,"column_start":1,"column_end":8}},{"value":"/ let expected = Durations {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":23909,"byte_end":23939,"line_start":673,"line_end":673,"column_start":1,"column_end":31}},{"value":"/     d_u64: Duration::new(12345, 0), // Create from seconds and nanoseconds","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":23940,"byte_end":24018,"line_start":674,"line_end":674,"column_start":1,"column_end":79}},{"value":"/     d_f64: Duration::new(12346, 0),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":24019,"byte_end":24058,"line_start":675,"line_end":675,"column_start":1,"column_end":40}},{"value":"/     d_string: Duration::new(12346, 0),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":24059,"byte_end":24101,"line_start":676,"line_end":676,"column_start":1,"column_end":43}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":24102,"byte_end":24108,"line_start":677,"line_end":677,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(expected, serde_json::from_value(json).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":24109,"byte_end":24173,"line_start":678,"line_end":678,"column_start":1,"column_end":65}},{"value":"/ # }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":24174,"byte_end":24181,"line_start":679,"line_end":679,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":24182,"byte_end":24189,"line_start":680,"line_end":680,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":24190,"byte_end":24193,"line_start":681,"line_end":681,"column_start":1,"column_end":4}},{"value":"/ [`chrono::Duration`] is also supported when using the `chrono` feature.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":24194,"byte_end":24269,"line_start":682,"line_end":682,"column_start":1,"column_end":76}},{"value":"/ It is a signed duration, thus can be de/serialized as an `i64` instead of a `u64`.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":24270,"byte_end":24356,"line_start":683,"line_end":683,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":24357,"byte_end":24360,"line_start":684,"line_end":684,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":24361,"byte_end":24372,"line_start":685,"line_end":685,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"macros\", feature = \"chrono\"))] {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":24373,"byte_end":24432,"line_start":686,"line_end":686,"column_start":1,"column_end":60}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":24433,"byte_end":24482,"line_start":687,"line_end":687,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":24483,"byte_end":24510,"line_start":688,"line_end":688,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::{serde_as, DurationSeconds};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":24511,"byte_end":24561,"line_start":689,"line_end":689,"column_start":1,"column_end":51}},{"value":"/ # use chrono_crate::Duration;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":24562,"byte_end":24595,"line_start":690,"line_end":690,"column_start":1,"column_end":34}},{"value":"/ # /* Ugliness to make the docs look nicer since I want to hide the rename of the chrono crate","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":24596,"byte_end":24693,"line_start":691,"line_end":691,"column_start":1,"column_end":98}},{"value":"/ use chrono::Duration;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":24694,"byte_end":24719,"line_start":692,"line_end":692,"column_start":1,"column_end":26}},{"value":"/ # */","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":24720,"byte_end":24728,"line_start":693,"line_end":693,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":24729,"byte_end":24732,"line_start":694,"line_end":694,"column_start":1,"column_end":4}},{"value":"/ #[serde_as]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":24733,"byte_end":24748,"line_start":695,"line_end":695,"column_start":1,"column_end":16}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":24749,"byte_end":24782,"line_start":696,"line_end":696,"column_start":1,"column_end":34}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":24783,"byte_end":24820,"line_start":697,"line_end":697,"column_start":1,"column_end":38}},{"value":"/ struct Durations {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":24821,"byte_end":24843,"line_start":698,"line_end":698,"column_start":1,"column_end":23}},{"value":"/     #[serde_as(as = \"DurationSeconds<i64>\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":24844,"byte_end":24892,"line_start":699,"line_end":699,"column_start":1,"column_end":49}},{"value":"/     d_i64: Duration,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":24893,"byte_end":24917,"line_start":700,"line_end":700,"column_start":1,"column_end":25}},{"value":"/     #[serde_as(as = \"DurationSeconds<f64>\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":24918,"byte_end":24966,"line_start":701,"line_end":701,"column_start":1,"column_end":49}},{"value":"/     d_f64: Duration,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":24967,"byte_end":24991,"line_start":702,"line_end":702,"column_start":1,"column_end":25}},{"value":"/     #[serde_as(as = \"DurationSeconds<String>\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":24992,"byte_end":25043,"line_start":703,"line_end":703,"column_start":1,"column_end":52}},{"value":"/     d_string: Duration,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":25044,"byte_end":25071,"line_start":704,"line_end":704,"column_start":1,"column_end":28}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":25072,"byte_end":25078,"line_start":705,"line_end":705,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":25079,"byte_end":25082,"line_start":706,"line_end":706,"column_start":1,"column_end":4}},{"value":"/ // Serialization","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":25083,"byte_end":25103,"line_start":707,"line_end":707,"column_start":1,"column_end":21}},{"value":"/ // See how the values get rounded, since subsecond precision is not allowed.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":25104,"byte_end":25184,"line_start":708,"line_end":708,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":25185,"byte_end":25188,"line_start":709,"line_end":709,"column_start":1,"column_end":4}},{"value":"/ let d = Durations {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":25189,"byte_end":25212,"line_start":710,"line_end":710,"column_start":1,"column_end":24}},{"value":"/     d_i64: Duration::seconds(-12345),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":25213,"byte_end":25254,"line_start":711,"line_end":711,"column_start":1,"column_end":42}},{"value":"/     d_f64: Duration::seconds(-12345) + Duration::milliseconds(500),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":25255,"byte_end":25326,"line_start":712,"line_end":712,"column_start":1,"column_end":72}},{"value":"/     d_string: Duration::seconds(12345) + Duration::nanoseconds(999_999_999),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":25327,"byte_end":25407,"line_start":713,"line_end":713,"column_start":1,"column_end":81}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":25408,"byte_end":25414,"line_start":714,"line_end":714,"column_start":1,"column_end":7}},{"value":"/ // Observe the different datatypes","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":25415,"byte_end":25453,"line_start":715,"line_end":715,"column_start":1,"column_end":39}},{"value":"/ let expected = json!({","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":25454,"byte_end":25480,"line_start":716,"line_end":716,"column_start":1,"column_end":27}},{"value":"/     \"d_i64\": -12345,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":25481,"byte_end":25505,"line_start":717,"line_end":717,"column_start":1,"column_end":25}},{"value":"/     \"d_f64\": -12345.0,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":25506,"byte_end":25532,"line_start":718,"line_end":718,"column_start":1,"column_end":27}},{"value":"/     \"d_string\": \"12346\",","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":25533,"byte_end":25561,"line_start":719,"line_end":719,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":25562,"byte_end":25569,"line_start":720,"line_end":720,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(expected, serde_json::to_value(&d).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":25570,"byte_end":25630,"line_start":721,"line_end":721,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":25631,"byte_end":25634,"line_start":722,"line_end":722,"column_start":1,"column_end":4}},{"value":"/ // Deserialization works too","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":25635,"byte_end":25667,"line_start":723,"line_end":723,"column_start":1,"column_end":33}},{"value":"/ // Subsecond precision in numbers will be rounded away","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":25668,"byte_end":25726,"line_start":724,"line_end":724,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":25727,"byte_end":25730,"line_start":725,"line_end":725,"column_start":1,"column_end":4}},{"value":"/ let json = json!({","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":25731,"byte_end":25753,"line_start":726,"line_end":726,"column_start":1,"column_end":23}},{"value":"/     \"d_i64\": -12345,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":25754,"byte_end":25778,"line_start":727,"line_end":727,"column_start":1,"column_end":25}},{"value":"/     \"d_f64\": -12345.5,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":25779,"byte_end":25805,"line_start":728,"line_end":728,"column_start":1,"column_end":27}},{"value":"/     \"d_string\": \"12346\",","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":25806,"byte_end":25834,"line_start":729,"line_end":729,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":25835,"byte_end":25842,"line_start":730,"line_end":730,"column_start":1,"column_end":8}},{"value":"/ let expected = Durations {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":25843,"byte_end":25873,"line_start":731,"line_end":731,"column_start":1,"column_end":31}},{"value":"/     d_i64: Duration::seconds(-12345),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":25874,"byte_end":25915,"line_start":732,"line_end":732,"column_start":1,"column_end":42}},{"value":"/     d_f64: Duration::seconds(-12346),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":25916,"byte_end":25957,"line_start":733,"line_end":733,"column_start":1,"column_end":42}},{"value":"/     d_string: Duration::seconds(12346),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":25958,"byte_end":26001,"line_start":734,"line_end":734,"column_start":1,"column_end":44}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":26002,"byte_end":26008,"line_start":735,"line_end":735,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(expected, serde_json::from_value(json).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":26009,"byte_end":26073,"line_start":736,"line_end":736,"column_start":1,"column_end":65}},{"value":"/ # }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":26074,"byte_end":26081,"line_start":737,"line_end":737,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":26082,"byte_end":26089,"line_start":738,"line_end":738,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":26090,"byte_end":26093,"line_start":739,"line_end":739,"column_start":1,"column_end":4}},{"value":"/ [`chrono::Duration`]: chrono_crate::Duration","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":26094,"byte_end":26142,"line_start":740,"line_end":740,"column_start":1,"column_end":49}},{"value":"/ [feature flag]: https://docs.rs/serde_with/1.5.1/serde_with/guide/feature_flags/index.html","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":26143,"byte_end":26237,"line_start":741,"line_end":741,"column_start":1,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":5390},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":31386,"byte_end":31409,"line_start":869,"line_end":869,"column_start":12,"column_end":35},"name":"DurationSecondsWithFrac","qualname":"::DurationSecondsWithFrac","value":"","parent":null,"children":[],"decl_id":null,"docs":" De/Serialize Durations as number of seconds.","sig":null,"attributes":[{"value":"/ De/Serialize Durations as number of seconds.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":26434,"byte_end":26482,"line_start":748,"line_end":748,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":26483,"byte_end":26486,"line_start":749,"line_end":749,"column_start":1,"column_end":4}},{"value":"/ De/serialize durations as number of seconds with subsecond precision.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":26487,"byte_end":26560,"line_start":750,"line_end":750,"column_start":1,"column_end":74}},{"value":"/ Subsecond precision is *only* supported for [`DurationSecondsWithFrac`], but not for [`DurationSeconds`].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":26561,"byte_end":26670,"line_start":751,"line_end":751,"column_start":1,"column_end":110}},{"value":"/ You can configure the serialization format between integers, floats, and stringified numbers with the `FORMAT` specifier and configure the deserialization with the `STRICTNESS` specifier.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":26671,"byte_end":26862,"line_start":752,"line_end":752,"column_start":1,"column_end":192}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":26863,"byte_end":26866,"line_start":753,"line_end":753,"column_start":1,"column_end":4}},{"value":"/ The `STRICTNESS` specifier can either be [`formats::Strict`] or [`formats::Flexible`] and defaults to [`formats::Strict`].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":26867,"byte_end":26993,"line_start":754,"line_end":754,"column_start":1,"column_end":127}},{"value":"/ [`formats::Strict`] means that deserialization only supports the type given in `FORMAT`, e.g., if `FORMAT` is `u64` deserialization from a `f64` will error.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":26994,"byte_end":27154,"line_start":755,"line_end":755,"column_start":1,"column_end":161}},{"value":"/ [`formats::Flexible`] means that deserialization will perform a best effort to extract the correct duration and allows deserialization from any type.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":27155,"byte_end":27308,"line_start":756,"line_end":756,"column_start":1,"column_end":154}},{"value":"/ For example, deserializing `DurationSeconds<f64, Flexible>` will discard any subsecond precision during deserialization from `f64` and will parse a `String` as an integer number.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":27309,"byte_end":27491,"line_start":757,"line_end":757,"column_start":1,"column_end":183}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":27492,"byte_end":27495,"line_start":758,"line_end":758,"column_start":1,"column_end":4}},{"value":"/ This type also supports `chrono::Duration` with the `chrono`-[feature flag].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":27496,"byte_end":27576,"line_start":759,"line_end":759,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":27577,"byte_end":27580,"line_start":760,"line_end":760,"column_start":1,"column_end":4}},{"value":"/ | Duration Type         | Converter                 | Available `FORMAT`s    |","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":27581,"byte_end":27663,"line_start":761,"line_end":761,"column_start":1,"column_end":83}},{"value":"/ | --------------------- | ------------------------- | ---------------------- |","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":27664,"byte_end":27746,"line_start":762,"line_end":762,"column_start":1,"column_end":83}},{"value":"/ | `std::time::Duration` | `DurationSeconds`         | `u64`, `f64`, `String` |","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":27747,"byte_end":27829,"line_start":763,"line_end":763,"column_start":1,"column_end":83}},{"value":"/ | `std::time::Duration` | `DurationSecondsWithFrac` | `f64`, `String`        |","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":27830,"byte_end":27912,"line_start":764,"line_end":764,"column_start":1,"column_end":83}},{"value":"/ | `chrono::Duration`    | `DurationSeconds`         | `i64`, `f64`, `String` |","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":27913,"byte_end":27995,"line_start":765,"line_end":765,"column_start":1,"column_end":83}},{"value":"/ | `chrono::Duration`    | `DurationSecondsWithFrac` | `f64`, `String`        |","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":27996,"byte_end":28078,"line_start":766,"line_end":766,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":28079,"byte_end":28082,"line_start":767,"line_end":767,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":28083,"byte_end":28097,"line_start":768,"line_end":768,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":28098,"byte_end":28101,"line_start":769,"line_end":769,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":28102,"byte_end":28113,"line_start":770,"line_end":770,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":28114,"byte_end":28148,"line_start":771,"line_end":771,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":28149,"byte_end":28198,"line_start":772,"line_end":772,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":28199,"byte_end":28226,"line_start":773,"line_end":773,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::{serde_as, DurationSecondsWithFrac};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":28227,"byte_end":28285,"line_start":774,"line_end":774,"column_start":1,"column_end":59}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":28286,"byte_end":28314,"line_start":775,"line_end":775,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":28315,"byte_end":28318,"line_start":776,"line_end":776,"column_start":1,"column_end":4}},{"value":"/ #[serde_as]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":28319,"byte_end":28334,"line_start":777,"line_end":777,"column_start":1,"column_end":16}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":28335,"byte_end":28368,"line_start":778,"line_end":778,"column_start":1,"column_end":34}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":28369,"byte_end":28406,"line_start":779,"line_end":779,"column_start":1,"column_end":38}},{"value":"/ struct Durations {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":28407,"byte_end":28429,"line_start":780,"line_end":780,"column_start":1,"column_end":23}},{"value":"/     #[serde_as(as = \"DurationSecondsWithFrac<f64>\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":28430,"byte_end":28486,"line_start":781,"line_end":781,"column_start":1,"column_end":57}},{"value":"/     d_f64: Duration,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":28487,"byte_end":28511,"line_start":782,"line_end":782,"column_start":1,"column_end":25}},{"value":"/     #[serde_as(as = \"DurationSecondsWithFrac<String>\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":28512,"byte_end":28571,"line_start":783,"line_end":783,"column_start":1,"column_end":60}},{"value":"/     d_string: Duration,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":28572,"byte_end":28599,"line_start":784,"line_end":784,"column_start":1,"column_end":28}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":28600,"byte_end":28606,"line_start":785,"line_end":785,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":28607,"byte_end":28610,"line_start":786,"line_end":786,"column_start":1,"column_end":4}},{"value":"/ // Serialization","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":28611,"byte_end":28631,"line_start":787,"line_end":787,"column_start":1,"column_end":21}},{"value":"/ // See how the values get rounded, since subsecond precision is not allowed.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":28632,"byte_end":28712,"line_start":788,"line_end":788,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":28713,"byte_end":28716,"line_start":789,"line_end":789,"column_start":1,"column_end":4}},{"value":"/ let d = Durations {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":28717,"byte_end":28740,"line_start":790,"line_end":790,"column_start":1,"column_end":24}},{"value":"/     d_f64: Duration::new(12345, 500_000_000), // Create from seconds and nanoseconds","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":28741,"byte_end":28829,"line_start":791,"line_end":791,"column_start":1,"column_end":89}},{"value":"/     d_string: Duration::new(12345, 999_999_000),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":28830,"byte_end":28882,"line_start":792,"line_end":792,"column_start":1,"column_end":53}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":28883,"byte_end":28889,"line_start":793,"line_end":793,"column_start":1,"column_end":7}},{"value":"/ // Observe the different datatypes","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":28890,"byte_end":28928,"line_start":794,"line_end":794,"column_start":1,"column_end":39}},{"value":"/ let expected = json!({","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":28929,"byte_end":28955,"line_start":795,"line_end":795,"column_start":1,"column_end":27}},{"value":"/     \"d_f64\": 12345.5,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":28956,"byte_end":28981,"line_start":796,"line_end":796,"column_start":1,"column_end":26}},{"value":"/     \"d_string\": \"12345.999999\",","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":28982,"byte_end":29017,"line_start":797,"line_end":797,"column_start":1,"column_end":36}},{"value":"/ });","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":29018,"byte_end":29025,"line_start":798,"line_end":798,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(expected, serde_json::to_value(&d).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":29026,"byte_end":29086,"line_start":799,"line_end":799,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":29087,"byte_end":29090,"line_start":800,"line_end":800,"column_start":1,"column_end":4}},{"value":"/ // Deserialization works too","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":29091,"byte_end":29123,"line_start":801,"line_end":801,"column_start":1,"column_end":33}},{"value":"/ // Subsecond precision in numbers will be rounded away","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":29124,"byte_end":29182,"line_start":802,"line_end":802,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":29183,"byte_end":29186,"line_start":803,"line_end":803,"column_start":1,"column_end":4}},{"value":"/ let json = json!({","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":29187,"byte_end":29209,"line_start":804,"line_end":804,"column_start":1,"column_end":23}},{"value":"/     \"d_f64\": 12345.5,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":29210,"byte_end":29235,"line_start":805,"line_end":805,"column_start":1,"column_end":26}},{"value":"/     \"d_string\": \"12345.987654\",","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":29236,"byte_end":29271,"line_start":806,"line_end":806,"column_start":1,"column_end":36}},{"value":"/ });","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":29272,"byte_end":29279,"line_start":807,"line_end":807,"column_start":1,"column_end":8}},{"value":"/ let expected = Durations {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":29280,"byte_end":29310,"line_start":808,"line_end":808,"column_start":1,"column_end":31}},{"value":"/     d_f64: Duration::new(12345, 500_000_000), // Create from seconds and nanoseconds","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":29311,"byte_end":29399,"line_start":809,"line_end":809,"column_start":1,"column_end":89}},{"value":"/     d_string: Duration::new(12345, 987_654_000),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":29400,"byte_end":29452,"line_start":810,"line_end":810,"column_start":1,"column_end":53}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":29453,"byte_end":29459,"line_start":811,"line_end":811,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(expected, serde_json::from_value(json).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":29460,"byte_end":29524,"line_start":812,"line_end":812,"column_start":1,"column_end":65}},{"value":"/ # }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":29525,"byte_end":29532,"line_start":813,"line_end":813,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":29533,"byte_end":29540,"line_start":814,"line_end":814,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":29541,"byte_end":29544,"line_start":815,"line_end":815,"column_start":1,"column_end":4}},{"value":"/ [`chrono::Duration`] is also supported when using the `chrono` feature.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":29545,"byte_end":29620,"line_start":816,"line_end":816,"column_start":1,"column_end":76}},{"value":"/ It is a signed duration, thus can be de/serialized as an `i64` instead of a `u64`.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":29621,"byte_end":29707,"line_start":817,"line_end":817,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":29708,"byte_end":29711,"line_start":818,"line_end":818,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":29712,"byte_end":29723,"line_start":819,"line_end":819,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"macros\", feature = \"chrono\"))] {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":29724,"byte_end":29783,"line_start":820,"line_end":820,"column_start":1,"column_end":60}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":29784,"byte_end":29833,"line_start":821,"line_end":821,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":29834,"byte_end":29861,"line_start":822,"line_end":822,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::{serde_as, DurationSecondsWithFrac};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":29862,"byte_end":29920,"line_start":823,"line_end":823,"column_start":1,"column_end":59}},{"value":"/ # use chrono_crate::Duration;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":29921,"byte_end":29954,"line_start":824,"line_end":824,"column_start":1,"column_end":34}},{"value":"/ # /* Ugliness to make the docs look nicer since I want to hide the rename of the chrono crate","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":29955,"byte_end":30052,"line_start":825,"line_end":825,"column_start":1,"column_end":98}},{"value":"/ use chrono::Duration;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":30053,"byte_end":30078,"line_start":826,"line_end":826,"column_start":1,"column_end":26}},{"value":"/ # */","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":30079,"byte_end":30087,"line_start":827,"line_end":827,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":30088,"byte_end":30091,"line_start":828,"line_end":828,"column_start":1,"column_end":4}},{"value":"/ #[serde_as]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":30092,"byte_end":30107,"line_start":829,"line_end":829,"column_start":1,"column_end":16}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":30108,"byte_end":30141,"line_start":830,"line_end":830,"column_start":1,"column_end":34}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":30142,"byte_end":30179,"line_start":831,"line_end":831,"column_start":1,"column_end":38}},{"value":"/ struct Durations {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":30180,"byte_end":30202,"line_start":832,"line_end":832,"column_start":1,"column_end":23}},{"value":"/     #[serde_as(as = \"DurationSecondsWithFrac<f64>\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":30203,"byte_end":30259,"line_start":833,"line_end":833,"column_start":1,"column_end":57}},{"value":"/     d_f64: Duration,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":30260,"byte_end":30284,"line_start":834,"line_end":834,"column_start":1,"column_end":25}},{"value":"/     #[serde_as(as = \"DurationSecondsWithFrac<String>\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":30285,"byte_end":30344,"line_start":835,"line_end":835,"column_start":1,"column_end":60}},{"value":"/     d_string: Duration,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":30345,"byte_end":30372,"line_start":836,"line_end":836,"column_start":1,"column_end":28}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":30373,"byte_end":30379,"line_start":837,"line_end":837,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":30380,"byte_end":30383,"line_start":838,"line_end":838,"column_start":1,"column_end":4}},{"value":"/ // Serialization","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":30384,"byte_end":30404,"line_start":839,"line_end":839,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":30405,"byte_end":30408,"line_start":840,"line_end":840,"column_start":1,"column_end":4}},{"value":"/ let d = Durations {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":30409,"byte_end":30432,"line_start":841,"line_end":841,"column_start":1,"column_end":24}},{"value":"/     d_f64: Duration::seconds(-12345) + Duration::milliseconds(500),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":30433,"byte_end":30504,"line_start":842,"line_end":842,"column_start":1,"column_end":72}},{"value":"/     d_string: Duration::seconds(12345) + Duration::nanoseconds(999_999_000),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":30505,"byte_end":30585,"line_start":843,"line_end":843,"column_start":1,"column_end":81}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":30586,"byte_end":30592,"line_start":844,"line_end":844,"column_start":1,"column_end":7}},{"value":"/ // Observe the different datatypes","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":30593,"byte_end":30631,"line_start":845,"line_end":845,"column_start":1,"column_end":39}},{"value":"/ let expected = json!({","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":30632,"byte_end":30658,"line_start":846,"line_end":846,"column_start":1,"column_end":27}},{"value":"/     \"d_f64\": -12344.5,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":30659,"byte_end":30685,"line_start":847,"line_end":847,"column_start":1,"column_end":27}},{"value":"/     \"d_string\": \"12345.999999\",","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":30686,"byte_end":30721,"line_start":848,"line_end":848,"column_start":1,"column_end":36}},{"value":"/ });","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":30722,"byte_end":30729,"line_start":849,"line_end":849,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(expected, serde_json::to_value(&d).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":30730,"byte_end":30790,"line_start":850,"line_end":850,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":30791,"byte_end":30794,"line_start":851,"line_end":851,"column_start":1,"column_end":4}},{"value":"/ // Deserialization works too","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":30795,"byte_end":30827,"line_start":852,"line_end":852,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":30828,"byte_end":30831,"line_start":853,"line_end":853,"column_start":1,"column_end":4}},{"value":"/ let json = json!({","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":30832,"byte_end":30854,"line_start":854,"line_end":854,"column_start":1,"column_end":23}},{"value":"/     \"d_f64\": -12344.5,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":30855,"byte_end":30881,"line_start":855,"line_end":855,"column_start":1,"column_end":27}},{"value":"/     \"d_string\": \"12345.987\",","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":30882,"byte_end":30914,"line_start":856,"line_end":856,"column_start":1,"column_end":33}},{"value":"/ });","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":30915,"byte_end":30922,"line_start":857,"line_end":857,"column_start":1,"column_end":8}},{"value":"/ let expected = Durations {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":30923,"byte_end":30953,"line_start":858,"line_end":858,"column_start":1,"column_end":31}},{"value":"/     d_f64: Duration::seconds(-12345) + Duration::milliseconds(500),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":30954,"byte_end":31025,"line_start":859,"line_end":859,"column_start":1,"column_end":72}},{"value":"/     d_string: Duration::seconds(12345) + Duration::milliseconds(987),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":31026,"byte_end":31099,"line_start":860,"line_end":860,"column_start":1,"column_end":74}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":31100,"byte_end":31106,"line_start":861,"line_end":861,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(expected, serde_json::from_value(json).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":31107,"byte_end":31171,"line_start":862,"line_end":862,"column_start":1,"column_end":65}},{"value":"/ # }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":31172,"byte_end":31179,"line_start":863,"line_end":863,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":31180,"byte_end":31187,"line_start":864,"line_end":864,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":31188,"byte_end":31191,"line_start":865,"line_end":865,"column_start":1,"column_end":4}},{"value":"/ [`chrono::Duration`]: chrono_crate::Duration","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":31192,"byte_end":31240,"line_start":866,"line_end":866,"column_start":1,"column_end":49}},{"value":"/ [feature flag]: https://docs.rs/serde_with/1.5.1/serde_with/guide/feature_flags/index.html","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":31241,"byte_end":31335,"line_start":867,"line_end":867,"column_start":1,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":5410},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":37408,"byte_end":37424,"line_start":1011,"line_end":1011,"column_start":12,"column_end":28},"name":"TimestampSeconds","qualname":"::TimestampSeconds","value":"","parent":null,"children":[],"decl_id":null,"docs":" De/Serialize timestamps as seconds since the UNIX epoch","sig":null,"attributes":[{"value":"/ De/Serialize timestamps as seconds since the UNIX epoch","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":31540,"byte_end":31599,"line_start":874,"line_end":874,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":31600,"byte_end":31603,"line_start":875,"line_end":875,"column_start":1,"column_end":4}},{"value":"/ De/serialize timestamps as seconds since the UNIX epoch.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":31604,"byte_end":31664,"line_start":876,"line_end":876,"column_start":1,"column_end":61}},{"value":"/ Subsecond precision is *only* supported for [`TimestampSecondsWithFrac`], but not for [`TimestampSeconds`].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":31665,"byte_end":31776,"line_start":877,"line_end":877,"column_start":1,"column_end":112}},{"value":"/ You can configure the serialization format between integers, floats, and stringified numbers with the `FORMAT` specifier and configure the deserialization with the `STRICTNESS` specifier.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":31777,"byte_end":31968,"line_start":878,"line_end":878,"column_start":1,"column_end":192}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":31969,"byte_end":31972,"line_start":879,"line_end":879,"column_start":1,"column_end":4}},{"value":"/ The `STRICTNESS` specifier can either be [`formats::Strict`] or [`formats::Flexible`] and defaults to [`formats::Strict`].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":31973,"byte_end":32099,"line_start":880,"line_end":880,"column_start":1,"column_end":127}},{"value":"/ [`formats::Strict`] means that deserialization only supports the type given in `FORMAT`, e.g., if `FORMAT` is `i64` deserialization from a `f64` will error.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":32100,"byte_end":32260,"line_start":881,"line_end":881,"column_start":1,"column_end":161}},{"value":"/ [`formats::Flexible`] means that deserialization will perform a best effort to extract the correct timestamp and allows deserialization from any type.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":32261,"byte_end":32415,"line_start":882,"line_end":882,"column_start":1,"column_end":155}},{"value":"/ For example, deserializing `TimestampSeconds<f64, Flexible>` will discard any subsecond precision during deserialization from `f64` and will parse a `String` as an integer number.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":32416,"byte_end":32599,"line_start":883,"line_end":883,"column_start":1,"column_end":184}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":32600,"byte_end":32603,"line_start":884,"line_end":884,"column_start":1,"column_end":4}},{"value":"/ This type also supports `chrono::DateTime` with the `chrono`-[feature flag].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":32604,"byte_end":32684,"line_start":885,"line_end":885,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":32685,"byte_end":32688,"line_start":886,"line_end":886,"column_start":1,"column_end":4}},{"value":"/ | Timestamp Type            | Converter                  | Available `FORMAT`s    |","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":32689,"byte_end":32776,"line_start":887,"line_end":887,"column_start":1,"column_end":88}},{"value":"/ | ------------------------- | -------------------------- | ---------------------- |","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":32777,"byte_end":32864,"line_start":888,"line_end":888,"column_start":1,"column_end":88}},{"value":"/ | `std::time::SystemTime`   | `TimestampSeconds`         | `i64`, `f64`, `String` |","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":32865,"byte_end":32952,"line_start":889,"line_end":889,"column_start":1,"column_end":88}},{"value":"/ | `std::time::SystemTime`   | `TimestampSecondsWithFrac` | `f64`, `String`        |","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":32953,"byte_end":33040,"line_start":890,"line_end":890,"column_start":1,"column_end":88}},{"value":"/ | `chrono::DateTime<Utc>`   | `TimestampSeconds`         | `i64`, `f64`, `String` |","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":33041,"byte_end":33128,"line_start":891,"line_end":891,"column_start":1,"column_end":88}},{"value":"/ | `chrono::DateTime<Utc>`   | `TimestampSecondsWithFrac` | `f64`, `String`        |","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":33129,"byte_end":33216,"line_start":892,"line_end":892,"column_start":1,"column_end":88}},{"value":"/ | `chrono::DateTime<Local>` | `TimestampSeconds`         | `i64`, `f64`, `String` |","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":33217,"byte_end":33304,"line_start":893,"line_end":893,"column_start":1,"column_end":88}},{"value":"/ | `chrono::DateTime<Local>` | `TimestampSecondsWithFrac` | `f64`, `String`        |","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":33305,"byte_end":33392,"line_start":894,"line_end":894,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":33393,"byte_end":33396,"line_start":895,"line_end":895,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":33397,"byte_end":33411,"line_start":896,"line_end":896,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":33412,"byte_end":33415,"line_start":897,"line_end":897,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":33416,"byte_end":33427,"line_start":898,"line_end":898,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":33428,"byte_end":33462,"line_start":899,"line_end":899,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":33463,"byte_end":33512,"line_start":900,"line_end":900,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":33513,"byte_end":33540,"line_start":901,"line_end":901,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::{serde_as, TimestampSeconds};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":33541,"byte_end":33592,"line_start":902,"line_end":902,"column_start":1,"column_end":52}},{"value":"/ use std::time::{Duration, SystemTime};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":33593,"byte_end":33635,"line_start":903,"line_end":903,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":33636,"byte_end":33639,"line_start":904,"line_end":904,"column_start":1,"column_end":4}},{"value":"/ #[serde_as]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":33640,"byte_end":33655,"line_start":905,"line_end":905,"column_start":1,"column_end":16}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":33656,"byte_end":33689,"line_start":906,"line_end":906,"column_start":1,"column_end":34}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":33690,"byte_end":33727,"line_start":907,"line_end":907,"column_start":1,"column_end":38}},{"value":"/ struct Timestamps {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":33728,"byte_end":33751,"line_start":908,"line_end":908,"column_start":1,"column_end":24}},{"value":"/     #[serde_as(as = \"TimestampSeconds<i64>\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":33752,"byte_end":33801,"line_start":909,"line_end":909,"column_start":1,"column_end":50}},{"value":"/     st_i64: SystemTime,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":33802,"byte_end":33829,"line_start":910,"line_end":910,"column_start":1,"column_end":28}},{"value":"/     #[serde_as(as = \"TimestampSeconds<f64>\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":33830,"byte_end":33879,"line_start":911,"line_end":911,"column_start":1,"column_end":50}},{"value":"/     st_f64: SystemTime,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":33880,"byte_end":33907,"line_start":912,"line_end":912,"column_start":1,"column_end":28}},{"value":"/     #[serde_as(as = \"TimestampSeconds<String>\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":33908,"byte_end":33960,"line_start":913,"line_end":913,"column_start":1,"column_end":53}},{"value":"/     st_string: SystemTime,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":33961,"byte_end":33991,"line_start":914,"line_end":914,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":33992,"byte_end":33998,"line_start":915,"line_end":915,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":33999,"byte_end":34002,"line_start":916,"line_end":916,"column_start":1,"column_end":4}},{"value":"/ // Serialization","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":34003,"byte_end":34023,"line_start":917,"line_end":917,"column_start":1,"column_end":21}},{"value":"/ // See how the values get rounded, since subsecond precision is not allowed.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":34024,"byte_end":34104,"line_start":918,"line_end":918,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":34105,"byte_end":34108,"line_start":919,"line_end":919,"column_start":1,"column_end":4}},{"value":"/ let ts = Timestamps {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":34109,"byte_end":34134,"line_start":920,"line_end":920,"column_start":1,"column_end":26}},{"value":"/     st_i64: SystemTime::UNIX_EPOCH.checked_add(Duration::new(12345, 0)).unwrap(),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":34135,"byte_end":34220,"line_start":921,"line_end":921,"column_start":1,"column_end":86}},{"value":"/     st_f64: SystemTime::UNIX_EPOCH.checked_add(Duration::new(12345, 500_000_000)).unwrap(),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":34221,"byte_end":34316,"line_start":922,"line_end":922,"column_start":1,"column_end":96}},{"value":"/     st_string: SystemTime::UNIX_EPOCH.checked_add(Duration::new(12345, 999_999_999)).unwrap(),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":34317,"byte_end":34415,"line_start":923,"line_end":923,"column_start":1,"column_end":99}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":34416,"byte_end":34422,"line_start":924,"line_end":924,"column_start":1,"column_end":7}},{"value":"/ // Observe the different datatypes","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":34423,"byte_end":34461,"line_start":925,"line_end":925,"column_start":1,"column_end":39}},{"value":"/ let expected = json!({","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":34462,"byte_end":34488,"line_start":926,"line_end":926,"column_start":1,"column_end":27}},{"value":"/     \"st_i64\": 12345,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":34489,"byte_end":34513,"line_start":927,"line_end":927,"column_start":1,"column_end":25}},{"value":"/     \"st_f64\": 12346.0,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":34514,"byte_end":34540,"line_start":928,"line_end":928,"column_start":1,"column_end":27}},{"value":"/     \"st_string\": \"12346\",","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":34541,"byte_end":34570,"line_start":929,"line_end":929,"column_start":1,"column_end":30}},{"value":"/ });","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":34571,"byte_end":34578,"line_start":930,"line_end":930,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(expected, serde_json::to_value(&ts).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":34579,"byte_end":34640,"line_start":931,"line_end":931,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":34641,"byte_end":34644,"line_start":932,"line_end":932,"column_start":1,"column_end":4}},{"value":"/ // Deserialization works too","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":34645,"byte_end":34677,"line_start":933,"line_end":933,"column_start":1,"column_end":33}},{"value":"/ // Subsecond precision in numbers will be rounded away","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":34678,"byte_end":34736,"line_start":934,"line_end":934,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":34737,"byte_end":34740,"line_start":935,"line_end":935,"column_start":1,"column_end":4}},{"value":"/ let json = json!({","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":34741,"byte_end":34763,"line_start":936,"line_end":936,"column_start":1,"column_end":23}},{"value":"/     \"st_i64\": 12345,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":34764,"byte_end":34788,"line_start":937,"line_end":937,"column_start":1,"column_end":25}},{"value":"/     \"st_f64\": 12345.5,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":34789,"byte_end":34815,"line_start":938,"line_end":938,"column_start":1,"column_end":27}},{"value":"/     \"st_string\": \"12346\",","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":34816,"byte_end":34845,"line_start":939,"line_end":939,"column_start":1,"column_end":30}},{"value":"/ });","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":34846,"byte_end":34853,"line_start":940,"line_end":940,"column_start":1,"column_end":8}},{"value":"/ let expected  = Timestamps {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":34854,"byte_end":34886,"line_start":941,"line_end":941,"column_start":1,"column_end":33}},{"value":"/     st_i64: SystemTime::UNIX_EPOCH.checked_add(Duration::new(12345, 0)).unwrap(),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":34887,"byte_end":34972,"line_start":942,"line_end":942,"column_start":1,"column_end":86}},{"value":"/     st_f64: SystemTime::UNIX_EPOCH.checked_add(Duration::new(12346, 0)).unwrap(),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":34973,"byte_end":35058,"line_start":943,"line_end":943,"column_start":1,"column_end":86}},{"value":"/     st_string: SystemTime::UNIX_EPOCH.checked_add(Duration::new(12346, 0)).unwrap(),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":35059,"byte_end":35147,"line_start":944,"line_end":944,"column_start":1,"column_end":89}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":35148,"byte_end":35154,"line_start":945,"line_end":945,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(expected, serde_json::from_value(json).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":35155,"byte_end":35219,"line_start":946,"line_end":946,"column_start":1,"column_end":65}},{"value":"/ # }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":35220,"byte_end":35227,"line_start":947,"line_end":947,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":35228,"byte_end":35235,"line_start":948,"line_end":948,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":35236,"byte_end":35239,"line_start":949,"line_end":949,"column_start":1,"column_end":4}},{"value":"/ [`chrono::DateTime<Utc>`] and [`chrono::DateTime<Local>`] are also supported when using the `chrono` feature.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":35240,"byte_end":35353,"line_start":950,"line_end":950,"column_start":1,"column_end":114}},{"value":"/ Like [`SystemTime`], it is a signed timestamp, thus can be de/serialized as an `i64`.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":35354,"byte_end":35443,"line_start":951,"line_end":951,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":35444,"byte_end":35447,"line_start":952,"line_end":952,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":35448,"byte_end":35459,"line_start":953,"line_end":953,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"macros\", feature = \"chrono\"))] {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":35460,"byte_end":35519,"line_start":954,"line_end":954,"column_start":1,"column_end":60}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":35520,"byte_end":35569,"line_start":955,"line_end":955,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":35570,"byte_end":35597,"line_start":956,"line_end":956,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::{serde_as, TimestampSeconds};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":35598,"byte_end":35649,"line_start":957,"line_end":957,"column_start":1,"column_end":52}},{"value":"/ # use chrono_crate::{DateTime, Local, TimeZone, Utc};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":35650,"byte_end":35707,"line_start":958,"line_end":958,"column_start":1,"column_end":58}},{"value":"/ # /* Ugliness to make the docs look nicer since I want to hide the rename of the chrono crate","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":35708,"byte_end":35805,"line_start":959,"line_end":959,"column_start":1,"column_end":98}},{"value":"/ use chrono::{DateTime, Local, TimeZone, Utc};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":35806,"byte_end":35855,"line_start":960,"line_end":960,"column_start":1,"column_end":50}},{"value":"/ # */","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":35856,"byte_end":35864,"line_start":961,"line_end":961,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":35865,"byte_end":35868,"line_start":962,"line_end":962,"column_start":1,"column_end":4}},{"value":"/ #[serde_as]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":35869,"byte_end":35884,"line_start":963,"line_end":963,"column_start":1,"column_end":16}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":35885,"byte_end":35918,"line_start":964,"line_end":964,"column_start":1,"column_end":34}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":35919,"byte_end":35956,"line_start":965,"line_end":965,"column_start":1,"column_end":38}},{"value":"/ struct Timestamps {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":35957,"byte_end":35980,"line_start":966,"line_end":966,"column_start":1,"column_end":24}},{"value":"/     #[serde_as(as = \"TimestampSeconds<i64>\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":35981,"byte_end":36030,"line_start":967,"line_end":967,"column_start":1,"column_end":50}},{"value":"/     dt_i64: DateTime<Utc>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":36031,"byte_end":36061,"line_start":968,"line_end":968,"column_start":1,"column_end":31}},{"value":"/     #[serde_as(as = \"TimestampSeconds<f64>\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":36062,"byte_end":36111,"line_start":969,"line_end":969,"column_start":1,"column_end":50}},{"value":"/     dt_f64: DateTime<Local>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":36112,"byte_end":36144,"line_start":970,"line_end":970,"column_start":1,"column_end":33}},{"value":"/     #[serde_as(as = \"TimestampSeconds<String>\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":36145,"byte_end":36197,"line_start":971,"line_end":971,"column_start":1,"column_end":53}},{"value":"/     dt_string: DateTime<Utc>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":36198,"byte_end":36231,"line_start":972,"line_end":972,"column_start":1,"column_end":34}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":36232,"byte_end":36238,"line_start":973,"line_end":973,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":36239,"byte_end":36242,"line_start":974,"line_end":974,"column_start":1,"column_end":4}},{"value":"/ // Serialization","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":36243,"byte_end":36263,"line_start":975,"line_end":975,"column_start":1,"column_end":21}},{"value":"/ // See how the values get rounded, since subsecond precision is not allowed.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":36264,"byte_end":36344,"line_start":976,"line_end":976,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":36345,"byte_end":36348,"line_start":977,"line_end":977,"column_start":1,"column_end":4}},{"value":"/ let ts = Timestamps {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":36349,"byte_end":36374,"line_start":978,"line_end":978,"column_start":1,"column_end":26}},{"value":"/     dt_i64: Utc.timestamp(-12345, 0),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":36375,"byte_end":36416,"line_start":979,"line_end":979,"column_start":1,"column_end":42}},{"value":"/     dt_f64: Local.timestamp(-12345, 500_000_000),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":36417,"byte_end":36470,"line_start":980,"line_end":980,"column_start":1,"column_end":54}},{"value":"/     dt_string: Utc.timestamp(12345, 999_999_999),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":36471,"byte_end":36524,"line_start":981,"line_end":981,"column_start":1,"column_end":54}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":36525,"byte_end":36531,"line_start":982,"line_end":982,"column_start":1,"column_end":7}},{"value":"/ // Observe the different datatypes","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":36532,"byte_end":36570,"line_start":983,"line_end":983,"column_start":1,"column_end":39}},{"value":"/ let expected = json!({","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":36571,"byte_end":36597,"line_start":984,"line_end":984,"column_start":1,"column_end":27}},{"value":"/     \"dt_i64\": -12345,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":36598,"byte_end":36623,"line_start":985,"line_end":985,"column_start":1,"column_end":26}},{"value":"/     \"dt_f64\": -12345.0,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":36624,"byte_end":36651,"line_start":986,"line_end":986,"column_start":1,"column_end":28}},{"value":"/     \"dt_string\": \"12346\",","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":36652,"byte_end":36681,"line_start":987,"line_end":987,"column_start":1,"column_end":30}},{"value":"/ });","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":36682,"byte_end":36689,"line_start":988,"line_end":988,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(expected, serde_json::to_value(&ts).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":36690,"byte_end":36751,"line_start":989,"line_end":989,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":36752,"byte_end":36755,"line_start":990,"line_end":990,"column_start":1,"column_end":4}},{"value":"/ // Deserialization works too","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":36756,"byte_end":36788,"line_start":991,"line_end":991,"column_start":1,"column_end":33}},{"value":"/ // Subsecond precision in numbers will be rounded away","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":36789,"byte_end":36847,"line_start":992,"line_end":992,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":36848,"byte_end":36851,"line_start":993,"line_end":993,"column_start":1,"column_end":4}},{"value":"/ let json = json!({","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":36852,"byte_end":36874,"line_start":994,"line_end":994,"column_start":1,"column_end":23}},{"value":"/     \"dt_i64\": -12345,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":36875,"byte_end":36900,"line_start":995,"line_end":995,"column_start":1,"column_end":26}},{"value":"/     \"dt_f64\": -12345.5,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":36901,"byte_end":36928,"line_start":996,"line_end":996,"column_start":1,"column_end":28}},{"value":"/     \"dt_string\": \"12346\",","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":36929,"byte_end":36958,"line_start":997,"line_end":997,"column_start":1,"column_end":30}},{"value":"/ });","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":36959,"byte_end":36966,"line_start":998,"line_end":998,"column_start":1,"column_end":8}},{"value":"/ let expected = Timestamps {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":36967,"byte_end":36998,"line_start":999,"line_end":999,"column_start":1,"column_end":32}},{"value":"/     dt_i64: Utc.timestamp(-12345, 0),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":36999,"byte_end":37040,"line_start":1000,"line_end":1000,"column_start":1,"column_end":42}},{"value":"/     dt_f64: Local.timestamp(-12346, 0),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":37041,"byte_end":37084,"line_start":1001,"line_end":1001,"column_start":1,"column_end":44}},{"value":"/     dt_string: Utc.timestamp(12346, 0),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":37085,"byte_end":37128,"line_start":1002,"line_end":1002,"column_start":1,"column_end":44}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":37129,"byte_end":37135,"line_start":1003,"line_end":1003,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(expected, serde_json::from_value(json).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":37136,"byte_end":37200,"line_start":1004,"line_end":1004,"column_start":1,"column_end":65}},{"value":"/ # }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":37201,"byte_end":37208,"line_start":1005,"line_end":1005,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":37209,"byte_end":37216,"line_start":1006,"line_end":1006,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":37217,"byte_end":37220,"line_start":1007,"line_end":1007,"column_start":1,"column_end":4}},{"value":"/ [`SystemTime`]: std::time::SystemTime","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":37221,"byte_end":37262,"line_start":1008,"line_end":1008,"column_start":1,"column_end":42}},{"value":"/ [feature flag]: https://docs.rs/serde_with/1.5.1/serde_with/guide/feature_flags/index.html","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":37263,"byte_end":37357,"line_start":1009,"line_end":1009,"column_start":1,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":5430},"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":42878,"byte_end":42902,"line_start":1139,"line_end":1139,"column_start":12,"column_end":36},"name":"TimestampSecondsWithFrac","qualname":"::TimestampSecondsWithFrac","value":"","parent":null,"children":[],"decl_id":null,"docs":" De/Serialize timestamps as seconds since the UNIX epoch","sig":null,"attributes":[{"value":"/ De/Serialize timestamps as seconds since the UNIX epoch","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":37555,"byte_end":37614,"line_start":1016,"line_end":1016,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":37615,"byte_end":37618,"line_start":1017,"line_end":1017,"column_start":1,"column_end":4}},{"value":"/ De/serialize timestamps as seconds since the UNIX epoch.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":37619,"byte_end":37679,"line_start":1018,"line_end":1018,"column_start":1,"column_end":61}},{"value":"/ Subsecond precision is *only* supported for [`TimestampSecondsWithFrac`], but not for [`TimestampSeconds`].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":37680,"byte_end":37791,"line_start":1019,"line_end":1019,"column_start":1,"column_end":112}},{"value":"/ You can configure the serialization format between integers, floats, and stringified numbers with the `FORMAT` specifier and configure the deserialization with the `STRICTNESS` specifier.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":37792,"byte_end":37983,"line_start":1020,"line_end":1020,"column_start":1,"column_end":192}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":37984,"byte_end":37987,"line_start":1021,"line_end":1021,"column_start":1,"column_end":4}},{"value":"/ The `STRICTNESS` specifier can either be [`formats::Strict`] or [`formats::Flexible`] and defaults to [`formats::Strict`].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":37988,"byte_end":38114,"line_start":1022,"line_end":1022,"column_start":1,"column_end":127}},{"value":"/ [`formats::Strict`] means that deserialization only supports the type given in `FORMAT`, e.g., if `FORMAT` is `i64` deserialization from a `f64` will error.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":38115,"byte_end":38275,"line_start":1023,"line_end":1023,"column_start":1,"column_end":161}},{"value":"/ [`formats::Flexible`] means that deserialization will perform a best effort to extract the correct timestamp and allows deserialization from any type.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":38276,"byte_end":38430,"line_start":1024,"line_end":1024,"column_start":1,"column_end":155}},{"value":"/ For example, deserializing `TimestampSeconds<f64, Flexible>` will discard any subsecond precision during deserialization from `f64` and will parse a `String` as an integer number.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":38431,"byte_end":38614,"line_start":1025,"line_end":1025,"column_start":1,"column_end":184}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":38615,"byte_end":38618,"line_start":1026,"line_end":1026,"column_start":1,"column_end":4}},{"value":"/ This type also supports `chrono::DateTime` with the `chrono`-[feature flag].","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":38619,"byte_end":38699,"line_start":1027,"line_end":1027,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":38700,"byte_end":38703,"line_start":1028,"line_end":1028,"column_start":1,"column_end":4}},{"value":"/ | Timestamp Type            | Converter                  | Available `FORMAT`s    |","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":38704,"byte_end":38791,"line_start":1029,"line_end":1029,"column_start":1,"column_end":88}},{"value":"/ | ------------------------- | -------------------------- | ---------------------- |","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":38792,"byte_end":38879,"line_start":1030,"line_end":1030,"column_start":1,"column_end":88}},{"value":"/ | `std::time::SystemTime`   | `TimestampSeconds`         | `i64`, `f64`, `String` |","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":38880,"byte_end":38967,"line_start":1031,"line_end":1031,"column_start":1,"column_end":88}},{"value":"/ | `std::time::SystemTime`   | `TimestampSecondsWithFrac` | `f64`, `String`        |","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":38968,"byte_end":39055,"line_start":1032,"line_end":1032,"column_start":1,"column_end":88}},{"value":"/ | `chrono::DateTime<Utc>`   | `TimestampSeconds`         | `i64`, `f64`, `String` |","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":39056,"byte_end":39143,"line_start":1033,"line_end":1033,"column_start":1,"column_end":88}},{"value":"/ | `chrono::DateTime<Utc>`   | `TimestampSecondsWithFrac` | `f64`, `String`        |","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":39144,"byte_end":39231,"line_start":1034,"line_end":1034,"column_start":1,"column_end":88}},{"value":"/ | `chrono::DateTime<Local>` | `TimestampSeconds`         | `i64`, `f64`, `String` |","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":39232,"byte_end":39319,"line_start":1035,"line_end":1035,"column_start":1,"column_end":88}},{"value":"/ | `chrono::DateTime<Local>` | `TimestampSecondsWithFrac` | `f64`, `String`        |","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":39320,"byte_end":39407,"line_start":1036,"line_end":1036,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":39408,"byte_end":39411,"line_start":1037,"line_end":1037,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":39412,"byte_end":39426,"line_start":1038,"line_end":1038,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":39427,"byte_end":39430,"line_start":1039,"line_end":1039,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":39431,"byte_end":39442,"line_start":1040,"line_end":1040,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"macros\")] {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":39443,"byte_end":39477,"line_start":1041,"line_end":1041,"column_start":1,"column_end":35}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":39478,"byte_end":39527,"line_start":1042,"line_end":1042,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":39528,"byte_end":39555,"line_start":1043,"line_end":1043,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::{serde_as, TimestampSecondsWithFrac};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":39556,"byte_end":39615,"line_start":1044,"line_end":1044,"column_start":1,"column_end":60}},{"value":"/ use std::time::{Duration, SystemTime};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":39616,"byte_end":39658,"line_start":1045,"line_end":1045,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":39659,"byte_end":39662,"line_start":1046,"line_end":1046,"column_start":1,"column_end":4}},{"value":"/ #[serde_as]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":39663,"byte_end":39678,"line_start":1047,"line_end":1047,"column_start":1,"column_end":16}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":39679,"byte_end":39712,"line_start":1048,"line_end":1048,"column_start":1,"column_end":34}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":39713,"byte_end":39750,"line_start":1049,"line_end":1049,"column_start":1,"column_end":38}},{"value":"/ struct Timestamps {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":39751,"byte_end":39774,"line_start":1050,"line_end":1050,"column_start":1,"column_end":24}},{"value":"/     #[serde_as(as = \"TimestampSecondsWithFrac<f64>\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":39775,"byte_end":39832,"line_start":1051,"line_end":1051,"column_start":1,"column_end":58}},{"value":"/     st_f64: SystemTime,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":39833,"byte_end":39860,"line_start":1052,"line_end":1052,"column_start":1,"column_end":28}},{"value":"/     #[serde_as(as = \"TimestampSecondsWithFrac<String>\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":39861,"byte_end":39921,"line_start":1053,"line_end":1053,"column_start":1,"column_end":61}},{"value":"/     st_string: SystemTime,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":39922,"byte_end":39952,"line_start":1054,"line_end":1054,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":39953,"byte_end":39959,"line_start":1055,"line_end":1055,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":39960,"byte_end":39963,"line_start":1056,"line_end":1056,"column_start":1,"column_end":4}},{"value":"/ // Serialization","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":39964,"byte_end":39984,"line_start":1057,"line_end":1057,"column_start":1,"column_end":21}},{"value":"/ // See how the values get rounded, since subsecond precision is not allowed.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":39985,"byte_end":40065,"line_start":1058,"line_end":1058,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":40066,"byte_end":40069,"line_start":1059,"line_end":1059,"column_start":1,"column_end":4}},{"value":"/ let ts = Timestamps {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":40070,"byte_end":40095,"line_start":1060,"line_end":1060,"column_start":1,"column_end":26}},{"value":"/     st_f64: SystemTime::UNIX_EPOCH.checked_add(Duration::new(12345, 500_000_000)).unwrap(),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":40096,"byte_end":40191,"line_start":1061,"line_end":1061,"column_start":1,"column_end":96}},{"value":"/     st_string: SystemTime::UNIX_EPOCH.checked_add(Duration::new(12345, 999_999_000)).unwrap(),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":40192,"byte_end":40290,"line_start":1062,"line_end":1062,"column_start":1,"column_end":99}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":40291,"byte_end":40297,"line_start":1063,"line_end":1063,"column_start":1,"column_end":7}},{"value":"/ // Observe the different datatypes","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":40298,"byte_end":40336,"line_start":1064,"line_end":1064,"column_start":1,"column_end":39}},{"value":"/ let expected = json!({","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":40337,"byte_end":40363,"line_start":1065,"line_end":1065,"column_start":1,"column_end":27}},{"value":"/     \"st_f64\": 12345.5,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":40364,"byte_end":40390,"line_start":1066,"line_end":1066,"column_start":1,"column_end":27}},{"value":"/     \"st_string\": \"12345.999999\",","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":40391,"byte_end":40427,"line_start":1067,"line_end":1067,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":40428,"byte_end":40435,"line_start":1068,"line_end":1068,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(expected, serde_json::to_value(&ts).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":40436,"byte_end":40497,"line_start":1069,"line_end":1069,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":40498,"byte_end":40501,"line_start":1070,"line_end":1070,"column_start":1,"column_end":4}},{"value":"/ // Deserialization works too","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":40502,"byte_end":40534,"line_start":1071,"line_end":1071,"column_start":1,"column_end":33}},{"value":"/ // Subsecond precision in numbers will be rounded away","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":40535,"byte_end":40593,"line_start":1072,"line_end":1072,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":40594,"byte_end":40597,"line_start":1073,"line_end":1073,"column_start":1,"column_end":4}},{"value":"/ let json = json!({","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":40598,"byte_end":40620,"line_start":1074,"line_end":1074,"column_start":1,"column_end":23}},{"value":"/     \"st_f64\": 12345.5,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":40621,"byte_end":40647,"line_start":1075,"line_end":1075,"column_start":1,"column_end":27}},{"value":"/     \"st_string\": \"12345.987654\",","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":40648,"byte_end":40684,"line_start":1076,"line_end":1076,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":40685,"byte_end":40692,"line_start":1077,"line_end":1077,"column_start":1,"column_end":8}},{"value":"/ let expected = Timestamps {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":40693,"byte_end":40724,"line_start":1078,"line_end":1078,"column_start":1,"column_end":32}},{"value":"/     st_f64: SystemTime::UNIX_EPOCH.checked_add(Duration::new(12345, 500_000_000)).unwrap(),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":40725,"byte_end":40820,"line_start":1079,"line_end":1079,"column_start":1,"column_end":96}},{"value":"/     st_string: SystemTime::UNIX_EPOCH.checked_add(Duration::new(12345, 987_654_000)).unwrap(),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":40821,"byte_end":40919,"line_start":1080,"line_end":1080,"column_start":1,"column_end":99}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":40920,"byte_end":40926,"line_start":1081,"line_end":1081,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(expected, serde_json::from_value(json).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":40927,"byte_end":40991,"line_start":1082,"line_end":1082,"column_start":1,"column_end":65}},{"value":"/ # }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":40992,"byte_end":40999,"line_start":1083,"line_end":1083,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":41000,"byte_end":41007,"line_start":1084,"line_end":1084,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":41008,"byte_end":41011,"line_start":1085,"line_end":1085,"column_start":1,"column_end":4}},{"value":"/ [`chrono::DateTime<Utc>`] and [`chrono::DateTime<Local>`] are also supported when using the `chrono` feature.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":41012,"byte_end":41125,"line_start":1086,"line_end":1086,"column_start":1,"column_end":114}},{"value":"/ Like [`SystemTime`], it is a signed timestamp, thus can be de/serialized as an `i64`.","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":41126,"byte_end":41215,"line_start":1087,"line_end":1087,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":41216,"byte_end":41219,"line_start":1088,"line_end":1088,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":41220,"byte_end":41231,"line_start":1089,"line_end":1089,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"macros\", feature = \"chrono\"))] {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":41232,"byte_end":41291,"line_start":1090,"line_end":1090,"column_start":1,"column_end":60}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":41292,"byte_end":41341,"line_start":1091,"line_end":1091,"column_start":1,"column_end":50}},{"value":"/ # use serde_json::json;","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":41342,"byte_end":41369,"line_start":1092,"line_end":1092,"column_start":1,"column_end":28}},{"value":"/ # use serde_with::{serde_as, TimestampSecondsWithFrac};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":41370,"byte_end":41429,"line_start":1093,"line_end":1093,"column_start":1,"column_end":60}},{"value":"/ # use chrono_crate::{DateTime, Local, TimeZone, Utc};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":41430,"byte_end":41487,"line_start":1094,"line_end":1094,"column_start":1,"column_end":58}},{"value":"/ # /* Ugliness to make the docs look nicer since I want to hide the rename of the chrono crate","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":41488,"byte_end":41585,"line_start":1095,"line_end":1095,"column_start":1,"column_end":98}},{"value":"/ use chrono::{DateTime, Local, TimeZone, Utc};","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":41586,"byte_end":41635,"line_start":1096,"line_end":1096,"column_start":1,"column_end":50}},{"value":"/ # */","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":41636,"byte_end":41644,"line_start":1097,"line_end":1097,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":41645,"byte_end":41648,"line_start":1098,"line_end":1098,"column_start":1,"column_end":4}},{"value":"/ #[serde_as]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":41649,"byte_end":41664,"line_start":1099,"line_end":1099,"column_start":1,"column_end":16}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":41665,"byte_end":41698,"line_start":1100,"line_end":1100,"column_start":1,"column_end":34}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":41699,"byte_end":41736,"line_start":1101,"line_end":1101,"column_start":1,"column_end":38}},{"value":"/ struct Timestamps {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":41737,"byte_end":41760,"line_start":1102,"line_end":1102,"column_start":1,"column_end":24}},{"value":"/     #[serde_as(as = \"TimestampSecondsWithFrac<f64>\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":41761,"byte_end":41818,"line_start":1103,"line_end":1103,"column_start":1,"column_end":58}},{"value":"/     dt_f64: DateTime<Utc>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":41819,"byte_end":41849,"line_start":1104,"line_end":1104,"column_start":1,"column_end":31}},{"value":"/     #[serde_as(as = \"TimestampSecondsWithFrac<String>\")]","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":41850,"byte_end":41910,"line_start":1105,"line_end":1105,"column_start":1,"column_end":61}},{"value":"/     dt_string: DateTime<Local>,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":41911,"byte_end":41946,"line_start":1106,"line_end":1106,"column_start":1,"column_end":36}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":41947,"byte_end":41953,"line_start":1107,"line_end":1107,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":41954,"byte_end":41957,"line_start":1108,"line_end":1108,"column_start":1,"column_end":4}},{"value":"/ // Serialization","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":41958,"byte_end":41978,"line_start":1109,"line_end":1109,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":41979,"byte_end":41982,"line_start":1110,"line_end":1110,"column_start":1,"column_end":4}},{"value":"/ let ts = Timestamps {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":41983,"byte_end":42008,"line_start":1111,"line_end":1111,"column_start":1,"column_end":26}},{"value":"/     dt_f64: Utc.timestamp(-12345, 500_000_000),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":42009,"byte_end":42060,"line_start":1112,"line_end":1112,"column_start":1,"column_end":52}},{"value":"/     dt_string: Local.timestamp(12345, 999_999_000),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":42061,"byte_end":42116,"line_start":1113,"line_end":1113,"column_start":1,"column_end":56}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":42117,"byte_end":42123,"line_start":1114,"line_end":1114,"column_start":1,"column_end":7}},{"value":"/ // Observe the different datatypes","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":42124,"byte_end":42162,"line_start":1115,"line_end":1115,"column_start":1,"column_end":39}},{"value":"/ let expected = json!({","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":42163,"byte_end":42189,"line_start":1116,"line_end":1116,"column_start":1,"column_end":27}},{"value":"/     \"dt_f64\": -12344.5,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":42190,"byte_end":42217,"line_start":1117,"line_end":1117,"column_start":1,"column_end":28}},{"value":"/     \"dt_string\": \"12345.999999\",","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":42218,"byte_end":42254,"line_start":1118,"line_end":1118,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":42255,"byte_end":42262,"line_start":1119,"line_end":1119,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(expected, serde_json::to_value(&ts).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":42263,"byte_end":42324,"line_start":1120,"line_end":1120,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":42325,"byte_end":42328,"line_start":1121,"line_end":1121,"column_start":1,"column_end":4}},{"value":"/ // Deserialization works too","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":42329,"byte_end":42361,"line_start":1122,"line_end":1122,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":42362,"byte_end":42365,"line_start":1123,"line_end":1123,"column_start":1,"column_end":4}},{"value":"/ let json = json!({","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":42366,"byte_end":42388,"line_start":1124,"line_end":1124,"column_start":1,"column_end":23}},{"value":"/     \"dt_f64\": -12344.5,","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":42389,"byte_end":42416,"line_start":1125,"line_end":1125,"column_start":1,"column_end":28}},{"value":"/     \"dt_string\": \"12345.987\",","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":42417,"byte_end":42450,"line_start":1126,"line_end":1126,"column_start":1,"column_end":34}},{"value":"/ });","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":42451,"byte_end":42458,"line_start":1127,"line_end":1127,"column_start":1,"column_end":8}},{"value":"/ let expected = Timestamps {","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":42459,"byte_end":42490,"line_start":1128,"line_end":1128,"column_start":1,"column_end":32}},{"value":"/     dt_f64: Utc.timestamp(-12345, 500_000_000),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":42491,"byte_end":42542,"line_start":1129,"line_end":1129,"column_start":1,"column_end":52}},{"value":"/     dt_string: Local.timestamp(12345, 987_000_000),","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":42543,"byte_end":42598,"line_start":1130,"line_end":1130,"column_start":1,"column_end":56}},{"value":"/ };","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":42599,"byte_end":42605,"line_start":1131,"line_end":1131,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(expected, serde_json::from_value(json).unwrap());","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":42606,"byte_end":42670,"line_start":1132,"line_end":1132,"column_start":1,"column_end":65}},{"value":"/ # }","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":42671,"byte_end":42678,"line_start":1133,"line_end":1133,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":42679,"byte_end":42686,"line_start":1134,"line_end":1134,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":42687,"byte_end":42690,"line_start":1135,"line_end":1135,"column_start":1,"column_end":4}},{"value":"/ [`SystemTime`]: std::time::SystemTime","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":42691,"byte_end":42732,"line_start":1136,"line_end":1136,"column_start":1,"column_end":42}},{"value":"/ [feature flag]: https://docs.rs/serde_with/1.5.1/serde_with/guide/feature_flags/index.html","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":42733,"byte_end":42827,"line_start":1137,"line_end":1137,"column_start":1,"column_end":95}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\impls.rs","byte_start":47248,"byte_end":47251,"line_start":19,"line_end":19,"column_start":48,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\impls.rs","byte_start":47580,"byte_end":47586,"line_start":33,"line_end":33,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\impls.rs","byte_start":47846,"byte_end":47859,"line_start":43,"line_end":43,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\impls.rs","byte_start":54231,"byte_end":54245,"line_start":243,"line_end":243,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\impls.rs","byte_start":61442,"byte_end":61446,"line_start":403,"line_end":403,"column_start":58,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\impls.rs","byte_start":63745,"byte_end":63762,"line_start":468,"line_end":468,"column_start":52,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\impls.rs","byte_start":64025,"byte_end":64046,"line_start":477,"line_end":477,"column_start":41,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\impls.rs","byte_start":69511,"byte_end":69525,"line_start":629,"line_end":629,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\impls.rs","byte_start":70585,"byte_end":70598,"line_start":662,"line_end":662,"column_start":43,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\impls.rs","byte_start":70844,"byte_end":70863,"line_start":671,"line_end":671,"column_start":54,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":46301,"byte_end":46318,"line_start":80,"line_end":80,"column_start":17,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":46471,"byte_end":46488,"line_start":87,"line_end":87,"column_start":38,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\error_on_duplicate.rs","byte_start":73985,"byte_end":73992,"line_start":20,"line_end":20,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\error_on_duplicate.rs","byte_start":74427,"byte_end":74435,"line_start":39,"line_end":39,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\error_on_duplicate.rs","byte_start":74694,"byte_end":74701,"line_start":54,"line_end":54,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\error_on_duplicate.rs","byte_start":75168,"byte_end":75176,"line_start":73,"line_end":73,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\first_value_wins.rs","byte_start":76066,"byte_end":76073,"line_start":22,"line_end":22,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\first_value_wins.rs","byte_start":76605,"byte_end":76613,"line_start":43,"line_end":43,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\first_value_wins.rs","byte_start":76949,"byte_end":76956,"line_start":59,"line_end":59,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\first_value_wins.rs","byte_start":77655,"byte_end":77663,"line_start":86,"line_end":86,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\last_value_wins.rs","byte_start":78433,"byte_end":78440,"line_start":13,"line_end":13,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\last_value_wins.rs","byte_start":78919,"byte_end":78927,"line_start":33,"line_end":33,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\formats.rs","byte_start":83802,"byte_end":83808,"line_start":79,"line_end":79,"column_start":21,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\formats.rs","byte_start":83958,"byte_end":83966,"line_start":84,"line_end":84,"column_start":21,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":86685,"byte_end":86691,"line_start":89,"line_end":89,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":90387,"byte_end":90393,"line_start":209,"line_end":209,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":93986,"byte_end":94005,"line_start":320,"line_end":320,"column_start":11,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":352},{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":102302,"byte_end":102312,"line_start":571,"line_end":571,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":105555,"byte_end":105565,"line_start":675,"line_end":675,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":107884,"byte_end":107894,"line_start":744,"line_end":744,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":110165,"byte_end":110175,"line_start":813,"line_end":813,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":113249,"byte_end":113259,"line_start":916,"line_end":916,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":116516,"byte_end":116537,"line_start":1027,"line_end":1027,"column_start":39,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":524},{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":121574,"byte_end":121588,"line_start":1196,"line_end":1196,"column_start":42,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":124992,"byte_end":125007,"line_start":1307,"line_end":1307,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":130030,"byte_end":130040,"line_start":1461,"line_end":1461,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":130642,"byte_end":130649,"line_start":1484,"line_end":1484,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":133395,"byte_end":133415,"line_start":1589,"line_end":1589,"column_start":32,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":645},{"krate":0,"index":647},{"krate":0,"index":649},{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\impls.rs","byte_start":143197,"byte_end":143200,"line_start":12,"line_end":12,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\impls.rs","byte_start":143470,"byte_end":143476,"line_start":24,"line_end":24,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\impls.rs","byte_start":145582,"byte_end":145596,"line_start":88,"line_end":88,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\impls.rs","byte_start":149249,"byte_end":149253,"line_start":193,"line_end":193,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":717}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\impls.rs","byte_start":150310,"byte_end":150327,"line_start":226,"line_end":226,"column_start":50,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\impls.rs","byte_start":152202,"byte_end":152216,"line_start":284,"line_end":284,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\impls.rs","byte_start":152456,"byte_end":152469,"line_start":296,"line_end":296,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":732}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\impls.rs","byte_start":152681,"byte_end":152700,"line_start":305,"line_end":305,"column_start":42,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":739}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":142238,"byte_end":142253,"line_start":82,"line_end":82,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":142469,"byte_end":142484,"line_start":92,"line_end":92,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":142722,"byte_end":142737,"line_start":104,"line_end":104,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils\\duration.rs","byte_start":159137,"byte_end":159141,"line_start":23,"line_end":23,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils\\duration.rs","byte_start":159700,"byte_end":159714,"line_start":51,"line_end":51,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils\\duration.rs","byte_start":160751,"byte_end":160765,"line_start":86,"line_end":86,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils\\duration.rs","byte_start":160929,"byte_end":160943,"line_start":95,"line_end":95,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils\\duration.rs","byte_start":161469,"byte_end":161484,"line_start":111,"line_end":111,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils\\duration.rs","byte_start":162307,"byte_end":162322,"line_start":140,"line_end":140,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils\\duration.rs","byte_start":162905,"byte_end":162920,"line_start":162,"line_end":162,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils\\duration.rs","byte_start":163505,"byte_end":163520,"line_start":184,"line_end":184,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils\\duration.rs","byte_start":164118,"byte_end":164141,"line_start":206,"line_end":206,"column_start":50,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils\\duration.rs","byte_start":164516,"byte_end":164539,"line_start":221,"line_end":221,"column_start":50,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":832}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils\\duration.rs","byte_start":164952,"byte_end":164975,"line_start":238,"line_end":238,"column_start":28,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":842},{"krate":0,"index":844},{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils\\duration.rs","byte_start":166381,"byte_end":166396,"line_start":284,"line_end":284,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":850}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils\\duration.rs","byte_start":166695,"byte_end":166710,"line_start":293,"line_end":293,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils\\duration.rs","byte_start":167196,"byte_end":167211,"line_start":309,"line_end":309,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils\\duration.rs","byte_start":167545,"byte_end":167560,"line_start":319,"line_end":319,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils\\duration.rs","byte_start":168082,"byte_end":168097,"line_start":335,"line_end":335,"column_start":58,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":870}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils\\duration.rs","byte_start":168388,"byte_end":168411,"line_start":347,"line_end":347,"column_start":50,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":874}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils\\duration.rs","byte_start":168737,"byte_end":168760,"line_start":357,"line_end":357,"column_start":50,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils\\duration.rs","byte_start":169529,"byte_end":169552,"line_start":377,"line_end":377,"column_start":58,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":883}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils.rs","byte_start":155837,"byte_end":155844,"line_start":24,"line_end":24,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils.rs","byte_start":156084,"byte_end":156091,"line_start":36,"line_end":36,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils.rs","byte_start":156778,"byte_end":156785,"line_start":62,"line_end":62,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":938}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils.rs","byte_start":157025,"byte_end":157032,"line_start":74,"line_end":74,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\with_prefix.rs","byte_start":176657,"byte_end":176667,"line_start":146,"line_end":146,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":980}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\with_prefix.rs","byte_start":176968,"byte_end":176978,"line_start":161,"line_end":161,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1016},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\with_prefix.rs","byte_start":182492,"byte_end":182502,"line_start":339,"line_end":339,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1032},{"krate":0,"index":1034},{"krate":0,"index":1037}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\with_prefix.rs","byte_start":183478,"byte_end":183488,"line_start":382,"line_end":382,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\with_prefix.rs","byte_start":184078,"byte_end":184088,"line_start":404,"line_end":404,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1050},{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\with_prefix.rs","byte_start":184460,"byte_end":184470,"line_start":421,"line_end":421,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1060},{"krate":0,"index":1062},{"krate":0,"index":5144},{"krate":0,"index":5146},{"krate":0,"index":5148},{"krate":0,"index":5150},{"krate":0,"index":5152},{"krate":0,"index":5154},{"krate":0,"index":5156},{"krate":0,"index":5158},{"krate":0,"index":5160},{"krate":0,"index":5162},{"krate":0,"index":5164},{"krate":0,"index":5166},{"krate":0,"index":5168},{"krate":0,"index":5170},{"krate":0,"index":5172},{"krate":0,"index":5174},{"krate":0,"index":5176},{"krate":0,"index":5178},{"krate":0,"index":5180},{"krate":0,"index":5182},{"krate":0,"index":5184},{"krate":0,"index":5186},{"krate":0,"index":5188},{"krate":0,"index":5190},{"krate":0,"index":5192},{"krate":0,"index":5194},{"krate":0,"index":5196},{"krate":0,"index":5198}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\with_prefix.rs","byte_start":185613,"byte_end":185623,"line_start":465,"line_end":465,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\with_prefix.rs","byte_start":186086,"byte_end":186096,"line_start":486,"line_end":486,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1079}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\with_prefix.rs","byte_start":187098,"byte_end":187114,"line_start":523,"line_end":523,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\with_prefix.rs","byte_start":188008,"byte_end":188024,"line_start":558,"line_end":558,"column_start":40,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":5200},{"krate":0,"index":5202},{"krate":0,"index":5204},{"krate":0,"index":5206},{"krate":0,"index":5208},{"krate":0,"index":5210},{"krate":0,"index":5212},{"krate":0,"index":5214},{"krate":0,"index":5216},{"krate":0,"index":5218},{"krate":0,"index":5220},{"krate":0,"index":5222},{"krate":0,"index":5224},{"krate":0,"index":5226},{"krate":0,"index":5228},{"krate":0,"index":5230},{"krate":0,"index":5232},{"krate":0,"index":5234},{"krate":0,"index":5236},{"krate":0,"index":5238},{"krate":0,"index":5240},{"krate":0,"index":5242},{"krate":0,"index":5244},{"krate":0,"index":5246},{"krate":0,"index":5248},{"krate":0,"index":5250},{"krate":0,"index":5252},{"krate":0,"index":5254},{"krate":0,"index":5256},{"krate":0,"index":5258}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\with_prefix.rs","byte_start":188536,"byte_end":188552,"line_start":578,"line_end":578,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":9841,"byte_end":9855,"line_start":279,"line_end":279,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1127}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":10100,"byte_end":10114,"line_start":290,"line_end":290,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1129}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":12343,"byte_end":12345,"line_start":340,"line_end":340,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1132},{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":7554,"byte_end":7556,"line_start":208,"line_end":208,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":4}},{"kind":"Mod","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":7610,"byte_end":7617,"line_start":211,"line_end":211,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":252}},{"kind":"Mod","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":7703,"byte_end":7707,"line_start":216,"line_end":216,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":259}},{"kind":"Mod","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":7717,"byte_end":7720,"line_start":217,"line_end":217,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":671}},{"kind":"Mod","span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":7756,"byte_end":7767,"line_start":220,"line_end":220,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":952}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\impls.rs","byte_start":47248,"byte_end":47251,"line_start":19,"line_end":19,"column_start":48,"column_end":51},"kind":{"Impl":{"id":0}},"from":{"krate":5,"index":90},"to":{"krate":0,"index":123}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\impls.rs","byte_start":47580,"byte_end":47586,"line_start":33,"line_end":33,"column_start":51,"column_end":57},"kind":{"Impl":{"id":1}},"from":{"krate":2,"index":31855},"to":{"krate":0,"index":123}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\impls.rs","byte_start":47846,"byte_end":47859,"line_start":43,"line_end":43,"column_start":42,"column_end":55},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":49},"to":{"krate":13,"index":1276}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\impls.rs","byte_start":54231,"byte_end":54245,"line_start":243,"line_end":243,"column_start":40,"column_end":54},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":5328},"to":{"krate":0,"index":123}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\impls.rs","byte_start":61442,"byte_end":61446,"line_start":403,"line_end":403,"column_start":58,"column_end":62},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":5319},"to":{"krate":0,"index":123}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\impls.rs","byte_start":63745,"byte_end":63762,"line_start":468,"line_end":468,"column_start":52,"column_end":69},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":5337},"to":{"krate":0,"index":123}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\impls.rs","byte_start":64025,"byte_end":64046,"line_start":477,"line_end":477,"column_start":41,"column_end":62},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":89},"to":{"krate":13,"index":1276}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\impls.rs","byte_start":69511,"byte_end":69525,"line_start":629,"line_end":629,"column_start":45,"column_end":59},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":5346},"to":{"krate":0,"index":123}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\impls.rs","byte_start":70585,"byte_end":70598,"line_start":662,"line_end":662,"column_start":43,"column_end":56},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":5361},"to":{"krate":0,"index":123}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\impls.rs","byte_start":70844,"byte_end":70863,"line_start":671,"line_end":671,"column_start":54,"column_end":73},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":3508},"to":{"krate":0,"index":123}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":45931,"byte_end":45936,"line_start":66,"line_end":66,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":2043},"to":{"krate":0,"index":123}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":46301,"byte_end":46318,"line_start":80,"line_end":80,"column_start":17,"column_end":34},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":3447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\de\\mod.rs","byte_start":46471,"byte_end":46488,"line_start":87,"line_end":87,"column_start":38,"column_end":55},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":3447},"to":{"krate":13,"index":1192}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\error_on_duplicate.rs","byte_start":73985,"byte_end":73992,"line_start":20,"line_end":20,"column_start":46,"column_end":53},"kind":{"Impl":{"id":13}},"from":{"krate":1,"index":6681},"to":{"krate":0,"index":151}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\error_on_duplicate.rs","byte_start":74427,"byte_end":74435,"line_start":39,"line_end":39,"column_start":43,"column_end":51},"kind":{"Impl":{"id":14}},"from":{"krate":5,"index":5146},"to":{"krate":0,"index":151}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\error_on_duplicate.rs","byte_start":74694,"byte_end":74701,"line_start":54,"line_end":54,"column_start":52,"column_end":59},"kind":{"Impl":{"id":15}},"from":{"krate":1,"index":6655},"to":{"krate":0,"index":155}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\error_on_duplicate.rs","byte_start":75168,"byte_end":75176,"line_start":73,"line_end":73,"column_start":49,"column_end":57},"kind":{"Impl":{"id":16}},"from":{"krate":5,"index":726},"to":{"krate":0,"index":155}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\first_value_wins.rs","byte_start":76066,"byte_end":76073,"line_start":22,"line_end":22,"column_start":48,"column_end":55},"kind":{"Impl":{"id":17}},"from":{"krate":1,"index":6681},"to":{"krate":0,"index":190}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\first_value_wins.rs","byte_start":76605,"byte_end":76613,"line_start":43,"line_end":43,"column_start":45,"column_end":53},"kind":{"Impl":{"id":18}},"from":{"krate":5,"index":5146},"to":{"krate":0,"index":190}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\first_value_wins.rs","byte_start":76949,"byte_end":76956,"line_start":59,"line_end":59,"column_start":54,"column_end":61},"kind":{"Impl":{"id":19}},"from":{"krate":1,"index":6655},"to":{"krate":0,"index":194}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\first_value_wins.rs","byte_start":77655,"byte_end":77663,"line_start":86,"line_end":86,"column_start":51,"column_end":59},"kind":{"Impl":{"id":20}},"from":{"krate":5,"index":726},"to":{"krate":0,"index":194}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\last_value_wins.rs","byte_start":78433,"byte_end":78440,"line_start":13,"line_end":13,"column_start":47,"column_end":54},"kind":{"Impl":{"id":21}},"from":{"krate":1,"index":6681},"to":{"krate":0,"index":229}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\duplicate_key_impls\\last_value_wins.rs","byte_start":78919,"byte_end":78927,"line_start":33,"line_end":33,"column_start":44,"column_end":52},"kind":{"Impl":{"id":22}},"from":{"krate":5,"index":5146},"to":{"krate":0,"index":229}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\formats.rs","byte_start":83802,"byte_end":83808,"line_start":79,"line_end":79,"column_start":21,"column_end":27},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":3490},"to":{"krate":0,"index":256}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\formats.rs","byte_start":83958,"byte_end":83966,"line_start":84,"line_end":84,"column_start":21,"column_end":29},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":3499},"to":{"krate":0,"index":256}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":86685,"byte_end":86691,"line_start":89,"line_end":89,"column_start":39,"column_end":45},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":296},"to":{"krate":13,"index":1276}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":90387,"byte_end":90393,"line_start":209,"line_end":209,"column_start":39,"column_end":45},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":334},"to":{"krate":13,"index":1276}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":93986,"byte_end":94005,"line_start":320,"line_end":320,"column_start":11,"column_end":30},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":3508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":102302,"byte_end":102312,"line_start":571,"line_end":571,"column_start":42,"column_end":52},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":387},"to":{"krate":13,"index":1276}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":105555,"byte_end":105565,"line_start":675,"line_end":675,"column_start":45,"column_end":55},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":412},"to":{"krate":13,"index":1276}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":107884,"byte_end":107894,"line_start":744,"line_end":744,"column_start":42,"column_end":52},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":439},"to":{"krate":13,"index":1276}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":110165,"byte_end":110175,"line_start":813,"line_end":813,"column_start":42,"column_end":52},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":463},"to":{"krate":13,"index":1276}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":113249,"byte_end":113259,"line_start":916,"line_end":916,"column_start":45,"column_end":55},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":488},"to":{"krate":13,"index":1276}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":116516,"byte_end":116537,"line_start":1027,"line_end":1027,"column_start":39,"column_end":60},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":513},"to":{"krate":13,"index":1276}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":121574,"byte_end":121588,"line_start":1196,"line_end":1196,"column_start":42,"column_end":56},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":546},"to":{"krate":13,"index":1276}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":124992,"byte_end":125007,"line_start":1307,"line_end":1307,"column_start":38,"column_end":53},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":572},"to":{"krate":13,"index":1276}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":130030,"byte_end":130040,"line_start":1461,"line_end":1461,"column_start":41,"column_end":51},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":601},"to":{"krate":13,"index":1276}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":130642,"byte_end":130649,"line_start":1484,"line_end":1484,"column_start":37,"column_end":44},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":616},"to":{"krate":2,"index":5290}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\rust.rs","byte_start":133395,"byte_end":133415,"line_start":1589,"line_end":1589,"column_start":32,"column_end":52},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":637},"to":{"krate":13,"index":1276}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\impls.rs","byte_start":143197,"byte_end":143200,"line_start":12,"line_end":12,"column_start":36,"column_end":39},"kind":{"Impl":{"id":54}},"from":{"krate":5,"index":90},"to":{"krate":0,"index":743}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\impls.rs","byte_start":143470,"byte_end":143476,"line_start":24,"line_end":24,"column_start":39,"column_end":45},"kind":{"Impl":{"id":55}},"from":{"krate":2,"index":31855},"to":{"krate":0,"index":743}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\impls.rs","byte_start":145582,"byte_end":145596,"line_start":88,"line_end":88,"column_start":28,"column_end":42},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":5328},"to":{"krate":0,"index":743}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\impls.rs","byte_start":149249,"byte_end":149253,"line_start":193,"line_end":193,"column_start":39,"column_end":43},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":5319},"to":{"krate":0,"index":743}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\impls.rs","byte_start":150310,"byte_end":150327,"line_start":226,"line_end":226,"column_start":50,"column_end":67},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":5337},"to":{"krate":0,"index":743}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\impls.rs","byte_start":152202,"byte_end":152216,"line_start":284,"line_end":284,"column_start":33,"column_end":47},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":5346},"to":{"krate":0,"index":743}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\impls.rs","byte_start":152456,"byte_end":152469,"line_start":296,"line_end":296,"column_start":31,"column_end":44},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":5361},"to":{"krate":0,"index":743}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\impls.rs","byte_start":152681,"byte_end":152700,"line_start":305,"line_end":305,"column_start":42,"column_end":61},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":3508},"to":{"krate":0,"index":743}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":142238,"byte_end":142253,"line_start":82,"line_end":82,"column_start":16,"column_end":31},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":5100},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":142469,"byte_end":142484,"line_start":92,"line_end":92,"column_start":30,"column_end":45},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":5100},"to":{"krate":13,"index":1680}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\ser\\mod.rs","byte_start":142722,"byte_end":142737,"line_start":104,"line_end":104,"column_start":32,"column_end":47},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":5100},"to":{"krate":2,"index":1956}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils\\duration.rs","byte_start":159137,"byte_end":159141,"line_start":23,"line_end":23,"column_start":6,"column_end":10},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":5111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils\\duration.rs","byte_start":159700,"byte_end":159714,"line_start":51,"line_end":51,"column_start":6,"column_end":20},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":5124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils\\duration.rs","byte_start":160751,"byte_end":160765,"line_start":86,"line_end":86,"column_start":26,"column_end":40},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":5124},"to":{"krate":2,"index":1956}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils\\duration.rs","byte_start":160929,"byte_end":160943,"line_start":95,"line_end":95,"column_start":28,"column_end":42},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":5124},"to":{"krate":2,"index":1956}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils\\duration.rs","byte_start":161469,"byte_end":161484,"line_start":111,"line_end":111,"column_start":50,"column_end":65},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":5370},"to":{"krate":0,"index":743}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils\\duration.rs","byte_start":162307,"byte_end":162322,"line_start":140,"line_end":140,"column_start":50,"column_end":65},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":5370},"to":{"krate":0,"index":743}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils\\duration.rs","byte_start":162905,"byte_end":162920,"line_start":162,"line_end":162,"column_start":50,"column_end":65},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":5370},"to":{"krate":0,"index":743}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils\\duration.rs","byte_start":163505,"byte_end":163520,"line_start":184,"line_end":184,"column_start":50,"column_end":65},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":5370},"to":{"krate":0,"index":743}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils\\duration.rs","byte_start":164118,"byte_end":164141,"line_start":206,"line_end":206,"column_start":50,"column_end":73},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":5390},"to":{"krate":0,"index":743}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils\\duration.rs","byte_start":164516,"byte_end":164539,"line_start":221,"line_end":221,"column_start":50,"column_end":73},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":5390},"to":{"krate":0,"index":743}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils\\duration.rs","byte_start":164952,"byte_end":164975,"line_start":238,"line_end":238,"column_start":28,"column_end":51},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":834},"to":{"krate":13,"index":1276}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils\\duration.rs","byte_start":166381,"byte_end":166396,"line_start":284,"line_end":284,"column_start":50,"column_end":65},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":5370},"to":{"krate":0,"index":123}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils\\duration.rs","byte_start":166695,"byte_end":166710,"line_start":293,"line_end":293,"column_start":50,"column_end":65},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":5370},"to":{"krate":0,"index":123}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils\\duration.rs","byte_start":167196,"byte_end":167211,"line_start":309,"line_end":309,"column_start":50,"column_end":65},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":5370},"to":{"krate":0,"index":123}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils\\duration.rs","byte_start":167545,"byte_end":167560,"line_start":319,"line_end":319,"column_start":50,"column_end":65},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":5370},"to":{"krate":0,"index":123}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils\\duration.rs","byte_start":168082,"byte_end":168097,"line_start":335,"line_end":335,"column_start":58,"column_end":73},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":5370},"to":{"krate":0,"index":123}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils\\duration.rs","byte_start":168388,"byte_end":168411,"line_start":347,"line_end":347,"column_start":50,"column_end":73},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":5390},"to":{"krate":0,"index":123}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils\\duration.rs","byte_start":168737,"byte_end":168760,"line_start":357,"line_end":357,"column_start":50,"column_end":73},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":5390},"to":{"krate":0,"index":123}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils\\duration.rs","byte_start":169529,"byte_end":169552,"line_start":377,"line_end":377,"column_start":58,"column_end":81},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":5390},"to":{"krate":0,"index":123}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils.rs","byte_start":155837,"byte_end":155844,"line_start":24,"line_end":24,"column_start":30,"column_end":37},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":895},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils.rs","byte_start":156084,"byte_end":156091,"line_start":36,"line_end":36,"column_start":43,"column_end":50},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":895},"to":{"krate":2,"index":5290}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils.rs","byte_start":156778,"byte_end":156785,"line_start":62,"line_end":62,"column_start":30,"column_end":37},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\utils.rs","byte_start":157025,"byte_end":157032,"line_start":74,"line_end":74,"column_start":43,"column_end":50},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":922},"to":{"krate":2,"index":5290}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\with_prefix.rs","byte_start":176657,"byte_end":176667,"line_start":146,"line_end":146,"column_start":27,"column_end":37},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":972},"to":{"krate":13,"index":1680}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\with_prefix.rs","byte_start":176968,"byte_end":176978,"line_start":161,"line_end":161,"column_start":28,"column_end":38},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":972},"to":{"krate":13,"index":1683}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\with_prefix.rs","byte_start":182492,"byte_end":182502,"line_start":339,"line_end":339,"column_start":30,"column_end":40},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":972},"to":{"krate":13,"index":1757}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\with_prefix.rs","byte_start":183478,"byte_end":183488,"line_start":382,"line_end":382,"column_start":33,"column_end":43},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":972},"to":{"krate":13,"index":1768}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\with_prefix.rs","byte_start":184078,"byte_end":184088,"line_start":404,"line_end":404,"column_start":43,"column_end":53},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":972},"to":{"krate":13,"index":1203}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\with_prefix.rs","byte_start":184460,"byte_end":184470,"line_start":421,"line_end":421,"column_start":40,"column_end":50},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":972},"to":{"krate":13,"index":1214}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\with_prefix.rs","byte_start":185613,"byte_end":185623,"line_start":465,"line_end":465,"column_start":35,"column_end":45},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":972},"to":{"krate":13,"index":1276}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\with_prefix.rs","byte_start":186086,"byte_end":186096,"line_start":486,"line_end":486,"column_start":37,"column_end":47},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":972},"to":{"krate":13,"index":1350}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\with_prefix.rs","byte_start":187098,"byte_end":187114,"line_start":523,"line_end":523,"column_start":35,"column_end":51},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1081},"to":{"krate":13,"index":1276}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\with_prefix.rs","byte_start":188008,"byte_end":188024,"line_start":558,"line_end":558,"column_start":40,"column_end":56},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1081},"to":{"krate":13,"index":1214}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\with_prefix.rs","byte_start":188536,"byte_end":188552,"line_start":578,"line_end":578,"column_start":37,"column_end":53},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1081},"to":{"krate":13,"index":1350}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":9841,"byte_end":9855,"line_start":279,"line_end":279,"column_start":20,"column_end":34},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":5260},"to":{"krate":0,"index":1124}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":10100,"byte_end":10114,"line_start":290,"line_end":290,"column_start":20,"column_end":34},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":5282},"to":{"krate":0,"index":1124}},{"span":{"file_name":"C:\\Users\\alain.witkowski\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\serde_with-1.5.1\\src\\lib.rs","byte_start":12343,"byte_end":12345,"line_start":340,"line_end":340,"column_start":9,"column_end":11},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":5304},"to":{"krate":4294967295,"index":4294967295}}]}